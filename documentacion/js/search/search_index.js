var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutPage.html",[0,0.244,1,0.913]],["body/components/AboutPage.html",[0,0.323,1,1.505,2,0.948,3,0.17,4,0.088,5,1.08,6,1.08,7,1.08,8,1.08,9,0.105,10,3.104,11,1.289,12,2.062,13,1.08,14,0.99,15,2.333,16,2.154,17,1.503,18,5.754,19,1.503,20,5.003,21,0.552,22,1.32,23,2.23,24,5.003,25,1.333,26,3.104,27,4.78,28,5.001,29,1.276,30,1.105,31,3.595,32,0.016,33,1.503,34,1.378,35,0.017,36,0.928,37,0.694,38,1.264,39,0.768,40,4.967,41,1.881,42,1.207,43,1.715,44,1.572,45,5.003,46,6.221,47,0.886,48,3.532,49,5.003,50,2.681,51,3.04,52,0.955,53,3.869,54,3.869,55,1.714,56,3.869,57,3.595,58,2.276,59,1.966,60,1.32,61,1.503,62,5.003,63,1.117,64,3.595,65,3.869,66,1.952,67,0.014,68,3.869,69,5.003,70,0.501,71,0.292,72,2.185,73,2.185,74,2.538,75,2.78,76,0.948,77,0.122,78,0.313,79,1.289,80,1.585,81,1.128,82,1.179,83,1.723,84,3.104,85,0.948,86,2.185,87,3.595,88,3.104,89,1.723,90,3.264,91,5.003,92,1.966,93,4.811,94,4.319,95,6.221,96,5.003,97,5.003,98,5.003,99,6.221,100,4.319,101,5.003,102,5.003,103,5.003,104,5.003,105,5.003,106,6.221,107,5.003,108,4.319,109,4.319,110,5.003,111,5.003,112,3.264,113,1.927,114,3.104,115,3.104,116,3.595,117,2.185,118,3.104,119,2.78,120,3.595,121,2.78,122,5.003,123,3.104,124,3.104,125,1.927,126,3.595,127,3.542,128,3.595,129,3.595,130,3.595,131,3.595,132,1.08,133,1.503,134,1.503,135,0.87,136,1.08,137,1.869,138,1.08,139,1.08,140,1.016,141,1.08,142,0.87,143,1.08,144,0.908,145,1.08,146,0.908,147,0.99,148,1.503,149,0.87,150,1.08,151,0.908,152,1.08,153,0.833,154,1.08,155,0.908,156,1.728,157,0.908,158,0.908,159,1.08,160,0.87,161,0.948,162,1.08,163,0.908,164,0.87,165,0.87,166,0.908,167,1.08,168,0.908,169,1.08,170,0.908,171,1.08,172,0.87,173,1.08,174,0.87,175,1.08,176,0.908,177,1.08,178,0.908,179,0.908,180,0.763,181,1.08,182,1.08,183,0.008,184,0.011,185,0.008,186,0.008]],["title/modules/AboutPageModule.html",[187,1.184,188,2.665]],["body/modules/AboutPageModule.html",[1,1.834,3,0.185,4,0.133,9,0.159,32,0.012,35,0.017,67,0.012,70,0.667,71,0.443,76,1.437,77,0.185,78,0.474,183,0.012,184,0.014,185,0.012,186,0.012,188,5.458,189,1.567,190,2.836,191,4.702,192,4.702,193,4.702,194,4.944,195,2.478,196,2.478,197,2.478,198,5.446,199,2.478,200,2.757,201,2.056,202,3.317,203,2.611,204,3.317,205,2.245,206,3.141,207,2.757,208,4.702,209,2.836,210,2.919,211,1.709,212,2.611]],["title/modules/AboutPageRoutingModule.html",[187,1.184,194,2.462]],["body/modules/AboutPageRoutingModule.html",[0,0.373,1,1.642,3,0.196,4,0.141,9,0.168,32,0.012,35,0.017,67,0.012,70,0.627,71,0.469,77,0.196,78,0.503,85,1.524,183,0.012,184,0.014,185,0.012,186,0.012,189,1.662,194,4.428,201,2.129,208,4.988,211,1.813,213,5.778,214,2.925,215,3.455,216,3.435,217,2.271,218,2.77,219,3.097,220,2.77]],["title/components/AdminPage.html",[0,0.244,142,0.913]],["body/components/AdminPage.html",[0,0.227,1,0.542,2,0.591,3,0.119,4,0.055,5,0.672,6,0.672,7,0.672,8,0.672,9,0.065,11,0.802,12,1.559,13,0.672,14,1.476,15,2.202,16,2.02,17,1.057,19,1.057,21,0.344,22,0.928,23,1.767,25,1.007,29,1.548,30,1.201,32,0.016,33,1.057,34,1.567,35,0.017,36,1.055,37,1.007,38,1.437,39,0.873,41,0.644,42,1.442,44,1.639,47,1.298,51,2.138,52,1.015,58,2.952,59,1.383,60,1.501,61,1.709,63,1.408,67,0.014,70,0.518,71,0.182,77,0.076,78,0.195,79,0.802,80,1.787,81,0.702,82,1.425,132,0.672,133,1.057,134,1.057,135,1.052,136,0.672,137,1.48,138,0.672,139,0.672,140,0.714,141,0.672,142,1.193,143,0.672,144,0.566,145,0.672,146,0.566,147,0.617,148,1.057,149,0.542,150,0.672,151,0.566,152,0.672,153,0.519,154,0.672,155,0.566,156,1.306,157,0.566,158,0.566,159,0.672,160,0.542,161,0.591,162,0.672,163,0.566,164,0.542,165,0.542,166,0.566,167,0.672,168,0.566,169,0.672,170,0.566,171,0.672,172,0.542,173,0.672,174,0.542,175,0.672,176,0.566,177,0.672,178,0.566,179,0.566,180,1.427,181,0.672,182,0.672,183,0.005,184,0.008,185,0.005,186,0.005,221,1.932,222,2.138,223,4.348,224,3.519,225,0.78,226,2.588,227,3.711,228,2.438,229,4.348,230,5.95,231,1.978,232,1.974,233,3.61,234,3.038,235,3.519,236,3.038,237,3.038,238,3.519,239,1.932,240,1.849,241,2.871,242,2.133,243,1.616,244,2.806,245,2.363,246,2.806,247,2.641,248,3.519,249,1.881,250,2.267,251,1.48,252,4.348,253,1.179,254,1.709,255,3.519,256,1.886,257,1.886,258,2.004,259,3.038,260,2.238,261,2.721,262,2.438,263,2.502,264,3.519,265,2.415,266,3.519,267,2.238,268,1.261,269,2.296,270,2.438,271,2.54,272,2.485,273,3.519,274,3.038,275,2.238,276,3.811,277,2.806,278,3.038,279,2.238,280,3.519,281,3.519,282,3.519,283,2.238,284,2.296,285,1.937,286,1.781,287,2.004,288,2.485,289,2.721,290,3.038,291,2.485,292,2.004,293,1.104,294,3.038,295,3.519,296,4.911,297,2.238,298,3.038,299,3.048,300,1.48,301,3.519,302,4.255,303,2.238,304,1.32,305,2.238,306,1.937,307,2.461,308,2.238,309,1.32,310,2.138,311,2.004,312,1.601,313,1.261,314,0.957,315,1.261,316,2.238,317,2.363,318,3.48,319,2.238,320,1.383,321,3.038,322,2.004,323,3.519,324,1.781,325,2.238,326,0.969,327,2.238,328,1.731,329,1.46,330,1.932,331,1.731,332,1.58,333,1.133,334,1.46,335,1.133,336,1.133,337,0.644,338,1.731,339,1.36,340,3.519,341,2.485,342,2.238,343,1.932,344,2.238,345,2.238,346,2.238,347,2.721,348,2.806,349,2.238,350,3.038,351,2.296,352,2.641,353,2.806,354,1.937,355,2.995,356,2.641,357,1.932,358,2.238,359,3.038,360,2.138,361,2.004,362,1.932,363,2.721,364,3.038,365,2.721,366,3.519,367,3.038,368,3.038]],["title/modules/AdminPageModule.html",[187,1.184,369,2.665]],["body/modules/AdminPageModule.html",[3,0.184,4,0.133,9,0.158,32,0.012,35,0.017,67,0.012,70,0.667,71,0.442,76,1.435,77,0.184,78,0.473,142,1.833,183,0.012,184,0.014,185,0.012,186,0.012,189,1.564,190,2.833,195,2.475,196,2.475,197,2.475,199,2.475,200,2.753,201,2.054,202,3.314,203,2.607,204,3.314,205,2.241,206,3.138,207,2.753,209,2.833,210,2.914,211,1.706,212,2.607,222,3.305,369,5.457,370,4.695,371,4.695,372,4.695,373,4.943,374,5.438,375,4.695]],["title/modules/AdminPageRoutingModule.html",[187,1.184,373,2.462]],["body/modules/AdminPageRoutingModule.html",[0,0.373,3,0.196,4,0.141,9,0.168,32,0.012,35,0.017,67,0.012,70,0.627,71,0.469,77,0.196,78,0.503,85,1.524,142,1.642,183,0.012,184,0.014,185,0.012,186,0.012,189,1.662,201,2.129,211,1.813,214,2.925,215,3.455,216,3.435,217,2.271,218,2.77,219,3.097,220,2.77,373,4.428,375,4.988,376,5.778]],["title/components/AppComponent.html",[0,0.244,144,0.954]],["body/components/AppComponent.html",[0,0.384,1,1.13,2,1.232,3,0.202,4,0.114,5,1.403,6,1.403,7,1.403,8,1.403,9,0.136,13,1.403,14,1.287,15,2.387,16,2.189,17,1.789,19,1.789,25,1.654,29,1.036,30,0.789,32,0.014,35,0.017,39,0.717,41,2.053,52,0.914,55,1.641,67,0.01,70,0.407,71,0.379,77,0.158,78,0.407,90,3.886,132,1.403,133,1.789,134,1.789,135,1.13,136,1.403,137,2.075,138,1.403,139,1.403,140,1.209,141,1.403,142,1.13,143,1.403,144,1.746,145,1.403,146,1.18,147,1.287,148,1.789,149,1.13,150,1.403,151,1.18,152,1.403,153,1.082,154,1.403,155,1.18,156,1.97,157,1.18,158,1.18,159,1.403,160,1.13,161,1.232,162,1.403,163,1.18,164,1.13,165,1.13,166,1.18,167,1.403,168,1.18,169,1.403,170,1.18,171,1.403,172,1.13,173,1.403,174,1.13,175,1.403,176,1.18,177,1.403,178,1.18,179,1.18,180,0.991,181,1.403,182,1.403,183,0.01,184,0.013,185,0.01,186,0.01,253,1.007,377,4.032,378,5.957,379,6.909,380,3.392,381,6.56,382,5.957,383,4.671,384,5.957]],["title/modules/AppModule.html",[187,1.184,385,2.665]],["body/modules/AppModule.html",[3,0.168,4,0.121,9,0.144,16,1.703,27,4.365,32,0.013,35,0.017,67,0.011,70,0.681,71,0.402,72,3.757,73,3.757,74,3.497,75,3.83,76,1.307,77,0.168,78,0.431,86,3.01,144,1.969,183,0.011,184,0.013,185,0.011,186,0.011,189,1.425,190,2.675,195,2.254,196,2.254,197,2.254,199,2.254,200,2.507,201,1.94,206,2.374,207,2.507,211,1.94,212,2.374,217,1.947,385,5.409,386,4.276,387,4.276,388,4.276,389,4.276,390,4.833,391,4.953,392,4.953,393,6.182,394,3.497,395,6.182,396,6.182,397,4.953,398,6.182,399,3.83,400,2.374,401,4.953,402,4.953,403,6.182,404,3.01,405,3.497,406,4.953,407,6.182,408,4.276,409,4.365,410,3.231,411,3.497,412,4.953,413,4.953,414,4.953,415,4.953,416,4.953,417,4.953]],["title/modules/AppRoutingModule.html",[187,1.184,390,2.462]],["body/modules/AppRoutingModule.html",[3,0.164,4,0.118,9,0.141,32,0.01,35,0.017,67,0.01,70,0.581,71,0.394,77,0.164,78,0.422,85,1.279,161,1.279,166,1.225,180,1.029,183,0.01,184,0.013,185,0.01,186,0.01,189,1.394,201,1.913,211,1.521,214,2.453,215,3.199,216,3.087,217,1.905,218,3.685,220,2.323,222,2.945,243,2.366,288,3.422,390,3.978,418,4.846,419,6.098,420,3.422,421,4.055,422,7.632,423,6.098,424,6.098,425,2.945,426,4.846,427,4.846,428,4.846,429,7.478,430,4.846,431,6.046,432,4.846,433,4.846,434,4.846,435,4.846,436,3.748,437,4.846,438,4.846,439,4.846,440,3.162,441,4.846,442,4.846,443,2.205,444,4.846,445,4.846,446,2.597,447,4.846,448,3.162,449,4.846,450,4.846,451,4.846,452,4.846]],["title/interfaces/Article.html",[453,1.086,454,1.809]],["body/interfaces/Article.html",[3,0.138,4,0.181,9,0.119,21,0.625,32,0.017,35,0.017,36,0.756,37,1.025,38,1.843,39,0.625,42,1.326,47,1.087,52,1.198,55,1.122,63,1.533,66,2.289,67,0.009,77,0.222,140,0.827,183,0.009,184,0.013,185,0.009,186,0.009,225,1.208,251,1.844,253,1.037,262,1.854,265,1.396,293,1.278,304,2.044,314,0.791,320,2.141,326,1.122,446,2.183,453,2.098,454,3.275,455,1.763,456,2.658,457,2.459,458,3.318,459,4.276,460,4.276,461,4.276,462,4.628,463,4.276,464,4.628,465,3.847,466,5.023,467,3.847,468,3.847,469,2.479,470,3.555,471,3.847,472,3.847,473,4.824,474,2.358,475,3.555,476,2.246,477,2.32,478,3.847,479,2.877,480,2.062,481,2.877,482,3.103,483,1.953,484,1.854,485,2.658,486,2.877,487,2.877,488,1.953,489,2.476,490,2.877]],["title/interfaces/ArticlesByCategoryAndPage.html",[453,1.086,489,2.293]],["body/interfaces/ArticlesByCategoryAndPage.html",[3,0.153,4,0.167,9,0.132,29,1.002,30,0.764,32,0.017,35,0.017,36,0.838,37,0.627,39,0.693,42,1.371,47,1.033,52,1.174,55,1.607,63,1.494,66,2.026,67,0.01,77,0.231,140,0.917,183,0.01,184,0.014,185,0.01,186,0.01,251,1.752,253,1.091,262,2.056,265,1.548,293,1.83,304,2.188,314,1.132,320,2.538,326,1.245,446,2.421,453,2.145,454,3.271,455,1.955,456,2.948,457,2.56,458,3.454,459,2.948,460,2.948,461,2.948,462,3.19,463,2.948,464,3.19,465,3.19,466,4.866,467,3.19,468,3.19,469,2.056,470,2.948,471,3.19,472,3.19,473,4.818,474,1.955,475,2.948,476,1.862,477,2.573,478,4.118,479,3.19,480,2.287,481,3.19,482,3.321,483,2.166,484,2.654,485,3.805,486,4.118,487,4.118,488,2.796,489,3.544,490,4.118,491,4.518,492,3.901,493,3.494,494,4.518]],["title/injectables/AuthService.html",[243,1.237,495,1.555]],["body/injectables/AuthService.html",[3,0.078,4,0.056,9,0.067,14,1.588,21,0.355,22,0.952,25,1.028,29,1.524,30,1.26,32,0.016,33,1.083,34,1.588,35,0.017,36,1.117,37,0.941,38,1.456,39,0.885,42,1.349,44,1.574,47,1.304,50,1.933,52,0.956,55,1.222,58,1.641,60,1.727,61,1.333,63,1.271,67,0.012,70,0.557,71,0.188,77,0.078,78,0.201,80,1.838,81,0.725,82,1.644,83,2.886,85,0.952,89,2.986,90,2.353,125,1.238,135,1.507,164,0.873,183,0.005,184,0.008,185,0.009,186,0.005,217,0.908,225,0.8,226,2.913,228,1.051,231,2.019,232,2.025,233,2.855,237,3.114,240,1.881,243,1.182,244,2.855,245,2.404,249,2.17,250,2.244,253,1.217,256,1.933,257,1.933,262,1.641,265,1.975,268,2.347,269,2.353,270,1.051,271,2.067,272,2.547,277,2.855,278,3.114,284,2.353,285,2.664,286,1.826,289,3.878,293,1.573,300,1.506,306,1.418,307,1.561,309,2.163,312,2.623,314,1.119,324,2.538,326,1.381,329,1.507,336,2.753,337,0.664,352,1.238,355,1.404,356,1.933,359,1.994,360,1.404,361,1.315,365,1.786,367,1.994,380,1.315,400,2.986,404,1.404,421,2.192,431,3.831,495,1.487,496,1.315,497,1.994,498,2.895,499,5.014,500,3.069,501,4.329,502,5.014,503,3.607,504,3.607,505,5.014,506,3.607,507,5.014,508,1.994,509,3.928,510,4.329,511,4.817,512,3.607,513,2.789,514,2.623,515,3.114,516,3.607,517,2.192,518,2.789,519,3.607,520,3.114,521,3.047,522,3.607,523,2.31,524,5.014,525,5.014,526,5.014,527,2.31,528,3.607,529,3.607,530,2.353,531,3.607,532,2.789,533,2.547,534,2.192,535,3.607,536,3.607,537,3.271,538,4.437,539,3.114,540,3.607,541,3.607,542,3.607,543,3.431,544,4.329,545,2.687,546,4.437,547,2.31,548,2.31,549,2.547,550,2.054,551,2.31,552,3.607,553,2.789,554,2.31,555,3.607,556,2.31,557,2.538,558,3.607,559,2.789,560,3.786,561,2.789,562,3.607,563,2.31,564,2.789,565,2.054,566,4.976,567,2.855,568,1.826,569,2.547,570,2.353,571,1.826,572,1.786,573,2.31,574,3.607,575,3.607,576,3.607,577,2.31,578,3.114,579,3.607,580,4.329,581,3.114,582,3.54,583,2.31,584,3.114,585,2.31,586,1.994,587,1.631,588,2.31,589,1.786,590,2.31,591,1.631,592,1.994,593,2.31,594,1.404,595,2.31,596,1.169,597,1.238,598,2.31,599,2.31,600,2.31,601,2.547,602,2.31,603,1.315,604,2.31,605,1.631,606,3.607,607,3.607,608,2.31,609,2.31,610,1.631,611,2.31,612,2.31,613,2.31,614,2.31,615,1.631,616,1.631,617,2.31,618,2.31,619,2.31,620,3.878,621,2.31,622,2.31,623,2.31,624,2.31,625,2.31,626,2.353,627,2.31,628,2.31,629,2.31,630,4.437,631,2.31,632,2.127,633,3.607,634,1.631,635,2.31,636,2.31,637,2.31]],["title/injectables/AvisosService.html",[245,1.809,495,1.555]],["body/injectables/AvisosService.html",[3,0.157,4,0.113,9,0.135,21,0.712,22,1.565,25,1.515,29,1.316,30,1.003,32,0.015,33,1.782,34,1.634,35,0.017,36,1.1,37,0.823,38,1.499,39,0.91,41,1.706,42,1.338,43,2.033,44,1.499,47,1.328,55,1.634,60,1.224,63,1.482,67,0.014,70,0.517,71,0.377,76,1.224,77,0.157,78,0.404,80,1.802,81,1.456,85,1.224,127,4.056,135,1.668,183,0.01,184,0.013,185,0.01,186,0.01,245,2.844,253,1.003,257,3.179,258,4.056,262,3.241,293,2.163,314,1.151,351,3.87,352,3.179,354,2.332,356,3.179,380,2.642,495,2.445,496,2.642,500,3.135,549,4.189,550,3.378,594,2.82,616,4.189,632,2.844,638,4.006,639,5.933,640,4.64,641,6.893,642,4.64,643,6.54,644,3.378,645,3.304,646,5.933,647,4.64,648,4.832,649,5.933,650,3.605,651,5.933,652,5.933,653,5.933,654,5.122,655,4.64,656,3.589,657,4.64,658,4.64,659,4.64]],["title/modules/ComponentsModule.html",[187,1.184,209,1.633]],["body/modules/ComponentsModule.html",[2,1.093,3,0.187,4,0.101,9,0.121,32,0.012,35,0.017,67,0.009,70,0.672,71,0.337,76,1.093,77,0.141,78,0.361,146,1.92,147,1.142,151,1.92,155,1.92,157,1.92,158,1.92,163,1.92,164,1.003,168,1.785,170,1.92,176,1.92,178,1.92,179,1.92,183,0.009,184,0.012,185,0.009,186,0.009,189,1.192,190,2.385,195,1.886,196,1.886,197,1.886,199,1.886,201,1.729,202,2.79,203,1.987,204,2.79,205,1.708,206,2.642,209,3.464,211,1.729,212,1.987,220,1.987,660,3.578,661,3.578,662,3.578,663,4.144,664,4.144,665,5.511,666,3.578,667,3.205,668,4.144,669,3.578,670,3.578,671,4.144,672,4.144,673,4.144,674,4.144,675,4.144,676,2.519,677,3.891,678,2.926,679,4.144]],["title/interfaces/Error.html",[354,1.483,453,1.086]],["body/interfaces/Error.html",[3,0.183,4,0.132,9,0.157,21,0.827,32,0.014,35,0.017,37,0.904,39,0.827,42,1.046,43,1.847,52,0.827,67,0.011,77,0.183,183,0.011,184,0.014,185,0.011,186,0.011,225,1.444,271,2.221,300,1.619,324,2.728,337,2.14,354,2.75,453,1.873,455,2.332,484,2.452,492,6.661,493,6.092,557,3.296,656,5.62,680,4.653,681,4.653,682,3.679,683,6.511,684,5.621,685,5.389,686,2.888,687,5.389,688,4.653,689,5.389,690,5.389,691,5.389,692,4.653,693,4.653]],["title/components/FabLoginComponent.html",[0,0.244,146,0.954]],["body/components/FabLoginComponent.html",[0,0.369,1,0.86,2,0.937,3,0.168,4,0.087,5,1.067,6,1.067,7,1.067,8,1.067,9,0.103,11,1.273,12,2.049,13,1.067,14,0.979,15,2.331,16,2.137,17,1.49,19,1.49,21,0.545,22,1.309,23,2.218,25,1.325,29,1.268,30,1.1,32,0.016,33,1.49,34,0.979,35,0.017,36,0.659,37,0.794,38,0.898,39,0.761,41,1.645,52,0.95,55,1.858,59,1.95,60,1.309,61,1.067,65,3.837,67,0.008,70,0.498,71,0.289,76,0.937,77,0.12,78,0.309,79,1.273,80,0.979,81,1.115,83,1.703,85,0.937,89,1.703,92,1.95,112,4.248,121,2.747,125,3.895,127,2.825,132,1.067,133,1.49,134,1.49,135,0.86,136,1.067,137,1.859,138,1.067,139,1.067,140,1.007,141,1.067,142,0.86,143,1.067,144,0.898,145,1.067,146,1.564,147,2.023,148,1.49,149,0.86,150,1.067,151,0.898,152,1.067,153,0.823,154,1.067,155,0.898,156,1.717,157,1.445,158,0.898,159,1.067,160,0.86,161,0.937,162,1.067,163,0.898,164,0.86,165,0.86,166,0.898,167,1.067,168,0.898,169,1.067,170,0.898,171,1.067,172,0.86,173,1.067,174,0.86,175,1.067,176,0.898,177,1.067,178,0.898,179,0.898,180,0.754,181,1.067,182,1.067,183,0.008,184,0.011,185,0.008,186,0.008,268,1.778,271,2.045,285,1.95,293,1.557,300,1.49,457,1.861,500,2.741,537,4.4,560,3.015,571,3.133,572,2.747,632,2.378,644,3.255,645,2.378,654,4.936,667,4.786,670,3.067,694,5.343,695,3.067,696,3.837,697,4.962,698,2.659,699,4.283,700,3.015,701,4.962,702,4.962,703,4.936,704,4.283,705,6.189,706,3.067,707,3.317,708,3.553,709,3.785,710,3.064,711,3.553,712,4.962,713,3.553,714,2.318,715,2.023,716,3.067,717,2.318,718,3.067,719,4.283,720,4.283,721,4.283,722,4.283,723,4.283,724,4.936,725,4.936,726,3.067,727,4.283,728,3.067,729,4.283,730,3.067,731,2.747,732,3.067,733,3.067,734,3.553,735,4.962,736,4.962,737,4.962,738,3.553,739,3.553,740,3.067,741,3.553,742,3.553,743,3.553,744,3.553,745,3.067,746,3.553,747,3.553]],["title/interfaces/Favorito.html",[453,1.086,748,1.809]],["body/interfaces/Favorito.html",[3,0.115,4,0.083,9,0.099,21,0.522,30,0.575,32,0.016,35,0.017,36,1.036,37,0.889,39,0.522,42,1.379,43,1.166,44,1.411,47,1.36,52,0.857,55,1.832,63,1.522,66,1.067,67,0.015,77,0.217,92,1.891,113,1.823,140,0.691,180,1.36,183,0.007,184,0.01,185,0.007,186,0.007,225,1.067,228,2.763,232,1.9,251,1.824,253,1.298,254,2.195,263,2.658,265,1.649,268,1.219,270,2.763,292,1.937,299,1.823,300,1.446,304,1.806,309,1.276,311,2.74,312,2.915,314,1.243,320,2.195,322,3.18,326,1.326,337,1.913,400,2.307,425,2.067,443,2.763,453,2.072,455,1.472,469,2.19,474,2.083,476,1.983,480,1.722,483,3.453,488,1.631,514,1.548,545,2.579,557,1.722,565,1.937,568,2.827,571,2.436,596,3.367,597,2.579,603,1.937,626,2.772,650,3.69,682,2.436,686,2.579,698,1.823,700,2.067,748,3.189,749,2.067,750,3.457,751,3.961,752,4.18,753,3.14,754,4.18,755,2.925,756,2.579,757,3.14,758,3.394,759,2.925,760,2.219,761,1.823,762,2.219,763,2.925,764,1.548,765,2.219,766,3.643,767,2.219,768,1.823,769,1.823,770,1.823,771,2.579,772,1.823,773,1.823,774,1.823,775,2.067,776,2.74,777,2.219,778,2.219,779,2.219,780,2.219,781,1.937,782,2.219,783,1.823,784,2.219,785,1.937,786,2.219,787,2.219,788,2.219,789,1.937,790,2.067,791,2.219,792,2.219,793,1.631,794,2.067,795,2.219,796,1.548,797,1.722,798,2.925,799,1.937,800,2.219,801,2.219,802,2.219,803,2.067,804,2.219]],["title/components/FavoritosPage.html",[0,0.244,149,0.913]],["body/components/FavoritosPage.html",[0,0.309,1,0.631,2,0.688,3,0.134,4,0.064,5,0.783,6,0.783,7,0.783,8,0.783,9,0.076,11,0.935,12,1.716,13,0.783,14,1.319,15,2.25,16,2.063,17,1.189,19,1.189,21,0.4,22,1.045,23,1.916,25,1.109,29,1.525,30,1.162,32,0.016,33,1.189,34,1.319,35,0.017,36,0.888,37,1.006,38,1.209,39,0.735,41,0.75,42,1.396,44,1.762,47,1.315,50,2.122,52,0.929,58,1.802,59,1.556,60,1.263,61,1.189,63,1.353,67,0.01,70,0.578,71,0.212,76,0.688,77,0.088,78,0.227,79,0.935,80,1.785,82,1.884,85,0.688,125,1.397,132,0.783,133,1.189,134,1.189,135,1.391,136,0.783,137,1.605,138,0.783,139,0.783,140,0.804,141,0.783,142,0.631,143,0.783,144,0.659,145,0.783,146,0.659,147,0.718,148,1.189,149,1.293,150,0.783,151,0.659,152,0.783,153,0.604,154,0.783,155,1.209,156,1.438,157,0.659,158,0.659,159,0.783,160,0.631,161,0.688,162,0.783,163,0.659,164,0.631,165,0.631,166,0.659,167,0.783,168,0.659,169,0.783,170,0.659,171,0.783,172,0.631,173,0.783,174,0.631,175,0.783,176,0.659,177,0.783,178,0.659,179,0.659,180,1.375,181,0.783,182,0.783,183,0.006,184,0.008,185,0.006,186,0.006,225,0.878,226,2.615,227,3.749,231,2.178,232,1.949,240,2.005,241,3.08,242,2.313,243,1.752,244,3.043,245,2.562,246,3.043,247,2.864,249,2.313,250,2.418,251,1.189,253,1.204,254,2.259,256,2.122,257,2.122,258,2.254,263,2.465,265,2.484,277,1.485,285,2.378,286,2.004,291,2.795,300,0.783,306,1.556,307,1.713,313,1.419,314,1.037,315,1.419,317,2.562,318,3.774,324,2.705,326,1.091,332,1.841,333,1.32,334,1.701,335,1.32,336,1.32,337,0.75,339,1.584,341,2.795,348,1.485,352,1.397,353,1.485,354,1.025,355,1.584,356,1.397,360,1.584,361,1.485,443,3.079,500,2.295,517,2.406,518,3.062,533,3.38,584,3.418,632,1.25,645,1.898,676,1.584,677,1.841,707,2.864,709,2.565,710,2.864,714,1.701,715,1.485,717,1.701,748,3.342,790,2.406,805,2.251,806,4.787,807,3.959,808,4.787,809,4.787,810,3.062,811,3.062,812,2.016,813,3.959,814,3.062,815,4.133,816,2.795,817,3.062,818,2.004,819,3.418,820,2.607,821,3.062,822,3.959,823,3.959,824,2.607,825,3.959,826,3.062,827,2.607,828,2.607,829,2.607,830,2.607,831,2.607,832,2.607,833,2.607,834,2.583,835,3.062,836,1.841,837,1.186,838,1.841,839,1.841,840,1.485,841,2.016,842,3.959,843,1.584,844,2.607,845,2.607,846,2.607,847,2.607,848,2.607,849,3.38,850,2.607,851,2.607,852,2.607,853,2.016,854,2.016,855,2.607,856,2.607,857,2.607,858,2.016,859,3.418]],["title/modules/FavoritosPageModule.html",[187,1.184,860,2.665]],["body/modules/FavoritosPageModule.html",[3,0.184,4,0.133,9,0.158,32,0.012,35,0.017,67,0.012,70,0.667,71,0.442,76,1.435,77,0.184,78,0.473,149,1.833,183,0.012,184,0.014,185,0.012,186,0.012,189,1.564,190,2.833,195,2.475,196,2.475,197,2.475,199,2.475,200,2.753,201,2.054,202,3.314,203,2.607,204,3.314,205,2.241,206,3.138,207,2.753,209,2.833,210,2.914,211,1.706,212,2.607,443,2.475,860,5.457,861,4.695,862,4.695,863,4.695,864,4.943,865,5.438,866,4.695]],["title/modules/FavoritosPageRoutingModule.html",[187,1.184,864,2.462]],["body/modules/FavoritosPageRoutingModule.html",[0,0.373,3,0.196,4,0.141,9,0.168,32,0.012,35,0.017,67,0.012,70,0.627,71,0.469,77,0.196,78,0.503,85,1.524,149,1.642,183,0.012,184,0.014,185,0.012,186,0.012,189,1.662,201,2.129,211,1.813,214,2.925,215,3.455,216,3.435,217,2.271,218,2.77,219,3.097,220,2.77,864,4.428,866,4.988,867,5.778]],["title/components/HeaderComponent.html",[0,0.244,151,0.954]],["body/components/HeaderComponent.html",[0,0.361,1,1.025,2,1.118,3,0.19,4,0.104,5,1.273,6,1.273,7,1.273,8,1.273,9,0.123,11,1.519,12,2.244,13,1.273,14,1.167,15,2.369,16,2.172,17,1.68,19,1.68,21,0.65,22,1.475,23,2.386,25,1.603,29,1.388,30,1.058,32,0.015,33,1.68,35,0.017,37,0.588,39,0.65,41,1.801,42,1.085,47,1.179,52,0.858,59,2.198,60,1.118,61,1.273,63,1.085,67,0.013,70,0.369,71,0.344,77,0.144,78,0.369,79,1.519,92,2.198,93,4.325,132,1.273,133,1.68,134,1.68,135,1.025,136,1.273,137,2,138,1.273,139,1.273,140,1.135,141,1.273,142,1.025,143,1.273,144,1.071,145,1.273,146,1.071,147,1.167,148,1.68,149,1.025,150,1.273,151,1.682,152,1.273,153,0.982,154,1.273,155,1.071,156,1.88,157,1.071,158,1.071,159,1.273,160,1.025,161,1.118,162,1.273,163,1.071,164,1.025,165,1.025,166,1.071,167,1.273,168,1.071,169,1.273,170,1.071,171,1.273,172,1.025,173,1.273,174,1.025,175,1.273,176,1.071,177,1.273,178,1.071,179,1.071,180,0.899,181,1.273,182,1.273,183,0.009,184,0.012,185,0.009,186,0.009,253,0.945,268,2.005,313,1.519,314,0.822,315,1.519,457,2.498,474,2.995,533,3.949,550,3.184,699,4.828,868,3.658,869,5.592,870,4.325,871,5.592,872,4.325,873,6.26,874,5.592,875,3.184,876,5.592,877,3.648,878,5.747,879,4.237,880,3.184]],["title/components/HomePage.html",[0,0.244,153,0.874]],["body/components/HomePage.html",[0,0.273,1,0.689,2,0.751,3,0.143,4,0.07,5,0.856,6,0.856,7,0.856,8,0.856,9,0.083,11,1.021,12,1.809,13,0.856,14,0.785,15,2.275,16,2.086,17,1.271,19,1.271,21,0.437,22,1.116,23,2.003,25,0.66,29,1.436,30,1.094,32,0.016,34,0.785,35,0.017,36,0.528,37,0.944,38,0.72,39,0.437,41,1.452,42,1.362,43,1.45,44,1.509,47,1.272,50,2.267,52,0.916,59,2.196,60,0.751,61,0.856,63,0.821,67,0.014,70,0.545,71,0.231,77,0.097,78,0.248,79,1.021,80,1.391,81,0.894,82,1.655,114,3.653,115,3.653,117,2.571,118,2.459,119,2.203,121,3.272,124,2.459,125,2.705,127,1.622,132,0.856,133,1.271,134,1.678,135,1.221,136,0.856,137,1.678,138,0.856,139,0.856,140,0.859,141,0.856,142,0.689,143,0.856,144,0.72,145,0.856,146,0.72,147,1.391,148,1.271,149,0.689,150,0.856,151,0.72,152,0.856,153,1.295,154,0.856,155,0.72,156,1.516,157,0.72,158,0.72,159,0.856,160,0.689,161,0.751,162,0.856,163,0.72,164,0.689,165,0.689,166,0.72,167,0.856,168,0.72,169,0.856,170,0.72,171,0.856,172,0.689,173,0.856,174,0.689,175,0.856,176,0.72,177,0.856,178,0.72,179,0.72,180,1.443,181,0.856,182,0.856,183,0.006,184,0.009,185,0.006,186,0.006,222,2.571,225,0.938,226,2.297,231,2.297,232,1.953,233,1.622,240,2.096,242,2.184,243,1.832,246,2.874,247,2.994,249,2.418,250,1.73,253,1.057,254,1.663,256,1.526,263,1.809,268,1.517,285,2.719,286,2.142,287,2.409,293,1.753,306,2.459,307,2.418,309,2.096,310,3.628,313,1.809,314,0.98,315,1.809,317,2.028,320,1.663,324,2.142,335,1.442,336,1.442,337,0.819,341,2.011,404,1.731,420,2.011,421,3.395,443,1.296,457,1.587,484,1.925,488,2.028,498,3.293,509,4.341,514,1.925,518,2.203,534,2.571,537,2.76,567,1.622,582,3.945,596,2.142,615,2.011,620,4.321,626,1.233,634,2.011,645,2.028,732,3.653,733,2.459,764,1.925,775,2.571,793,2.678,794,2.571,796,3.233,797,1.442,799,2.409,818,2.142,821,3.272,837,1.296,839,2.011,840,1.622,843,1.731,881,2.459,882,4.231,883,3.653,884,5.587,885,5.048,886,4.231,887,4.358,888,2.203,889,4.231,890,3.653,891,3.653,892,2.848,893,3.293,894,2.848,895,4.358,896,3.653,897,2.76,898,2.848,899,2.848,900,2.848,901,2.76,902,2.459,903,2.459,904,2.848,905,2.011,906,3.272,907,3.653,908,1.731,909,2.459,910,4.358,911,4.358,912,4.358,913,2.848,914,5.587,915,2.459,916,2.459,917,2.459,918,2.848,919,2.459,920,2.848,921,2.848,922,2.848,923,2.848,924,4.231,925,2.848,926,2.848,927,2.848,928,2.848,929,2.848,930,2.848]],["title/modules/HomePageModule.html",[187,1.184,931,2.665]],["body/modules/HomePageModule.html",[2,1.422,3,0.183,4,0.132,9,0.157,32,0.014,35,0.017,67,0.011,70,0.672,71,0.438,76,1.422,77,0.183,78,0.469,153,1.752,183,0.011,184,0.014,185,0.011,186,0.011,189,1.55,190,2.818,195,2.452,196,2.452,197,2.452,199,2.452,200,2.728,201,2.043,202,3.296,203,2.584,204,3.296,205,2.221,206,3.121,207,2.728,209,2.818,210,2.888,211,1.691,212,2.584,253,0.911,421,3.275,666,4.653,931,5.448,932,4.653,933,4.653,934,4.653,935,4.932,936,5.389,937,4.653,938,4.653]],["title/modules/HomePageRoutingModule.html",[187,1.184,935,2.462]],["body/modules/HomePageRoutingModule.html",[0,0.373,3,0.196,4,0.141,9,0.168,32,0.012,35,0.017,67,0.012,70,0.627,71,0.469,77,0.196,78,0.503,85,1.524,153,1.572,183,0.012,184,0.014,185,0.012,186,0.012,189,1.662,201,2.129,211,1.813,214,2.925,215,3.455,216,3.435,217,2.271,218,2.77,219,3.097,220,2.77,935,4.428,937,4.988,939,5.778]],["title/components/InfoRetoComponent.html",[0,0.244,155,0.954]],["body/components/InfoRetoComponent.html",[0,0.186,1,0.423,2,0.462,3,0.198,4,0.043,5,0.526,6,0.526,7,0.526,8,0.526,9,0.051,11,0.627,12,1.32,13,0.526,14,0.482,15,2.114,16,1.963,17,0.867,19,0.867,21,0.269,22,0.761,23,1.531,25,0.405,28,3.97,29,1.526,30,1.232,32,0.016,34,1.605,35,0.017,36,1.141,37,0.994,38,1.473,39,0.725,41,1.676,42,1.347,43,1.927,47,1.327,48,2.037,51,1.753,52,0.921,55,0.795,59,1.679,60,1.623,61,1.75,63,1.494,66,0.549,67,0.015,70,0.49,71,0.142,72,1.063,73,1.063,76,0.462,77,0.059,78,0.152,79,0.627,80,1.653,81,0.549,82,1.668,83,1.383,89,2.695,92,1.679,112,1.882,117,1.063,123,1.511,125,2.289,127,2.896,132,0.526,133,0.867,134,0.867,135,1.41,136,0.526,137,1.283,138,0.526,139,0.526,140,0.586,141,0.526,142,0.423,143,0.526,144,0.442,145,0.526,146,0.442,147,0.482,148,0.867,149,0.423,150,0.526,151,0.442,152,0.526,153,0.405,154,0.526,155,1.079,156,1.106,157,0.442,158,0.442,159,0.526,160,0.423,161,0.462,162,0.526,163,0.442,164,0.423,165,0.423,166,0.442,167,0.526,168,0.442,169,0.526,170,0.442,171,0.526,172,0.423,173,0.526,174,0.423,175,0.526,176,0.442,177,0.526,178,0.442,179,0.442,180,1.142,181,0.526,182,0.526,183,0.004,184,0.006,185,0.004,186,0.004,225,0.64,232,1.342,240,1.603,242,1.849,243,1.4,244,2.432,245,2.048,246,2.097,247,2.289,249,1.593,250,0.989,253,1.153,257,1.546,258,1.643,263,2.65,265,1.997,268,2.253,271,2.753,272,2.037,277,1.643,285,1.679,286,1.46,293,0.905,300,1.888,304,0.656,306,1.679,307,1.249,309,1.603,312,2.315,313,1.034,314,1.165,315,1.034,317,1.383,324,1.46,326,0.795,333,0.886,335,0.886,337,1.808,348,2.432,352,2.883,353,2.432,354,2.114,355,2.596,356,2.533,360,1.753,361,2.097,400,1.383,409,4.238,410,1.141,411,1.235,457,1.603,469,1.313,470,1.882,474,1.249,475,1.882,484,1.313,521,2.596,532,2.231,545,2.289,549,3.016,550,2.432,567,1.643,568,1.46,601,1.235,626,2.854,645,2.048,648,3.51,676,4.217,693,2.491,698,1.546,707,2.289,709,2.289,710,2.289,731,1.353,740,1.511,748,2.695,750,1.643,756,2.289,758,1.753,761,1.546,768,0.938,769,0.938,770,0.938,771,3.123,772,0.938,773,0.938,774,0.938,776,1.643,789,1.643,797,2.575,810,2.231,817,3.303,818,1.46,836,4.9,837,0.796,838,1.235,839,1.235,840,0.996,858,2.231,859,2.491,875,1.643,877,1.882,880,2.896,897,1.882,901,1.882,915,2.491,916,2.491,917,1.511,919,1.511,940,1.353,941,4.272,942,2.885,943,2.885,944,2.885,945,2.885,946,2.491,947,2.491,948,2.885,949,2.847,950,2.231,951,3.179,952,3.179,953,4.726,954,2.491,955,2.491,956,4.272,957,3.688,958,2.491,959,2.491,960,2.491,961,2.491,962,2.491,963,1.511,964,2.885,965,2.231,966,2.885,967,4.391,968,2.885,969,2.885,970,2.885,971,2.491,972,2.885,973,2.231,974,1.75,975,2.491,976,2.491,977,1.75,978,4.644,979,2.491,980,1.75,981,1.75,982,2.491,983,2.885,984,2.885,985,1.75,986,3.303,987,2.231,988,2.491,989,2.491,990,1.75,991,3.303,992,3.016,993,3.688,994,4.272,995,2.885,996,2.491,997,1.75,998,2.885,999,2.491,1000,1.75,1001,2.885,1002,2.885,1003,2.491,1004,1.75,1005,2.491,1006,1.75,1007,2.491,1008,1.75,1009,3.303,1010,2.885,1011,2.491,1012,1.75,1013,1.75,1014,1.75,1015,2.231,1016,1.75,1017,2.885,1018,2.885,1019,4.272,1020,1.75,1021,2.885,1022,2.491,1023,2.885,1024,2.885,1025,1.75,1026,2.491,1027,2.847,1028,1.75,1029,1.511,1030,1.75,1031,1.511,1032,1.511,1033,2.491,1034,4.391,1035,1.511,1036,2.6,1037,1.511,1038,1.511,1039,2.491,1040,2.491,1041,1.511,1042,1.353,1043,1.511,1044,2.231,1045,1.511,1046,1.353,1047,1.141,1048,1.353,1049,1.511,1050,2.491,1051,1.511,1052,1.511,1053,1.511,1054,1.511,1055,1.511,1056,1.511,1057,1.511,1058,1.511,1059,1.511,1060,1.511,1061,1.511,1062,1.511,1063,2.491,1064,1.511,1065,2.231,1066,1.75,1067,1.75,1068,1.511,1069,1.511,1070,1.511,1071,1.511,1072,1.235,1073,2.885,1074,2.885,1075,2.885,1076,2.885,1077,2.885,1078,2.885,1079,1.511,1080,1.75,1081,1.75,1082,1.75,1083,1.75,1084,4.272,1085,1.75,1086,1.75,1087,1.75]],["title/components/LoginComponent.html",[0,0.244,157,0.954]],["body/components/LoginComponent.html",[0,0.321,1,0.672,2,0.732,3,0.141,4,0.068,5,0.834,6,0.834,7,0.834,8,0.834,9,0.081,11,0.995,12,1.782,13,0.834,14,0.765,15,2.268,16,2.094,17,1.247,19,1.247,21,0.426,22,1.095,23,1.977,25,0.643,29,1.525,30,1.194,32,0.015,34,1.143,35,0.017,36,0.77,37,0.917,38,1.049,39,0.637,41,1.43,42,1.282,43,1.891,44,1.049,47,1.313,52,1.013,55,1.143,60,1.558,61,1.493,63,0.806,67,0.011,70,0.575,71,0.226,76,0.732,77,0.094,78,0.242,79,0.995,80,1.627,81,0.871,82,1.809,83,1.331,85,1.095,89,1.331,132,0.834,133,1.247,134,1.247,135,1.598,136,0.834,137,1.657,138,0.834,139,0.834,140,0.843,141,0.834,142,0.672,143,0.834,144,0.701,145,0.834,146,0.701,147,0.765,148,1.247,149,0.672,150,0.834,151,0.701,152,0.834,153,0.643,154,0.834,155,0.701,156,1.493,157,1.394,158,0.701,159,0.834,160,0.672,161,0.732,162,0.834,163,0.701,164,1.203,165,0.672,166,0.701,167,0.834,168,0.701,169,0.834,170,0.701,171,0.834,172,0.672,173,0.834,174,0.672,175,0.834,176,1.256,177,0.834,178,0.701,179,0.701,180,0.589,181,0.834,182,0.834,183,0.006,184,0.009,185,0.006,186,0.006,205,1.144,225,0.921,231,1.889,232,1.814,240,2.07,242,2.151,243,1.809,249,2.151,250,1.891,251,1.247,253,1.116,256,2.956,271,1.711,293,1.302,298,3.583,300,1.493,307,1.796,309,2.07,313,1.488,314,1.203,315,1.488,320,1.631,326,1.143,333,1.405,337,1.43,348,1.581,351,2.708,353,1.581,354,2.321,421,2.522,500,2.97,514,1.889,537,4.705,560,4.013,569,2.931,570,2.708,571,2.792,572,2.147,582,3.895,632,2.383,644,3.141,645,1.99,669,2.397,682,2.516,686,2.956,703,4.292,704,3.583,707,2.956,709,3.618,710,2.956,714,1.811,715,1.581,716,2.397,717,1.811,781,2.363,837,1.263,840,1.581,888,2.147,901,2.708,982,3.583,1047,1.811,1072,1.96,1088,2.397,1089,5.098,1090,4.971,1091,4.292,1092,4.763,1093,5.517,1094,5.517,1095,4.266,1096,4.266,1097,4.763,1098,4.763,1099,4.151,1100,4.151,1101,4.151,1102,4.151,1103,2.776,1104,4.151,1105,2.776,1106,5.517,1107,4.151,1108,2.776,1109,4.151,1110,4.151,1111,3.583,1112,2.776,1113,3.583,1114,3.583,1115,4.151,1116,2.776,1117,3.583,1118,4.151,1119,2.776,1120,4.763,1121,4.151,1122,3.844,1123,2.776,1124,4.151,1125,2.776,1126,4.151,1127,3.844,1128,2.147,1129,2.397,1130,2.776,1131,2.147,1132,3.21,1133,3.21,1134,2.397,1135,4.292,1136,4.292,1137,2.397,1138,3.583,1139,2.397,1140,2.776,1141,2.397,1142,2.776,1143,2.776,1144,2.776,1145,2.776,1146,1.96,1147,3.583,1148,3.583,1149,4.151,1150,4.151,1151,4.151]],["title/components/MenuComponent.html",[0,0.244,158,0.954]],["body/components/MenuComponent.html",[0,0.337,1,0.925,2,1.009,3,0.177,4,0.093,5,1.149,6,1.149,7,1.149,8,1.149,9,0.111,11,1.371,12,2.13,13,1.149,14,1.053,15,2.347,16,2.153,17,1.568,19,1.568,21,0.587,22,1.377,23,2.289,25,0.886,29,1.416,30,1.166,32,0.016,33,1.568,34,1.438,35,0.017,36,0.968,37,0.825,38,1.319,39,0.801,41,1.71,44,1.319,47,0.924,52,1.059,59,2.052,60,1.377,61,1.568,63,1.154,66,1.638,67,0.013,70,0.517,71,0.311,77,0.13,78,0.333,79,1.371,80,1.438,81,1.2,92,2.052,112,2.495,125,3.422,127,2.177,132,1.149,133,1.568,134,1.568,135,0.925,136,1.149,137,1.918,138,1.149,139,1.149,140,1.06,141,1.149,142,0.925,143,1.149,144,0.966,145,1.149,146,0.966,147,1.438,148,1.568,149,0.925,150,1.149,151,0.966,152,1.149,153,0.886,154,1.149,155,0.966,156,1.785,157,0.966,158,1.614,159,1.149,160,0.925,161,1.009,162,1.149,163,0.966,164,0.925,165,0.925,166,0.966,167,1.149,168,0.966,169,1.149,170,0.966,171,1.149,172,0.925,173,1.149,174,0.925,175,1.149,176,0.966,177,1.149,178,0.966,179,0.966,180,0.811,181,1.149,182,1.149,183,0.008,184,0.011,185,0.008,186,0.008,217,1.503,232,1.377,251,1.568,253,1.079,254,2.51,268,1.871,270,2.375,329,2.495,511,5.461,530,3.405,534,3.172,718,3.301,719,3.301,720,3.301,721,3.301,722,3.301,723,3.301,724,5.131,725,5.131,726,3.301,727,4.507,728,3.301,729,3.301,730,3.301,731,2.957,764,2.375,796,3.14,799,2.972,818,2.642,875,2.972,877,3.405,880,2.972,897,3.405,1152,3.301,1153,5.944,1154,5.22,1155,5.22,1156,3.824,1157,5.22,1158,4.507,1159,3.686,1160,5.22,1161,4.507,1162,5.22,1163,3.824,1164,5.22,1165,5.22,1166,4.037,1167,4.507,1168,3.824,1169,5.22,1170,5.22,1171,3.824]],["title/interfaces/MenuOpts.html",[453,1.086,796,1.717]],["body/interfaces/MenuOpts.html",[3,0.113,4,0.082,9,0.097,21,0.513,30,0.803,32,0.016,35,0.017,36,1.117,37,0.918,39,0.513,42,1.35,43,1.629,44,1.397,47,1.361,52,1.015,55,1.822,63,1.524,66,1.049,67,0.015,77,0.216,92,1.313,113,3.228,140,1.223,180,1.351,183,0.007,184,0.01,185,0.007,186,0.007,225,1.054,228,2.741,232,1.893,251,1.912,253,1.295,254,2.599,263,2.628,265,1.629,268,1.198,270,3.164,292,1.903,299,1.791,300,1.427,304,1.783,309,1.254,311,2.706,312,3.009,314,1.235,320,1.868,322,3.149,326,1.309,337,1.83,400,2.278,425,3.66,443,2.162,453,2.064,455,1.446,469,2.162,474,2.056,476,1.959,480,1.691,483,3.261,488,1.602,514,1.521,545,2.547,557,1.691,565,2.706,568,2.405,571,2.799,596,3.444,597,2.547,603,1.903,626,2.056,650,3.66,682,2.405,686,2.547,698,1.791,700,2.031,748,2.651,749,2.031,750,3.149,751,2.18,752,3.1,753,2.18,754,3.93,755,2.031,756,1.791,757,2.18,758,2.888,759,2.888,760,2.18,761,1.791,762,2.18,763,3.361,764,1.521,765,2.18,766,3.608,767,2.18,768,1.791,769,1.791,770,1.791,771,2.547,772,1.791,773,1.791,774,1.791,775,2.031,776,2.706,777,2.18,778,2.18,779,2.18,780,2.18,781,1.903,782,2.18,783,1.791,784,2.18,785,1.903,786,2.18,787,2.18,788,2.18,789,1.903,790,2.031,791,3.1,792,3.1,793,2.278,794,2.888,795,3.1,796,2.162,797,2.405,798,3.66,799,2.706,800,3.1,801,3.1,802,3.1,803,2.888,804,3.1]],["title/injectables/MenuService.html",[241,2.023,495,1.555]],["body/injectables/MenuService.html",[3,0.114,4,0.082,9,0.098,21,0.517,22,1.26,25,1.287,29,1.512,30,1.152,32,0.016,33,1.435,34,0.927,35,0.017,36,0.624,37,0.967,38,0.851,39,0.517,42,1.395,44,1.527,47,1.336,50,2.56,52,0.733,55,1.316,58,2.174,60,0.888,61,1.011,63,0.927,67,0.015,70,0.556,71,0.274,77,0.114,78,0.293,80,1.53,81,1.056,82,1.566,135,1.344,147,1.316,183,0.007,184,0.01,185,0.007,186,0.007,222,2.903,225,1.06,231,2.527,232,2.009,233,2.72,240,2.267,241,2.56,242,2.615,243,1.981,249,2.615,250,2.272,253,1.177,254,1.878,262,2.174,270,2.174,285,2.824,286,2.418,287,2.72,293,1.896,306,2.605,307,2.615,309,2.267,310,4.234,312,2.174,313,1.99,314,1.078,315,1.99,317,2.29,324,2.418,329,2.196,335,1.704,336,1.704,337,0.968,380,1.917,404,2.046,443,2.174,457,1.792,495,1.969,496,1.917,498,3.623,508,2.907,509,4.448,513,3.694,514,2.174,534,2.903,537,3.117,567,3.441,582,4.267,592,2.907,594,2.046,596,2.418,615,2.377,620,4.674,626,1.457,634,2.377,764,2.174,793,2.897,796,3.34,797,2.418,816,3.373,843,2.046,887,4.794,893,3.943,895,5.218,896,4.125,897,3.117,901,3.117,902,4.125,903,4.125,906,4.674,907,4.125,908,3.375,909,2.907,910,4.794,911,4.794,912,4.794,992,3.373,1146,3.373,1172,2.907,1173,5.553,1174,6.044,1175,4.777,1176,5.218,1177,4.125,1178,4.777,1179,4.777,1180,3.367,1181,4.777,1182,3.367,1183,3.367,1184,3.367,1185,3.367,1186,2.907,1187,4.777,1188,2.907,1189,3.367,1190,5.553,1191,3.367]],["title/components/MisRetosPage.html",[0,0.244,160,0.913]],["body/components/MisRetosPage.html",[0,0.33,1,0.581,2,0.634,3,0.174,4,0.059,5,0.722,6,0.722,7,0.722,8,0.722,9,0.07,11,0.861,12,1.631,13,0.722,14,1.253,15,2.225,16,2.04,17,1.117,19,1.117,21,0.369,22,0.981,23,1.836,25,1.054,29,1.468,30,1.139,32,0.016,33,1.117,34,1.526,35,0.017,36,1.027,37,0.935,38,1.4,39,0.85,41,0.691,42,1.36,43,1.755,44,1.294,47,1.367,52,0.571,55,1.024,58,1.692,59,1.461,60,1.461,61,1.366,63,1.36,67,0.014,70,0.576,71,0.195,76,0.634,77,0.081,78,0.209,79,0.861,80,1.823,82,1.816,85,0.981,92,1.461,132,0.722,133,1.117,134,1.117,135,1.478,136,0.722,137,1.538,138,0.722,139,0.722,140,0.755,141,0.722,142,0.581,143,0.722,144,0.607,145,0.722,146,0.607,147,0.662,148,1.117,149,0.581,150,0.722,151,0.607,152,0.722,153,0.557,154,0.722,155,1.149,156,1.366,157,0.607,158,0.607,159,0.722,160,1.239,161,1.665,162,0.722,163,1.149,164,0.581,165,0.581,166,0.607,167,0.722,168,0.607,169,0.722,170,0.607,171,0.722,172,0.581,173,0.722,174,0.581,175,0.722,176,0.607,177,0.722,178,0.607,179,0.607,180,1.471,181,0.722,182,0.722,183,0.005,184,0.008,185,0.005,186,0.005,225,0.825,226,1.692,227,3.613,232,1.935,234,3.21,236,3.21,240,1.921,241,2.968,242,2.216,243,1.679,244,2.916,245,2.455,246,2.916,247,2.744,249,2.216,250,2.309,251,1.117,253,1.239,254,1.461,257,1.993,258,2.117,259,3.21,261,2.875,262,2.07,263,2.667,265,2.499,269,2.426,270,2.33,271,1.532,274,3.21,276,2.875,277,2.59,284,2.426,285,2.601,286,1.882,293,1.98,294,3.21,299,1.287,300,1.366,306,1.461,307,1.609,313,0.861,314,0.466,315,0.861,317,1.783,318,2.625,326,1.024,328,1.858,330,2.074,331,1.858,334,1.567,335,1.216,337,1.685,339,1.46,341,1.696,347,1.858,348,2.117,350,2.074,351,1.567,352,1.993,353,2.117,354,1.461,355,2.26,356,1.993,357,2.074,360,1.46,361,1.368,362,2.074,363,2.875,364,3.21,420,1.696,440,4.396,500,2.808,521,2.26,534,3.366,550,2.117,560,2.26,578,3.21,605,3.616,616,2.625,632,1.783,644,2.117,645,1.783,676,1.46,677,2.625,678,1.696,696,2.875,707,2.744,709,3.382,710,2.744,714,2.426,715,2.117,717,2.426,811,2.875,812,1.858,818,3.195,826,2.875,835,3.96,836,1.696,837,1.093,841,1.858,843,1.46,853,2.875,854,2.875,905,2.625,965,2.875,991,2.875,992,2.625,1027,1.858,1065,1.858,1192,4.758,1193,2.074,1194,4.549,1195,3.718,1196,3.718,1197,3.718,1198,3.21,1199,3.927,1200,2.875,1201,2.402,1202,3.718,1203,3.718,1204,2.402,1205,3.718,1206,3.718,1207,2.402,1208,2.875,1209,3.21,1210,2.402,1211,2.402,1212,3.21,1213,2.402,1214,2.402,1215,3.718,1216,2.402,1217,2.402,1218,1.858,1219,2.402]],["title/modules/MisRetosPageModule.html",[187,1.184,1220,2.665]],["body/modules/MisRetosPageModule.html",[3,0.183,4,0.132,9,0.157,32,0.012,35,0.017,67,0.012,70,0.666,71,0.439,76,1.426,77,0.183,78,0.471,160,1.831,161,1.721,180,1.147,183,0.012,184,0.014,185,0.012,186,0.012,189,1.555,190,2.823,195,2.46,196,2.46,197,2.46,199,2.46,200,2.736,201,2.047,202,3.302,203,2.591,204,3.302,205,2.228,206,3.127,207,2.736,209,2.823,210,2.897,211,1.696,212,2.591,440,3.527,1192,3.817,1220,5.451,1221,4.667,1222,4.667,1223,4.667,1224,4.936,1225,5.406,1226,4.667]],["title/modules/MisRetosPageRoutingModule.html",[187,1.184,1224,2.462]],["body/modules/MisRetosPageRoutingModule.html",[0,0.371,3,0.195,4,0.141,9,0.168,32,0.012,35,0.017,67,0.012,70,0.626,71,0.467,77,0.195,78,0.501,85,1.517,160,1.638,161,1.517,180,1.22,183,0.012,184,0.014,185,0.012,186,0.012,189,1.654,201,2.123,211,1.804,214,2.911,215,3.448,216,3.426,217,2.26,218,2.757,219,3.082,220,2.757,440,3.751,1192,4.06,1224,4.415,1226,4.964]],["title/injectables/MultimediaService.html",[495,1.555,1227,2.462]],["body/injectables/MultimediaService.html",[3,0.153,4,0.11,9,0.132,21,0.693,22,1.539,25,1.496,29,1.293,30,1.153,32,0.016,33,1.752,34,1.607,35,0.017,36,1.398,37,0.81,38,1.474,39,0.895,47,1.033,52,1.047,60,1.192,63,1.404,67,0.016,68,4.51,70,0.562,71,0.367,77,0.153,78,0.393,80,1.88,81,1.418,83,2.166,85,1.8,89,2.796,164,1.093,183,0.01,184,0.012,185,0.01,186,0.01,218,3.387,253,0.986,314,1.132,380,2.573,408,3.901,476,2.404,484,2.654,495,2.404,496,2.573,514,2.654,539,5.891,544,5.035,591,3.19,594,2.746,610,3.19,783,3.125,1159,4.118,1166,4.51,1227,3.805,1228,3.901,1229,5.832,1230,4.518,1231,6.824,1232,4.518,1233,5.463,1234,5.832,1235,5.832,1236,5.832,1237,5.832,1238,4.518,1239,5.035,1240,5.035,1241,7.234,1242,5.035,1243,5.035,1244,5.832,1245,5.832,1246,4.518,1247,4.518,1248,4.518,1249,3.901,1250,4.518,1251,4.518,1252,4.518,1253,4.518,1254,4.518,1255,4.518,1256,4.518,1257,4.518]],["title/components/NewRetoComponent.html",[0,0.244,163,0.954]],["body/components/NewRetoComponent.html",[0,0.239,1,0.579,2,0.632,3,0.126,4,0.091,5,0.719,6,0.719,7,0.719,8,0.719,9,0.07,11,0.858,12,1.627,13,0.719,14,0.66,15,2.224,16,2.039,17,1.114,19,1.114,21,0.367,22,0.979,23,1.832,25,1.052,29,1.493,30,1.195,32,0.016,34,1.022,35,0.017,36,0.688,37,0.918,38,0.937,39,0.785,41,0.689,42,1.36,44,1.593,47,1.253,52,1.049,54,2.868,55,1.022,58,2.326,59,1.458,60,1.459,61,1.114,63,0.72,66,1.164,67,0.013,70,0.564,71,0.195,76,0.632,77,0.081,78,0.208,79,0.858,80,1.737,81,0.751,82,1.918,85,0.979,86,1.455,92,1.458,132,0.719,133,1.114,134,1.114,135,1.237,136,0.719,137,1.536,138,0.719,139,0.719,140,0.753,141,0.719,142,0.579,143,0.719,144,0.605,145,0.719,146,0.605,147,0.66,148,1.114,149,0.579,150,0.719,151,0.605,152,0.719,153,0.555,154,0.719,155,0.605,156,1.364,157,0.605,158,0.605,159,0.719,160,0.579,161,0.632,162,0.719,163,1.292,164,1.676,165,0.579,166,0.605,167,0.719,168,0.605,169,0.719,170,0.605,171,0.719,172,0.579,173,0.719,174,0.579,175,0.719,176,0.605,177,0.719,178,0.605,179,0.605,180,1.338,181,0.719,182,0.719,183,0.005,184,0.008,185,0.008,186,0.005,205,0.987,225,0.823,231,2.066,232,1.349,242,2.212,243,1.676,246,2.911,247,2.74,250,2.266,251,1.114,253,1.184,262,1.688,263,2.641,271,1.529,285,2.009,286,1.877,287,2.112,290,3.202,293,1.835,300,1.114,306,1.458,307,1.605,311,2.585,314,0.72,326,1.408,331,1.852,335,1.212,336,2.298,337,1.306,348,1.363,353,1.363,354,1.458,394,1.691,400,1.778,420,1.691,469,1.09,474,1.036,476,2.854,484,2.326,500,3.103,521,3.106,560,3.831,566,3.202,567,2.112,569,3.205,570,3.335,580,3.202,605,3.905,610,2.619,632,2.176,644,2.911,678,4.827,706,2.067,707,2.74,709,2.74,710,2.433,768,1.988,769,1.988,770,1.988,771,2.433,772,1.988,773,1.988,774,1.988,783,1.988,815,2.868,816,2.619,835,2.868,837,1.09,878,3.202,893,1.562,901,2.42,908,1.455,940,1.852,949,3.51,950,2.868,991,2.868,1009,2.868,1022,3.202,1029,2.067,1047,1.562,1062,2.067,1072,1.691,1092,4.413,1095,3.953,1096,3.953,1113,3.202,1114,3.202,1122,4.277,1127,4.277,1128,1.852,1131,1.852,1132,4.277,1133,4.277,1146,2.619,1177,3.202,1199,3.202,1208,3.953,1218,5.286,1227,3.335,1233,4.524,1243,3.202,1258,3.919,1259,3.919,1260,4.539,1261,3.709,1262,5.112,1263,5.112,1264,4.413,1265,4.413,1266,4.413,1267,4.413,1268,4.413,1269,3.709,1270,3.709,1271,3.202,1272,3.202,1273,2.394,1274,3.709,1275,3.709,1276,2.394,1277,3.202,1278,2.394,1279,3.202,1280,2.394,1281,3.202,1282,3.709,1283,3.709,1284,2.394,1285,3.202,1286,4.413,1287,3.202,1288,3.709,1289,4.539,1290,2.394,1291,2.868,1292,3.709,1293,2.394,1294,3.709,1295,3.709,1296,2.394,1297,2.394,1298,2.067,1299,2.067,1300,2.067,1301,1.852,1302,2.067,1303,2.394,1304,2.394,1305,2.067,1306,2.067,1307,2.067,1308,1.852,1309,2.067,1310,2.067,1311,2.067,1312,2.067,1313,2.067,1314,2.067,1315,2.067,1316,2.067,1317,3.919,1318,2.067,1319,2.067,1320,2.067,1321,2.394,1322,2.067,1323,2.394,1324,2.394,1325,2.394,1326,2.394,1327,2.394,1328,2.394,1329,2.394,1330,2.394,1331,2.394,1332,3.202,1333,2.868]],["title/components/NewsPagePage.html",[0,0.244,165,0.913]],["body/components/NewsPagePage.html",[0,0.264,1,0.659,2,0.718,3,0.139,4,0.067,5,0.817,6,0.817,7,0.817,8,0.817,9,0.079,11,0.976,12,1.761,13,0.817,14,1.505,15,2.262,16,2.075,17,1.228,19,1.228,21,0.418,22,1.079,23,1.958,25,0.631,29,1.578,30,1.234,32,0.016,33,1.228,34,1.353,35,0.017,36,0.911,37,0.932,38,1.241,39,0.754,41,0.783,42,1.395,43,1.684,44,1.659,47,1.162,52,0.944,58,1.861,59,1.607,60,1.441,61,1.641,63,0.794,67,0.013,70,0.556,71,0.221,77,0.092,78,0.237,79,0.976,80,1.694,82,0.892,85,1.079,132,0.817,133,1.228,134,1.228,135,0.659,136,0.817,137,1.641,138,0.817,139,0.817,140,0.83,141,0.817,142,0.659,143,0.817,144,0.688,145,0.817,146,0.688,147,0.75,148,1.228,149,0.659,150,0.817,151,0.688,152,0.817,153,0.631,154,0.817,155,0.688,156,1.476,157,0.688,158,0.688,159,0.817,160,0.659,161,0.718,162,0.817,163,0.688,164,0.659,165,1.322,166,1.659,167,0.817,168,0.688,169,0.817,170,0.688,171,0.817,172,0.659,173,0.817,174,0.659,175,0.817,176,0.688,177,0.817,178,0.688,179,0.688,180,0.578,181,0.817,182,0.817,183,0.006,184,0.009,185,0.006,186,0.006,225,0.907,226,3.161,227,3.82,232,1.961,240,2.197,241,3.138,242,2.662,243,1.92,249,2.662,250,2.381,251,1.228,253,1.078,254,1.607,284,2.668,285,2.639,287,2.329,296,4.716,300,1.228,302,4.716,304,1.534,306,2.147,307,1.77,313,1.761,314,1.136,315,1.761,320,1.931,321,5.31,326,1.127,332,1.922,333,1.377,334,1.775,335,1.377,337,1.769,339,1.654,446,3.138,448,4.688,454,2.355,457,2.463,458,3.637,482,2.797,534,2.985,745,3.531,756,2.192,812,2.105,817,3.799,818,3.562,834,2.668,837,1.238,840,1.55,841,2.105,843,1.654,870,3.162,905,3.469,1027,2.105,1158,3.531,1161,4.241,1334,5.073,1335,2.349,1336,4.913,1337,4.089,1338,4.913,1339,4.089,1340,5.462,1341,4.089,1342,5.462,1343,3.857,1344,4.089,1345,4.089,1346,2.721,1347,3.531,1348,4.089,1349,4.089,1350,4.089,1351,4.089,1352,4.089,1353,3.531,1354,4.089,1355,2.721,1356,2.721,1357,3.531,1358,4.089,1359,2.721,1360,3.162,1361,4.089,1362,4.089,1363,2.721,1364,4.089,1365,4.089,1366,2.721,1367,2.721,1368,2.721,1369,2.721,1370,4.089,1371,3.531,1372,3.531,1373,2.721,1374,2.721,1375,2.721,1376,2.105,1377,4.089,1378,2.721,1379,2.721,1380,2.721,1381,2.721,1382,2.721,1383,2.721,1384,2.721,1385,2.721,1386,2.721]],["title/modules/NewsPagePageModule.html",[187,1.184,1387,2.665]],["body/modules/NewsPagePageModule.html",[3,0.183,4,0.132,9,0.157,32,0.012,35,0.017,67,0.012,70,0.666,71,0.439,76,1.426,77,0.183,78,0.471,165,1.831,166,1.648,183,0.012,184,0.014,185,0.012,186,0.012,189,1.555,190,2.823,195,2.46,196,2.46,197,2.46,199,2.46,200,2.736,201,2.047,202,3.302,203,2.591,204,3.302,205,2.228,206,3.127,207,2.736,209,2.823,210,2.897,211,1.696,212,2.591,446,2.897,448,3.527,1334,3.817,1387,5.451,1388,4.667,1389,4.667,1390,4.667,1391,4.936,1392,5.406,1393,4.667]],["title/modules/NewsPagePageRoutingModule.html",[187,1.184,1391,2.462]],["body/modules/NewsPagePageRoutingModule.html",[0,0.371,3,0.195,4,0.141,9,0.168,32,0.012,35,0.017,67,0.012,70,0.626,71,0.467,77,0.195,78,0.501,85,1.517,165,1.638,166,1.453,183,0.012,184,0.014,185,0.012,186,0.012,189,1.654,201,2.123,211,1.804,214,2.911,215,3.448,216,3.426,217,2.26,218,2.757,219,3.082,220,2.757,446,3.082,448,3.751,1334,4.06,1391,4.415,1393,4.964]],["title/interfaces/NewsResponse.html",[453,1.086,477,2.149]],["body/interfaces/NewsResponse.html",[3,0.148,4,0.165,9,0.127,21,0.669,32,0.017,35,0.017,36,0.809,37,0.97,39,0.669,42,1.356,47,1.009,52,1.181,55,1.201,63,1.494,66,1.992,67,0.012,77,0.228,140,0.885,183,0.009,184,0.014,185,0.009,186,0.009,225,1.264,251,1.712,253,1.073,262,2.593,265,1.494,293,1.368,304,2.526,314,0.846,320,2.495,326,1.57,446,2.337,453,2.129,454,3.499,455,1.887,456,2.844,457,2.621,458,3.536,459,2.844,460,2.844,461,2.844,462,3.078,463,2.844,464,3.078,465,3.078,466,4.83,467,3.078,468,3.078,469,1.984,470,2.844,471,3.078,472,3.078,473,4.753,474,1.887,475,2.844,476,1.797,477,3.245,478,4.753,479,4.753,480,2.884,481,4.753,482,3.977,483,2.09,484,1.984,485,2.844,486,3.078,487,3.078,488,2.09,489,2.649,490,3.078,965,3.372,1394,3.764,1395,3.372,1396,4.36,1397,3.764]],["title/injectables/NewsService.html",[495,1.555,1343,2.665]],["body/injectables/NewsService.html",[3,0.143,4,0.103,9,0.123,21,0.646,22,1.469,25,1.445,29,1.384,30,1.054,32,0.015,33,1.672,34,1.718,35,0.017,36,1.032,37,0.866,38,1.407,39,0.854,42,1.08,43,1.908,44,1.407,47,0.986,52,1.181,56,4.305,60,1.752,63,1.211,66,1.32,67,0.013,70,0.618,71,0.342,77,0.143,78,0.366,80,1.533,81,1.32,82,2.045,83,2.668,85,1.469,89,2.668,135,1.717,183,0.009,184,0.012,185,0.009,186,0.009,250,2.275,253,0.941,271,2.294,293,1.747,314,1.288,380,2.396,399,3.254,405,2.971,454,2.017,457,2.662,458,3.158,477,2.396,482,3.17,485,3.631,495,2.294,496,2.396,543,5.34,587,2.971,589,4.305,591,2.971,594,2.557,814,4.305,870,4.305,1111,4.806,1159,3.93,1209,4.806,1239,4.806,1343,3.93,1395,5.596,1398,3.254,1399,5.567,1400,6.639,1401,4.207,1402,5.732,1403,4.207,1404,5.34,1405,5.567,1406,5.567,1407,5.567,1408,4.207,1409,4.207,1410,5.567,1411,5.567,1412,6.639,1413,5.567,1414,4.305,1415,5.567,1416,5.567,1417,4.207,1418,5.567,1419,5.567,1420,4.207,1421,4.207,1422,3.632,1423,4.305,1424,3.632,1425,3.254,1426,3.632,1427,4.207,1428,4.207,1429,4.207,1430,4.207,1431,4.207,1432,3.632]],["title/components/NoticiaComponent.html",[0,0.244,168,0.954]],["body/components/NoticiaComponent.html",[0,0.282,1,0.72,2,0.785,3,0.148,4,0.073,5,0.894,6,0.894,7,0.894,8,0.894,9,0.087,13,0.894,14,0.82,15,2.287,16,2.116,17,1.312,19,1.312,21,0.457,22,1.153,25,0.689,26,2.569,27,4.487,28,4.757,29,1.409,30,1.252,32,0.016,34,0.82,35,0.017,36,0.552,37,0.844,38,0.752,39,0.457,40,5.248,41,1.978,42,1.417,43,1.956,47,1.27,48,4.029,51,2.655,52,1.149,53,3.379,55,1.572,56,3.379,60,1.366,61,1.312,65,3.379,66,0.933,67,0.011,70,0.529,71,0.242,72,2.655,73,2.655,74,2.101,75,2.301,76,0.785,77,0.101,78,0.259,80,1.572,81,0.933,82,1.698,83,1.426,84,2.569,85,1.153,86,1.808,88,2.569,89,1.426,90,3.723,113,2.342,117,3.147,132,0.894,133,1.312,134,1.312,135,1.253,136,0.894,137,1.714,138,0.894,139,0.894,140,0.887,141,0.894,142,0.72,143,0.894,144,0.752,145,0.894,146,0.752,147,0.82,148,1.312,149,0.72,150,0.894,151,0.752,152,0.894,153,0.689,154,0.894,155,0.752,156,1.555,157,0.752,158,0.752,159,0.894,160,0.72,161,0.785,162,0.894,163,0.752,164,0.72,165,0.72,166,0.752,167,0.894,168,1.442,169,0.894,170,0.752,171,0.894,172,0.72,173,0.894,174,0.72,175,0.894,176,0.752,177,0.894,178,0.752,179,0.752,180,0.631,181,0.894,182,0.894,183,0.006,184,0.009,185,0.006,186,0.006,253,0.738,268,2.046,271,1.801,304,1.639,309,2.384,326,1.204,354,1.169,409,4.757,410,1.941,411,2.101,454,3.046,457,2.384,458,2.212,463,1.941,466,4.395,500,2.482,517,2.655,520,3.772,521,3.468,550,2.488,559,4.413,567,3.249,601,2.101,605,3.085,632,2.095,645,3.046,686,3.406,715,1.694,793,1.426,798,3.468,849,3.656,872,2.301,875,2.488,880,2.949,891,3.772,971,3.772,973,3.379,986,5.317,987,4.413,1036,3.085,1042,2.301,1044,3.379,1046,2.301,1047,1.941,1048,2.301,1333,2.301,1376,2.301,1433,2.569,1434,5.178,1435,4.369,1436,5.707,1437,5.707,1438,5.707,1439,4.927,1440,4.927,1441,4.369,1442,4.369,1443,4.369,1444,4.369,1445,5.707,1446,4.369,1447,2.975,1448,3.772,1449,4.369,1450,3.772,1451,4.369,1452,2.975,1453,4.369,1454,2.975,1455,4.369,1456,3.772,1457,2.975,1458,3.772,1459,4.369,1460,2.569,1461,2.569,1462,2.569,1463,2.975,1464,2.569,1465,2.975,1466,2.569,1467,2.569,1468,2.569,1469,2.569,1470,2.975,1471,2.975,1472,2.975,1473,4.369,1474,4.369,1475,2.975,1476,4.369,1477,4.369,1478,4.369]],["title/components/NoticiasComponent.html",[0,0.244,170,0.954]],["body/components/NoticiasComponent.html",[0,0.36,1,1.023,2,1.115,3,0.189,4,0.103,5,1.27,6,1.27,7,1.27,8,1.27,9,0.123,13,1.27,14,1.164,15,2.368,16,2.172,17,1.677,19,1.677,21,0.649,25,1.602,29,1.387,30,1.057,32,0.015,33,1.677,35,0.017,37,0.923,41,1.989,42,1.291,44,1.411,47,0.989,52,0.857,55,1.538,67,0.009,70,0.486,71,0.343,77,0.143,78,0.368,132,1.27,133,1.677,134,1.677,135,1.023,136,1.27,137,1.998,138,1.27,139,1.27,140,1.133,141,1.27,142,1.023,143,1.27,144,1.068,145,1.27,146,1.068,147,1.164,148,1.677,149,1.023,150,1.27,151,1.068,152,1.27,153,0.979,154,1.27,155,1.068,156,1.878,157,1.068,158,1.068,159,1.27,160,1.023,161,1.115,162,1.27,163,1.068,164,1.023,165,1.023,166,1.068,167,1.27,168,1.068,169,1.27,170,1.681,171,1.27,172,1.023,173,1.27,174,1.023,175,1.27,176,1.068,177,1.27,178,1.068,179,1.068,180,0.897,181,1.27,182,1.27,183,0.009,184,0.012,185,0.009,186,0.009,225,1.238,226,2.845,306,2.195,313,2.002,314,1.084,315,2.002,454,3.525,458,2.826,482,3.56,696,4.318,698,2.992,764,2.541,818,2.826,834,3.643,875,3.179,877,3.643,880,3.179,1376,3.269,1448,4.821,1456,4.821,1458,4.821,1479,3.649,1480,6.253,1481,5.584,1482,5.584,1483,4.318,1484,5.584,1485,6.651,1486,4.227,1487,5.584]],["title/components/PerfilPage.html",[0,0.244,172,0.913]],["body/components/PerfilPage.html",[0,0.175,1,0.393,2,0.428,3,0.092,4,0.085,5,0.814,6,0.487,7,0.487,8,0.487,9,0.047,11,0.581,12,1.251,13,0.487,14,1.249,15,2.084,16,1.912,17,0.814,19,0.814,21,0.249,22,0.715,23,1.461,25,0.809,29,1.389,30,1.058,32,0.017,33,1.224,34,0.746,35,0.017,36,0.503,37,0.722,38,0.685,39,0.416,41,0.467,42,1.4,43,1.679,44,1.61,47,1.259,50,1.452,52,1.178,54,2.095,55,1.692,58,2.66,59,1.065,60,1.494,61,0.814,63,0.88,66,1.279,67,0.015,70,0.535,71,0.132,76,0.715,77,0.055,78,0.236,79,0.581,80,1.61,81,0.509,82,1.787,85,1.438,86,0.986,112,2.277,113,1.87,117,2.755,119,1.254,132,0.487,133,0.814,134,0.814,135,1.097,136,0.487,137,1.224,138,0.487,139,0.487,140,0.827,141,0.487,142,0.393,143,0.487,144,0.41,145,0.487,146,0.41,147,0.447,148,0.814,149,0.393,150,0.487,151,0.41,152,0.487,153,0.376,154,0.487,155,0.41,156,1.048,157,0.41,158,0.41,159,0.487,160,0.393,161,0.428,162,0.487,163,0.41,164,0.393,165,0.393,166,0.41,167,0.487,168,0.41,169,0.487,170,0.41,171,0.487,172,0.986,173,0.487,174,0.393,175,0.487,176,0.41,177,0.487,178,0.41,179,0.41,180,0.344,181,0.487,182,0.487,183,0.003,184,0.006,185,0.007,186,0.003,217,0.638,225,0.601,228,1.233,231,1.588,232,1.918,240,1.529,242,1.51,243,1.336,244,2.321,245,1.954,249,1.764,250,2.342,251,1.472,253,1.173,256,1.452,257,1.452,258,1.543,262,1.233,265,1.782,268,0.971,269,3.197,271,2.143,276,2.095,277,3.224,285,1.602,287,1.543,288,2.878,291,1.913,293,2.242,299,2.185,300,1.943,306,1.602,309,1.701,310,1.647,312,2.23,322,1.543,324,1.372,326,0.746,328,1.254,333,0.821,336,1.372,337,1.004,338,1.254,352,0.869,354,0.638,356,0.869,361,0.924,394,1.145,404,0.986,421,2.477,457,1.838,460,1.058,476,2.702,484,2.23,493,2.095,498,2.277,500,3.101,509,1.058,511,4.215,517,0.986,530,2.659,553,1.254,557,3.274,561,3.152,564,2.095,567,1.543,568,1.372,570,1.768,571,2.063,597,3.132,603,1.543,610,3.46,615,1.913,626,0.702,632,2.944,634,1.145,644,3.104,645,2.349,648,1.058,656,1.254,682,1.372,684,2.339,688,2.339,692,2.339,715,1.543,755,2.477,759,1.647,761,1.452,781,1.543,783,2.921,814,1.254,834,1.768,837,0.738,838,1.145,843,0.986,872,2.095,883,2.339,888,1.254,890,2.339,893,2.659,906,2.095,908,1.647,946,1.4,973,2.095,975,3.519,1015,3.152,1036,1.913,1097,3.519,1098,3.519,1120,1.4,1141,1.4,1146,3.46,1166,2.095,1188,2.339,1200,1.254,1227,2.659,1233,3.789,1258,3.519,1259,3.013,1264,3.519,1265,3.519,1266,3.519,1267,3.519,1268,3.519,1271,4.706,1272,2.339,1277,2.339,1281,3.519,1285,3.519,1286,5.5,1287,4.23,1291,3.152,1298,2.339,1299,1.4,1300,1.4,1301,1.254,1302,1.4,1305,2.339,1306,2.339,1307,2.339,1308,2.095,1309,2.339,1310,2.339,1311,2.339,1312,1.4,1313,2.339,1314,2.339,1315,2.339,1316,2.339,1317,3.519,1318,2.339,1319,2.339,1320,2.339,1322,2.339,1332,2.339,1333,2.095,1347,3.519,1353,2.339,1357,3.519,1439,3.519,1440,3.519,1460,4.889,1461,1.4,1462,3.914,1464,3.914,1466,1.4,1467,3.013,1468,3.519,1469,1.4,1483,1.254,1488,1.4,1489,3.49,1490,2.71,1491,2.71,1492,4.076,1493,4.076,1494,4.076,1495,4.076,1496,4.076,1497,2.71,1498,2.71,1499,2.71,1500,2.095,1501,2.71,1502,5.845,1503,2.71,1504,2.71,1505,2.71,1506,2.71,1507,2.71,1508,2.71,1509,1.622,1510,2.71,1511,2.71,1512,2.71,1513,2.71,1514,1.622,1515,2.71,1516,2.71,1517,2.71,1518,4.533,1519,4.9,1520,4.076,1521,2.71,1522,1.622,1523,2.339,1524,1.622,1525,2.71,1526,2.71,1527,1.622,1528,1.622,1529,4.076,1530,4.076,1531,1.622,1532,2.71,1533,1.622,1534,2.71,1535,1.622,1536,1.622,1537,1.622,1538,1.4,1539,1.622,1540,1.622,1541,1.4,1542,1.4,1543,1.622,1544,1.622,1545,1.622,1546,1.622,1547,1.622,1548,2.71,1549,1.622,1550,1.622,1551,1.622,1552,1.622,1553,1.622,1554,2.71,1555,3.49,1556,2.71,1557,3.49,1558,3.49,1559,1.622,1560,1.622,1561,1.622,1562,1.622,1563,1.622,1564,1.622,1565,1.622,1566,1.622,1567,1.622,1568,1.622,1569,1.622,1570,1.622,1571,1.622,1572,2.71,1573,2.71,1574,1.622,1575,1.622,1576,1.622,1577,1.622,1578,1.622,1579,2.71,1580,2.339,1581,1.622,1582,1.622,1583,1.4,1584,3.49,1585,1.622,1586,4.076,1587,1.622,1588,1.622,1589,1.622,1590,3.49,1591,1.622,1592,1.622,1593,1.622,1594,1.622,1595,1.622,1596,1.622,1597,1.622,1598,2.71,1599,2.71,1600,1.622,1601,2.71,1602,2.71,1603,2.71,1604,2.71,1605,1.622,1606,2.71,1607,2.71,1608,2.71,1609,2.71]],["title/modules/PerfilPageModule.html",[187,1.184,1610,2.665]],["body/modules/PerfilPageModule.html",[3,0.184,4,0.133,9,0.158,32,0.012,35,0.017,67,0.012,70,0.667,71,0.441,76,1.433,77,0.184,78,0.473,172,1.833,183,0.012,184,0.014,185,0.012,186,0.012,189,1.562,190,2.83,195,2.471,196,2.471,197,2.471,199,2.471,200,2.748,201,2.052,202,3.311,203,2.603,204,3.311,205,2.238,206,3.136,207,2.748,209,2.83,210,2.91,211,1.704,212,2.603,288,3.834,1610,5.455,1611,4.688,1612,4.688,1613,4.688,1614,4.941,1615,5.43,1616,4.688]],["title/modules/PerfilPageRoutingModule.html",[187,1.184,1614,2.462]],["body/modules/PerfilPageRoutingModule.html",[0,0.373,3,0.196,4,0.141,9,0.168,32,0.012,35,0.017,67,0.012,70,0.627,71,0.469,77,0.196,78,0.503,85,1.524,172,1.642,183,0.012,184,0.014,185,0.012,186,0.012,189,1.662,201,2.129,211,1.813,214,2.925,215,3.455,216,3.435,217,2.271,218,2.77,219,3.097,220,2.77,1614,4.428,1616,4.988,1617,5.778]],["title/components/RankingPage.html",[0,0.244,174,0.913]],["body/components/RankingPage.html",[0,0.318,1,0.851,2,0.928,3,0.209,4,0.086,5,1.057,6,1.057,7,1.057,8,1.057,9,0.102,11,1.261,12,2.039,13,1.057,14,0.969,15,2.328,16,2.135,17,1.48,19,1.48,21,0.54,22,1.3,23,2.209,25,1.318,29,1.491,30,1.136,32,0.016,33,1.48,34,0.969,35,0.017,36,0.652,37,0.958,38,0.889,39,0.54,41,1.012,42,1.34,44,1.245,47,1.149,51,3.456,52,0.946,59,1.937,60,0.928,61,1.057,63,0.956,67,0.007,70,0.565,71,0.286,77,0.119,78,0.306,79,1.261,80,1.567,81,1.104,82,1.153,132,1.057,133,1.48,134,1.48,135,0.851,136,1.057,137,1.851,138,1.057,139,1.057,140,1,141,1.057,142,0.851,143,1.057,144,0.889,145,1.057,146,0.889,147,0.969,148,1.48,149,0.851,150,1.057,151,0.889,152,1.057,153,0.815,154,1.057,155,0.889,156,1.708,157,0.889,158,0.889,159,1.057,160,0.851,161,0.928,162,1.057,163,0.889,164,0.851,165,0.851,166,0.889,167,1.057,168,0.889,169,1.057,170,0.889,171,1.057,172,0.851,173,1.057,174,1.491,175,1.057,176,0.889,177,1.057,178,0.889,179,0.889,180,0.747,181,1.057,182,1.057,183,0.007,184,0.011,185,0.007,186,0.007,225,1.093,226,3.06,227,4.387,228,2.242,231,2.588,232,2.027,233,3.829,239,3.037,240,2.312,241,3.477,242,2.667,243,2.02,249,2.461,250,2.366,251,1.48,253,1.041,254,2.422,285,2.643,293,1.546,300,1.48,309,1.849,310,2.994,313,1.261,314,0.683,315,1.261,317,2.362,318,3.479,326,1.357,332,2.484,333,1.781,334,2.295,335,1.781,336,1.781,337,1.636,338,2.72,339,2.138,343,3.037,365,3.811,368,4.254,436,3.811,515,4.254,517,2.994,568,2.494,793,1.686,815,2.72,816,3.479,818,3.119,821,3.811,837,1.601,840,2.003,947,4.254,1500,3.811,1618,3.037,1619,5.687,1620,4.928,1621,4.928,1622,3.518,1623,4.928,1624,3.518,1625,3.518,1626,3.518,1627,3.518]],["title/modules/RankingPageModule.html",[187,1.184,1628,2.665]],["body/modules/RankingPageModule.html",[3,0.184,4,0.133,9,0.158,32,0.012,35,0.017,67,0.012,70,0.667,71,0.442,76,1.435,77,0.184,78,0.473,174,1.833,183,0.012,184,0.014,185,0.012,186,0.012,189,1.564,190,2.833,195,2.475,196,2.475,197,2.475,199,2.475,200,2.753,201,2.054,202,3.314,203,2.607,204,3.314,205,2.241,206,3.138,207,2.753,209,2.833,210,2.914,211,1.706,212,2.607,436,4.205,1628,5.457,1629,4.695,1630,4.695,1631,4.695,1632,4.943,1633,5.438,1634,4.695]],["title/modules/RankingPageRoutingModule.html",[187,1.184,1632,2.462]],["body/modules/RankingPageRoutingModule.html",[0,0.373,3,0.196,4,0.141,9,0.168,32,0.012,35,0.017,67,0.012,70,0.627,71,0.469,77,0.196,78,0.503,85,1.524,174,1.642,183,0.012,184,0.014,185,0.012,186,0.012,189,1.662,201,2.129,211,1.813,214,2.925,215,3.455,216,3.435,217,2.271,218,2.77,219,3.097,220,2.77,1632,4.428,1634,4.988,1635,5.778]],["title/components/RegistroComponent.html",[0,0.244,176,0.954]],["body/components/RegistroComponent.html",[0,0.297,1,0.772,2,0.842,3,0.156,4,0.078,5,0.959,6,0.959,7,0.959,8,0.959,9,0.093,11,1.144,12,1.932,13,0.959,14,0.879,15,2.305,16,2.114,17,1.381,19,1.381,21,0.49,22,1.213,23,2.114,25,1.249,29,1.444,30,1.161,32,0.016,33,1.381,34,1.267,35,0.017,36,1.159,37,0.868,38,1.162,39,0.706,41,1.798,44,1.645,47,0.814,60,1.213,61,1.381,63,0.892,67,0.007,70,0.544,71,0.259,76,0.842,77,0.108,78,0.278,79,1.144,80,1.625,81,1.001,82,1.507,132,0.959,133,1.381,134,1.381,135,0.772,136,0.959,137,1.772,138,0.959,139,0.959,140,0.933,141,0.959,142,0.772,143,0.959,144,0.806,145,0.959,146,0.806,147,0.879,148,1.381,149,0.772,150,0.959,151,0.806,152,0.959,153,0.739,154,0.959,155,0.806,156,1.619,157,0.806,158,0.806,159,0.959,160,0.772,161,0.842,162,0.959,163,0.806,164,1.427,165,0.772,166,0.806,167,0.959,168,0.806,169,0.959,170,0.806,171,0.959,172,0.772,173,0.959,174,0.772,175,0.959,176,1.49,177,0.959,178,0.806,179,0.806,180,0.677,181,0.959,182,0.959,183,0.007,184,0.01,185,0.007,186,0.007,205,1.315,225,1.02,232,0.842,243,1.934,250,2.021,251,1.772,253,1.161,256,2.464,268,1.648,293,2.043,300,1.381,313,2.114,314,0.892,315,1.648,333,1.615,337,1.798,351,3,354,2.559,455,1.99,517,2.794,521,2.794,557,2.327,559,3.556,560,4.316,569,3.246,570,3.848,581,3.969,616,3.246,645,2.204,648,3,681,5.092,682,2.728,707,3.161,709,2.464,710,3.161,761,2.464,764,2.092,1072,2.253,1089,5.397,1091,5.397,1095,4.561,1096,4.561,1117,6.132,1122,4.168,1127,4.561,1128,2.468,1129,2.755,1131,2.468,1132,4.168,1133,4.168,1134,2.755,1135,4.653,1136,4.653,1137,2.755,1138,3.969,1139,2.755,1147,3.969,1148,3.969,1279,3.969,1483,3.556,1500,3.556,1583,3.969,1636,2.755,1637,5.39,1638,4.598,1639,5.39,1640,3.191,1641,4.598,1642,5.39,1643,3.191,1644,4.598,1645,4.598,1646,4.598,1647,4.598,1648,4.598,1649,4.598,1650,3.191,1651,4.598,1652,3.191,1653,4.598,1654,3.191,1655,4.598,1656,3.191,1657,3.191,1658,3.191,1659,4.598,1660,4.598,1661,3.191,1662,3.191,1663,4.598]],["title/interfaces/Reto.html",[263,1.353,453,1.086]],["body/interfaces/Reto.html",[3,0.107,4,0.077,9,0.092,21,0.482,30,0.531,32,0.016,35,0.017,36,0.991,37,1.03,39,0.482,42,1.328,43,1.077,44,1.57,47,1.364,52,0.82,55,1.712,63,1.529,66,0.986,67,0.015,77,0.211,92,1.236,113,1.685,140,0.638,180,1.452,183,0.007,184,0.01,185,0.007,186,0.007,225,1.009,228,2.665,232,1.839,251,1.867,253,1.302,254,2.101,263,2.727,265,2.13,268,1.127,270,2.665,292,2.59,299,1.685,300,1.366,304,1.706,309,1.706,311,3.689,312,3.113,314,1.297,320,2.101,322,3.539,326,1.253,337,1.863,400,2.562,425,1.91,443,2.07,453,2.036,455,1.36,469,2.948,474,2.803,476,2.67,480,1.591,483,3.28,488,1.507,514,1.431,545,3.472,557,1.591,565,1.79,568,2.302,571,2.302,596,3.668,597,2.438,603,1.79,626,1.968,650,4.06,682,2.302,686,2.864,698,1.685,700,1.91,748,2.562,749,1.91,750,3.335,751,2.051,752,2.967,753,2.051,754,4.054,755,1.91,756,1.685,757,2.051,758,3.248,759,3.248,760,2.051,761,1.685,762,2.051,763,2.764,764,1.431,765,2.051,766,3.487,767,2.967,768,2.438,769,2.438,770,2.438,771,3.472,772,2.438,773,2.438,774,2.438,775,2.764,776,3.335,777,2.967,778,2.967,779,2.967,780,2.967,781,2.59,782,3.821,783,2.438,784,2.051,785,1.79,786,2.051,787,2.051,788,2.051,789,1.79,790,1.91,791,2.051,792,2.051,793,1.507,794,1.91,795,2.051,796,1.431,797,1.591,798,2.764,799,1.79,800,2.051,801,2.051,802,2.051,803,1.91,804,2.051]],["title/components/RetoComponent.html",[0,0.244,178,0.954]],["body/components/RetoComponent.html",[0,0.22,1,0.381,2,0.415,3,0.19,4,0.038,5,0.473,6,0.473,7,0.473,8,0.473,9,0.046,11,0.564,12,1.224,13,0.473,14,0.434,15,2.072,16,1.9,17,0.794,19,0.794,21,0.242,22,0.697,23,1.434,25,0.791,28,3.8,29,1.551,30,1.244,32,0.016,33,0.794,34,1.593,35,0.017,36,1.128,37,1.015,38,1.461,39,0.826,41,1.282,42,1.474,43,2.085,44,1.22,47,1.352,50,1.417,51,1.606,52,0.97,53,2.044,58,2.449,59,1.039,60,1.568,61,1.541,63,1.48,66,0.494,67,0.003,68,2.044,70,0.503,71,0.128,72,0.957,73,0.957,76,0.415,77,0.053,78,0.137,79,0.564,80,1.835,81,0.494,82,1.582,83,1.267,85,0.415,89,2.58,92,1.897,117,0.957,127,2.278,132,0.473,133,0.794,134,0.794,135,0.381,136,0.473,137,1.202,138,0.473,139,0.473,140,0.537,141,0.473,142,0.381,143,0.473,144,0.398,145,0.473,146,0.398,147,0.434,148,0.794,149,0.381,150,0.473,151,0.398,152,0.473,153,0.365,154,0.473,155,0.863,156,1.026,157,0.398,158,0.398,159,0.473,160,0.381,161,0.415,162,0.473,163,0.398,164,0.381,165,0.381,166,0.398,167,0.473,168,0.398,169,0.473,170,0.398,171,0.473,172,0.381,173,0.473,174,0.381,175,0.473,176,0.398,177,0.473,178,1.011,179,0.398,180,1.227,181,0.473,182,0.473,183,0.003,184,0.006,185,0.003,186,0.003,225,0.586,226,1.554,228,2.029,231,1.554,232,1.791,240,1.501,242,1.731,243,1.312,244,2.278,245,1.918,246,1.945,247,2.144,249,1.731,250,1.845,251,1.202,253,1.244,256,1.417,257,1.417,258,1.505,261,3.094,263,2.754,265,2.127,268,1.434,271,2.507,277,1.505,284,1.724,285,2.44,286,1.338,293,1.255,300,1.45,304,1.501,306,1.039,307,2.089,309,2.282,310,2.431,312,2.631,313,1.434,314,1.122,315,1.434,317,1.918,324,1.338,326,1.102,333,0.797,336,2.443,337,1.817,348,2.278,352,2.389,353,2.278,354,1.752,355,2.431,356,2.389,360,1.606,361,0.897,363,2.044,404,0.957,409,3.8,410,1.027,411,1.112,443,2.547,457,0.992,498,2.228,500,2.314,509,1.027,532,2.044,533,1.866,545,2.144,553,1.218,564,1.218,565,1.505,601,1.112,626,2.911,632,1.267,644,1.505,648,2.909,676,0.957,677,1.112,707,2.144,709,1.831,710,2.144,714,1.027,715,0.897,717,1.027,748,3.255,764,1.82,768,1.831,769,1.831,770,1.831,771,2.749,772,0.844,773,0.844,774,0.844,776,3.065,789,3.464,797,3.293,810,2.044,811,2.044,818,2.025,819,2.282,826,2.044,834,1.724,837,0.717,838,1.112,839,1.112,840,0.897,849,2.412,853,1.218,854,1.218,858,2.044,875,1.505,877,2.61,880,1.945,897,1.724,905,3.408,908,1.606,949,2.641,950,2.044,951,2.949,952,2.949,954,2.282,955,2.282,957,3.454,958,2.282,959,2.282,960,2.282,961,2.282,962,2.282,963,1.359,967,3.454,976,2.282,978,4.992,979,2.282,986,3.732,987,3.094,988,2.282,989,2.282,993,2.282,996,2.282,999,2.282,1003,2.282,1005,2.282,1007,2.282,1009,4.704,1011,2.282,1015,2.044,1026,3.454,1031,1.359,1032,1.359,1033,2.282,1034,4.167,1035,1.359,1036,2.412,1037,1.359,1038,1.359,1039,2.282,1040,2.282,1041,2.282,1042,1.218,1043,1.359,1044,2.044,1045,1.359,1046,1.218,1047,1.027,1048,1.218,1049,1.359,1050,2.282,1051,1.359,1052,1.359,1053,1.359,1054,1.359,1055,1.359,1056,1.359,1057,1.359,1058,1.359,1059,1.359,1060,1.359,1061,1.359,1063,2.949,1064,1.359,1065,2.044,1068,1.359,1069,1.359,1070,1.359,1071,1.359,1176,3.454,1198,3.454,1212,2.282,1360,2.044,1372,3.454,1450,2.282,1523,3.454,1538,1.359,1541,1.359,1542,1.359,1664,1.359,1665,3.416,1666,2.643,1667,2.643,1668,2.643,1669,2.643,1670,1.575,1671,1.575,1672,1.575,1673,1.575,1674,1.575,1675,1.575,1676,2.643,1677,2.643,1678,2.643,1679,1.575,1680,1.575,1681,2.643,1682,2.643,1683,1.575,1684,4,1685,1.575,1686,1.575,1687,1.575,1688,1.575,1689,2.643,1690,1.575,1691,1.575,1692,2.643,1693,1.575,1694,2.282,1695,1.575,1696,1.575,1697,2.643,1698,2.282,1699,1.575,1700,2.643,1701,1.575,1702,1.575,1703,1.575,1704,2.643,1705,2.643,1706,1.575,1707,1.575,1708,1.575,1709,1.575,1710,1.575,1711,1.575,1712,1.575]],["title/interfaces/RetoConseguido.html",[453,1.086,785,2.149]],["body/interfaces/RetoConseguido.html",[3,0.114,4,0.082,9,0.098,21,0.517,30,0.569,32,0.016,35,0.017,36,1.03,37,0.92,39,0.517,42,1.352,43,1.155,44,1.528,47,1.358,52,0.853,55,1.759,63,1.52,66,1.057,67,0.015,77,0.216,92,1.324,113,1.806,140,0.684,180,1.407,183,0.007,184,0.01,185,0.007,186,0.007,225,1.06,228,3.171,232,1.896,251,1.918,253,1.296,254,2.184,263,2.689,265,1.638,268,1.208,270,2.751,292,1.919,299,1.806,300,1.669,304,2.268,309,1.264,311,2.722,312,2.905,314,1.324,320,1.879,322,3.164,326,1.53,337,1.907,400,2.663,425,2.048,443,2.175,453,2.067,455,1.458,469,2.175,474,2.069,476,1.97,480,1.706,483,3.398,488,1.615,514,1.533,545,2.562,557,1.706,565,1.919,568,2.42,571,2.42,596,3.356,597,2.562,603,2.722,626,2.763,650,3.674,682,2.42,686,2.562,698,1.806,700,2.048,748,2.663,749,2.048,750,3.443,751,2.198,752,4.165,753,2.198,754,4.165,755,2.048,756,1.806,757,2.198,758,2.905,759,2.905,760,2.198,761,1.806,762,2.198,763,2.905,764,1.533,765,2.198,766,4.165,767,2.198,768,1.806,769,1.806,770,1.806,771,2.562,772,1.806,773,1.806,774,1.806,775,2.048,776,2.722,777,2.198,778,2.198,779,2.198,780,2.198,781,1.919,782,2.198,783,1.806,784,3.119,785,2.722,786,3.119,787,3.944,788,3.119,789,2.722,790,2.905,791,2.198,792,2.198,793,1.615,794,2.048,795,2.198,796,1.533,797,1.706,798,2.905,799,1.919,800,2.198,801,2.198,802,2.198,803,2.048,804,2.198]],["title/components/RetosComponent.html",[0,0.244,179,0.954]],["body/components/RetosComponent.html",[0,0.371,1,1.071,2,1.167,3,0.195,4,0.108,5,1.329,6,1.329,7,1.329,8,1.329,9,0.129,13,1.329,14,1.219,15,2.377,16,2.18,17,1.728,19,1.728,21,0.679,25,1.626,29,1.418,30,1.08,32,0.015,33,1.728,35,0.017,37,0.799,41,1.273,67,0.009,70,0.501,71,0.359,77,0.15,78,0.385,92,2.261,132,1.329,133,1.728,134,1.728,135,1.071,136,1.329,137,2.033,138,1.329,139,1.329,140,1.168,141,1.329,142,1.071,143,1.329,144,1.118,145,1.329,146,1.118,147,1.219,148,1.728,149,1.071,150,1.329,151,1.118,152,1.329,153,1.025,154,1.329,155,1.118,156,1.92,157,1.118,158,1.118,159,1.329,160,1.071,161,1.167,162,1.329,163,1.118,164,1.071,165,1.071,166,1.118,167,1.329,168,1.118,169,1.329,170,1.118,171,1.329,172,1.071,173,1.329,174,1.071,175,1.329,176,1.118,177,1.329,178,1.118,179,1.711,180,1.607,181,1.329,182,1.329,183,0.009,184,0.012,185,0.009,186,0.009,225,1.276,226,2.909,263,2.662,313,2.062,314,1.117,315,2.062,317,2.758,550,3.276,837,2.013,875,3.276,880,3.276,1713,3.819,1714,6.393,1715,5.753,1716,5.753,1717,5.753,1718,4.424]],["title/interfaces/Source.html",[4,0.092,453,1.086]],["body/interfaces/Source.html",[3,0.151,4,0.172,9,0.13,21,0.683,32,0.017,35,0.017,36,1.071,37,0.89,38,1.46,39,0.683,42,1.365,47,1.135,52,1.179,55,1.226,63,1.511,66,2.012,67,0.009,77,0.23,140,1.377,183,0.009,184,0.014,185,0.009,186,0.009,225,1.281,251,1.926,253,1.218,262,2.026,265,2.325,293,1.397,304,2.167,314,0.864,320,2.27,326,1.226,446,2.386,453,2.139,454,3.253,455,1.926,456,2.904,457,2.406,458,3.245,459,2.904,460,2.904,461,2.904,462,3.143,463,2.904,464,3.143,465,3.143,466,4.903,467,3.143,468,3.143,469,2.026,470,2.904,471,3.143,472,3.143,473,5.179,474,1.926,475,2.904,476,1.835,477,2.535,478,4.078,479,3.143,480,2.253,481,3.143,482,3.289,483,2.769,484,2.026,485,2.904,486,3.143,487,3.143,488,2.134,489,2.705,490,3.143]],["title/injectables/UserService.html",[240,1.416,495,1.555]],["body/injectables/UserService.html",[3,0.08,4,0.058,9,0.069,14,1.011,21,0.363,22,0.969,25,1.043,29,1.592,30,1.213,32,0.016,33,1.103,34,1.776,35,0.017,36,1.196,37,0.979,38,1.629,39,0.932,42,1.382,44,1.586,47,1.237,50,1.967,52,0.563,58,2.31,60,1.822,61,1.103,63,1.484,66,1.152,67,0.014,70,0.547,71,0.192,77,0.08,78,0.206,80,1.776,81,0.741,82,1.664,83,3.009,89,3.217,125,1.266,135,1.408,164,0.888,183,0.005,184,0.008,185,0.005,186,0.005,222,1.436,225,0.814,226,2.648,228,2.933,231,2.048,232,2.03,233,3.313,240,1.377,243,0.775,250,1.74,253,1.269,254,1.443,263,0.847,265,2.493,269,4.298,270,2.933,271,2.716,272,2.592,285,1.995,287,3.313,289,5.095,291,2.592,292,2.09,300,1.885,304,1.689,306,1.995,307,1.589,313,1.316,314,0.985,315,1.316,320,1.443,326,1.011,329,1.542,337,1.581,339,2.231,347,2.839,380,1.345,399,1.827,400,2.635,457,1.377,476,1.513,484,2.31,495,1.513,496,1.345,501,4.382,510,4.382,543,5.549,549,2.592,561,2.839,586,2.04,587,2.592,589,1.827,591,1.668,594,1.436,596,2.569,597,3.782,626,2.197,750,2.09,756,1.967,763,2.231,793,1.76,796,2.048,803,3.536,992,2.592,1159,2.592,1186,2.04,1200,2.839,1208,3.925,1242,3.169,1249,4.382,1291,3.925,1360,2.839,1394,3.169,1402,4.382,1404,4.499,1432,4.382,1694,3.169,1698,3.169,1719,2.04,1720,4.502,1721,4.502,1722,4.502,1723,3.671,1724,3.671,1725,3.671,1726,3.671,1727,5.076,1728,5.076,1729,3.671,1730,3.671,1731,3.671,1732,3.671,1733,2.363,1734,3.671,1735,5.076,1736,3.671,1737,2.363,1738,3.671,1739,3.671,1740,2.363,1741,4.502,1742,3.671,1743,2.363,1744,5.076,1745,3.671,1746,2.363,1747,3.671,1748,2.363,1749,2.363,1750,2.363,1751,3.671,1752,3.671,1753,3.671,1754,3.671,1755,3.671,1756,2.363,1757,3.671,1758,2.363,1759,3.671,1760,2.363,1761,3.671,1762,2.363,1763,2.363,1764,2.363,1765,4.502,1766,2.363,1767,2.363,1768,4.502,1769,3.671,1770,2.363,1771,2.363,1772,2.363,1773,5.497,1774,4.502,1775,2.363,1776,2.363,1777,5.076,1778,3.671,1779,3.671,1780,2.363,1781,2.363,1782,3.671,1783,2.363,1784,5.497,1785,3.671,1786,3.671,1787,2.363,1788,2.363,1789,2.363,1790,2.363,1791,2.363,1792,2.363,1793,2.363,1794,2.363,1795,2.363,1796,2.363,1797,2.363,1798,2.363]],["title/interfaces/Usuario.html",[232,0.996,453,1.086]],["body/interfaces/Usuario.html",[3,0.108,4,0.078,9,0.093,21,0.491,30,0.54,32,0.016,35,0.017,36,1.245,37,0.972,39,0.491,42,1.379,43,1.096,44,1.363,47,1.367,52,0.828,55,1.893,63,1.527,66,1.444,67,0.015,77,0.212,92,1.256,113,1.713,140,0.649,180,1.383,183,0.007,184,0.01,185,0.007,186,0.007,225,1.021,228,3.127,232,1.975,233,1.82,251,1.957,253,1.307,254,2.12,263,2.606,265,2.144,268,1.65,270,3.127,292,1.82,299,2.467,300,1.621,304,2.215,309,1.199,311,2.621,312,2.965,314,1.265,320,1.809,322,3.361,326,1.486,337,2.013,400,2.207,425,1.943,443,2.095,453,2.044,455,1.383,469,2.095,474,1.992,476,1.897,480,2.33,483,3.294,488,2.207,514,2.095,545,2.467,557,2.33,565,1.82,568,2.731,571,2.731,596,3.399,597,3.492,603,1.82,626,1.992,650,3.801,682,3.298,686,2.891,698,2.467,700,2.798,748,2.586,749,1.943,750,3.361,751,2.085,752,3.003,753,2.085,754,4.081,755,1.943,756,1.713,757,2.085,758,2.798,759,3.279,760,3.003,761,2.467,762,3.003,763,3.279,764,2.095,765,3.003,766,3.851,767,2.085,768,1.713,769,1.713,770,1.713,771,2.467,772,1.713,773,1.713,774,1.713,775,1.943,776,2.621,777,2.085,778,2.085,779,2.085,780,2.085,781,1.82,782,2.085,783,1.713,784,2.085,785,1.82,786,2.085,787,2.085,788,2.085,789,1.82,790,1.943,791,2.085,792,2.085,793,1.532,794,1.943,795,2.085,796,1.455,797,1.618,798,2.798,799,1.82,800,2.085,801,2.085,802,2.085,803,1.943,804,2.085]],["title/coverage.html",[1799,5.174]],["body/coverage.html",[0,0.507,1,1.031,4,0.104,9,0.124,10,3.68,32,0.012,35,0.017,37,0.592,52,0.654,67,0.009,109,3.68,142,1.031,144,1.077,146,1.077,149,1.031,151,1.077,153,0.987,155,1.077,157,1.077,158,1.077,160,1.031,163,1.077,164,1.031,165,1.031,168,1.077,170,1.077,172,1.031,174,1.031,176,1.077,178,1.077,179,1.077,183,0.009,184,0.012,185,0.009,186,0.009,199,1.939,221,3.68,232,1.124,240,1.599,241,2.284,243,1.397,245,2.043,247,2.284,263,1.528,306,2.622,354,1.675,377,3.68,405,3.964,440,2.78,448,2.78,453,2.164,454,2.043,456,4.353,477,2.427,483,2.043,489,2.59,495,2.992,497,3.68,638,3.68,667,3.296,676,2.59,678,3.009,680,3.68,694,3.68,695,3.68,748,2.043,749,4.214,785,2.427,796,1.939,805,3.68,836,3.009,868,3.68,881,3.68,940,4.341,1079,6.709,1088,3.68,1152,3.68,1172,3.68,1192,3.009,1193,3.68,1218,3.296,1227,2.78,1228,3.68,1308,3.296,1334,3.009,1335,3.68,1343,3.009,1398,4.855,1423,3.296,1425,3.296,1433,3.68,1479,3.68,1488,3.68,1618,3.68,1636,3.68,1664,3.68,1713,3.68,1719,3.68,1800,4.262,1801,4.262,1802,6.673,1803,4.262,1804,4.262,1805,4.262,1806,4.262,1807,4.262,1808,4.262,1809,4.262,1810,4.262,1811,4.262,1812,4.262,1813,6.673,1814,6.673,1815,6.278,1816,5.614,1817,4.262,1818,4.262,1819,4.262,1820,4.262,1821,5.614,1822,4.262,1823,4.262,1824,4.262,1825,6.934,1826,4.262,1827,4.262,1828,4.262,1829,4.262,1830,4.262,1831,5.614,1832,5.614,1833,4.262,1834,5.614,1835,5.614,1836,4.262,1837,5.614,1838,5.614,1839,4.262,1840,4.262,1841,4.262,1842,4.262,1843,4.262,1844,3.68,1845,3.68,1846,4.262,1847,4.262]],["title/dependencies.html",[190,1.967,1848,2.712]],["body/dependencies.html",[16,1.429,27,3.663,32,0.011,35,0.017,67,0.011,71,0.422,72,4.359,73,4.612,74,3.663,76,1.369,86,4.182,183,0.011,184,0.014,185,0.011,186,0.011,203,2.487,205,2.138,217,2.039,394,4.492,410,3.384,513,4.012,587,3.663,1301,4.012,1404,4.012,1849,5.188,1850,7.492,1851,5.188,1852,5.188,1853,5.188,1854,5.188,1855,7.174,1856,5.188,1857,5.188,1858,5.188,1859,5.188,1860,5.188,1861,6.362,1862,5.188,1863,5.188,1864,5.188,1865,5.188,1866,6.881,1867,5.188,1868,5.188,1869,5.188,1870,5.188,1871,5.188,1872,5.188,1873,5.188,1874,5.188,1875,5.188,1876,6.362,1877,6.362,1878,6.881,1879,5.188,1880,5.188,1881,5.188,1882,5.188,1883,5.188,1884,5.188,1885,5.188,1886,5.188,1887,5.188,1888,5.188,1889,5.188,1890,5.188]],["title/index.html",[849,2.665,1891,3.774]],["body/index.html",[1,1.484,2,1.073,32,0.009,35,0.017,39,0.624,67,0.009,142,1.484,144,1.813,146,1.813,149,1.484,151,1.813,153,1.421,155,1.813,157,1.813,158,1.813,160,1.484,163,1.813,165,1.484,168,1.55,170,1.813,172,1.484,174,1.484,176,1.813,178,1.813,179,1.813,183,0.009,184,0.012,185,0.009,186,0.009,188,4.96,189,1.169,190,2.354,191,3.51,192,3.51,193,3.51,194,4.001,195,1.85,196,1.85,197,1.85,209,3.454,369,4.96,370,3.51,371,3.51,372,3.51,373,4.001,385,5.066,386,3.51,387,3.51,388,3.51,389,3.51,390,4.001,455,1.759,496,2.315,530,2.652,660,3.51,661,3.51,662,3.51,860,4.96,861,3.51,862,3.51,863,3.51,864,4.001,931,4.96,932,3.51,933,3.51,934,3.51,935,4.001,1220,4.96,1221,3.51,1222,3.51,1223,3.51,1224,4.001,1371,3.51,1387,4.96,1388,3.51,1389,3.51,1390,3.51,1391,4.001,1610,4.96,1611,3.51,1612,3.51,1613,3.51,1614,4.001,1628,4.96,1629,3.51,1630,3.51,1631,3.51,1632,4.001,1892,4.065,1893,4.065,1894,4.065,1895,4.065,1896,4.065]],["title/modules.html",[1897,5.174]],["body/modules.html",[32,0.011,35,0.014,48,5.497,67,0.011,183,0.011,184,0.014,185,0.017,186,0.011,188,3.716,189,1.514,194,3.434,209,2.278,369,3.716,373,3.434,385,3.716,390,3.434,860,3.716,864,3.434,931,3.716,935,3.434,1167,6.895,1220,3.716,1224,3.434,1387,3.716,1391,3.434,1580,6.721,1610,3.716,1614,3.434,1628,3.716,1632,3.434,1898,7.785,1899,7.785,1900,7.739,1901,7.739]],["title/properties.html",[1848,2.712,1902,4.545]],["body/properties.html",[32,0.015,35,0.017,67,0.013,93,4.67,94,5.214,100,5.214,153,1.399,183,0.013,184,0.015,185,0.013,186,0.013,225,1.339,459,3.94,461,3.94,938,5.214,1903,6.039,1904,6.039,1905,6.039,1906,6.039,1907,6.039]],["title/routes.html",[215,2.48]],["body/routes.html",[32,0.013,35,0.015,67,0.013,183,0.013,184,0.015,185,0.013,186,0.013,530,4.055]],["title/miscellaneous/variables.html",[1414,3.515,1908,3.141]],["body/miscellaneous/variables.html",[21,0.772,30,0.85,32,0.013,35,0.017,37,0.866,52,0.772,66,1.578,67,0.011,90,3.281,108,6.419,166,1.577,183,0.011,184,0.013,185,0.011,186,0.011,250,2.139,253,1.055,313,2.544,314,1.377,315,2.544,317,2.411,405,5.01,458,2.545,514,2.84,893,3.281,908,3.056,1240,5.388,1395,3.889,1397,5.388,1398,3.889,1414,3.889,1422,4.341,1423,5.75,1424,4.341,1425,5.487,1426,4.341,1844,4.341,1845,4.341,1909,5.029,1910,6.241,1911,5.029,1912,5.029,1913,6.241,1914,6.241,1915,6.241,1916,6.241,1917,6.241,1918,6.241,1919,6.241,1920,6.241,1921,6.241,1922,6.241,1923,6.241,1924,6.241,1925,6.241,1926,6.241,1927,6.241,1928,6.241,1929,6.241,1930,5.029,1931,5.029,1932,5.029,1933,5.029,1934,6.241,1935,5.029,1936,5.029,1937,5.029,1938,5.029,1939,5.029,1940,5.029,1941,5.029,1942,5.029,1943,5.029,1944,5.029,1945,5.029]]],"invertedIndex":[["",{"_index":35,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AdminPage.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"modules/ComponentsModule.html":{},"interfaces/Error.html":{},"components/FabLoginComponent.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"modules/FavoritosPageModule.html":{},"modules/FavoritosPageRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"modules/MisRetosPageModule.html":{},"modules/MisRetosPageRoutingModule.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"modules/NewsPagePageModule.html":{},"modules/NewsPagePageRoutingModule.html":{},"interfaces/NewsResponse.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"modules/PerfilPageModule.html":{},"modules/PerfilPageRoutingModule.html":{},"components/RankingPage.html":{},"modules/RankingPageModule.html":{},"modules/RankingPageRoutingModule.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"components/RetosComponent.html":{},"interfaces/Source.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":125,"title":{},"body":{"components/AboutPage.html":{},"injectables/AuthService.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/MenuComponent.html":{},"injectables/UserService.html":{}}}],["0.0.1",{"_index":1904,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":736,"title":{},"body":{"components/FabLoginComponent.html":{}}}],["0.11.4",{"_index":1890,"title":{},"body":{"dependencies.html":{}}}],["00acee",{"_index":129,"title":{},"body":{"components/AboutPage.html":{}}}],["0e76a8",{"_index":131,"title":{},"body":{"components/AboutPage.html":{}}}],["0px",{"_index":724,"title":{},"body":{"components/FabLoginComponent.html":{},"components/MenuComponent.html":{}}}],["1",{"_index":745,"title":{},"body":{"components/FabLoginComponent.html":{},"components/NewsPagePage.html":{}}}],["1/1",{"_index":1825,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1820,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1371,"title":{},"body":{"components/NewsPagePage.html":{},"index.html":{}}}],["10/10",{"_index":1822,"title":{},"body":{"coverage.html":{}}}],["10/11",{"_index":1833,"title":{},"body":{"coverage.html":{}}}],["10/12",{"_index":1810,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1079,"title":{},"body":{"components/InfoRetoComponent.html":{},"coverage.html":{}}}],["10px",{"_index":734,"title":{},"body":{"components/FabLoginComponent.html":{}}}],["11/12",{"_index":1830,"title":{},"body":{"coverage.html":{}}}],["12/14",{"_index":1836,"title":{},"body":{"coverage.html":{}}}],["12/20",{"_index":1804,"title":{},"body":{"coverage.html":{}}}],["13/14",{"_index":1835,"title":{},"body":{"coverage.html":{}}}],["13/18",{"_index":1843,"title":{},"body":{"coverage.html":{}}}],["14.0.0",{"_index":1850,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":730,"title":{},"body":{"components/FabLoginComponent.html":{},"components/MenuComponent.html":{}}}],["15/16",{"_index":1828,"title":{},"body":{"coverage.html":{}}}],["150",{"_index":1019,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["150px",{"_index":122,"title":{},"body":{"components/AboutPage.html":{}}}],["15px",{"_index":721,"title":{},"body":{"components/FabLoginComponent.html":{},"components/MenuComponent.html":{}}}],["163",{"_index":1081,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["16px",{"_index":733,"title":{},"body":{"components/FabLoginComponent.html":{},"components/HomePage.html":{}}}],["17",{"_index":1082,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["19",{"_index":1893,"title":{},"body":{"index.html":{}}}],["1:49988289409:web:134b5a76a7893164751e80",{"_index":1925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1px",{"_index":725,"title":{},"body":{"components/FabLoginComponent.html":{},"components/MenuComponent.html":{}}}],["2",{"_index":1516,"title":{},"body":{"components/PerfilPage.html":{}}}],["2.2.0",{"_index":1888,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1801,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1838,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1894,"title":{},"body":{"index.html":{}}}],["20px",{"_index":923,"title":{},"body":{"components/HomePage.html":{}}}],["213",{"_index":742,"title":{},"body":{"components/FabLoginComponent.html":{}}}],["219",{"_index":743,"title":{},"body":{"components/FabLoginComponent.html":{}}}],["22px",{"_index":927,"title":{},"body":{"components/HomePage.html":{}}}],["24/25",{"_index":1818,"title":{},"body":{"coverage.html":{}}}],["26",{"_index":1896,"title":{},"body":{"index.html":{}}}],["26px",{"_index":925,"title":{},"body":{"components/HomePage.html":{}}}],["28px",{"_index":1087,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["2px",{"_index":726,"title":{},"body":{"components/FabLoginComponent.html":{},"components/MenuComponent.html":{}}}],["3",{"_index":728,"title":{},"body":{"components/FabLoginComponent.html":{},"components/MenuComponent.html":{}}}],["3.0.6",{"_index":1877,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":1875,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":1880,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1826,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1814,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":658,"title":{},"body":{"injectables/AvisosService.html":{}}}],["33",{"_index":1819,"title":{},"body":{"coverage.html":{}}}],["33/34",{"_index":1841,"title":{},"body":{"coverage.html":{}}}],["392c4ef2447040d1aab42bffac29c335",{"_index":1929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3damn",{"_index":96,"title":{},"body":{"components/AboutPage.html":{}}}],["3px",{"_index":729,"title":{},"body":{"components/FabLoginComponent.html":{},"components/MenuComponent.html":{}}}],["4.0.1",{"_index":1866,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":1869,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":1860,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":1861,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":1863,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1802,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1808,"title":{},"body":{"coverage.html":{}}}],["40px",{"_index":1085,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["49988289409",{"_index":1923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4px",{"_index":737,"title":{},"body":{"components/FabLoginComponent.html":{}}}],["5.0.0",{"_index":1881,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1821,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":1812,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":732,"title":{},"body":{"components/FabLoginComponent.html":{},"components/HomePage.html":{}}}],["5px",{"_index":1084,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["6",{"_index":692,"title":{},"body":{"interfaces/Error.html":{},"components/PerfilPage.html":{}}}],["6.0.2",{"_index":1883,"title":{},"body":{"dependencies.html":{}}}],["6.0.3",{"_index":1885,"title":{},"body":{"dependencies.html":{}}}],["6.1.9",{"_index":1872,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":1855,"title":{},"body":{"dependencies.html":{}}}],["6.6.0",{"_index":1886,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":1816,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1803,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1837,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":738,"title":{},"body":{"components/FabLoginComponent.html":{}}}],["7",{"_index":1895,"title":{},"body":{"index.html":{}}}],["7.5.0",{"_index":1852,"title":{},"body":{"dependencies.html":{}}}],["7/8",{"_index":1832,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":1811,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":1842,"title":{},"body":{"coverage.html":{}}}],["72px",{"_index":116,"title":{},"body":{"components/AboutPage.html":{}}}],["75",{"_index":1813,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":1823,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1807,"title":{},"body":{"coverage.html":{}}}],["81",{"_index":1805,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":1809,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1815,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1831,"title":{},"body":{"coverage.html":{}}}],["8c8c8c",{"_index":928,"title":{},"body":{"components/HomePage.html":{}}}],["9",{"_index":1138,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["9/11",{"_index":1806,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1824,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1308,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{},"coverage.html":{}}}],["91",{"_index":1829,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":1834,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":1827,"title":{},"body":{"coverage.html":{}}}],["96",{"_index":1817,"title":{},"body":{"coverage.html":{}}}],["97",{"_index":1840,"title":{},"body":{"coverage.html":{}}}],["9_",{"_index":1137,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["about'},{'name",{"_index":141,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["about.page",{"_index":208,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{}}}],["about.page.html",{"_index":20,"title":{},"body":{"components/AboutPage.html":{}}}],["about.page.scss",{"_index":18,"title":{},"body":{"components/AboutPage.html":{}}}],["aboutpage",{"_index":1,"title":{"components/AboutPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"coverage.html":{},"index.html":{}}}],["aboutpagemodule",{"_index":188,"title":{"modules/AboutPageModule.html":{}},"body":{"modules/AboutPageModule.html":{},"index.html":{},"modules.html":{}}}],["aboutpageroutingmodule",{"_index":194,"title":{"modules/AboutPageRoutingModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["abre",{"_index":65,"title":{},"body":{"components/AboutPage.html":{},"components/FabLoginComponent.html":{},"components/NoticiaComponent.html":{}}}],["abrimos",{"_index":970,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["abrir",{"_index":69,"title":{},"body":{"components/AboutPage.html":{}}}],["absolute",{"_index":916,"title":{},"body":{"components/HomePage.html":{},"components/InfoRetoComponent.html":{}}}],["accceso",{"_index":1503,"title":{},"body":{"components/PerfilPage.html":{}}}],["acceder",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesible",{"_index":757,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["acceso",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{},"components/FabLoginComponent.html":{},"interfaces/Favorito.html":{},"components/LoginComponent.html":{},"interfaces/MenuOpts.html":{},"components/PerfilPage.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["accesos",{"_index":1501,"title":{},"body":{"components/PerfilPage.html":{}}}],["acción",{"_index":1555,"title":{},"body":{"components/PerfilPage.html":{}}}],["aceptamos",{"_index":1510,"title":{},"body":{"components/PerfilPage.html":{}}}],["aceptar",{"_index":1581,"title":{},"body":{"components/PerfilPage.html":{}}}],["actiniosheet",{"_index":1453,"title":{},"body":{"components/NoticiaComponent.html":{}}}],["action",{"_index":1557,"title":{},"body":{"components/PerfilPage.html":{}}}],["actionsheet",{"_index":1460,"title":{},"body":{"components/NoticiaComponent.html":{},"components/PerfilPage.html":{}}}],["actionsheet.present",{"_index":1470,"title":{},"body":{"components/NoticiaComponent.html":{}}}],["actionsheetcontroller",{"_index":1440,"title":{},"body":{"components/NoticiaComponent.html":{},"components/PerfilPage.html":{}}}],["actionsheetctrl",{"_index":1439,"title":{},"body":{"components/NoticiaComponent.html":{},"components/PerfilPage.html":{}}}],["activa",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{}}}],["activatedroutesnapshot",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["actividades",{"_index":943,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["activo",{"_index":311,"title":{},"body":{"components/AdminPage.html":{},"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"components/NewRetoComponent.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["activo/inactivo",{"_index":1202,"title":{},"body":{"components/MisRetosPage.html":{}}}],["activoinactivo",{"_index":264,"title":{},"body":{"components/AdminPage.html":{}}}],["activos",{"_index":884,"title":{},"body":{"components/HomePage.html":{}}}],["actual_component",{"_index":182,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["actualizacion",{"_index":1530,"title":{},"body":{"components/PerfilPage.html":{}}}],["adaptarlo",{"_index":1484,"title":{},"body":{"components/NoticiasComponent.html":{}}}],["adecuadas",{"_index":1738,"title":{},"body":{"injectables/UserService.html":{}}}],["admin",{"_index":222,"title":{},"body":{"components/AdminPage.html":{},"modules/AdminPageModule.html":{},"modules/AppRoutingModule.html":{},"components/HomePage.html":{},"injectables/MenuService.html":{},"injectables/UserService.html":{}}}],["admin'},{'name",{"_index":143,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["admin.page",{"_index":375,"title":{},"body":{"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{}}}],["admin.page.html",{"_index":224,"title":{},"body":{"components/AdminPage.html":{}}}],["admin.page.scss",{"_index":223,"title":{},"body":{"components/AdminPage.html":{}}}],["administrador",{"_index":763,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{}}}],["administradores",{"_index":778,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["adminpage",{"_index":142,"title":{"components/AdminPage.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"coverage.html":{},"index.html":{}}}],["adminpagemodule",{"_index":369,"title":{"modules/AdminPageModule.html":{}},"body":{"modules/AdminPageModule.html":{},"index.html":{},"modules.html":{}}}],["adminpageroutingmodule",{"_index":373,"title":{"modules/AdminPageRoutingModule.html":{}},"body":{"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["advanced",{"_index":1879,"title":{},"body":{"dependencies.html":{}}}],["aizasyatl9wb8bz5htlos4vy_eeievxj5dlrci4",{"_index":1915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ajustarán",{"_index":1551,"title":{},"body":{"components/PerfilPage.html":{}}}],["al",{"_index":300,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"interfaces/Error.html":{},"components/FabLoginComponent.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuOpts.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{}}}],["alejar",{"_index":197,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AdminPageModule.html":{},"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/FavoritosPageModule.html":{},"modules/HomePageModule.html":{},"modules/MisRetosPageModule.html":{},"modules/NewsPagePageModule.html":{},"modules/PerfilPageModule.html":{},"modules/RankingPageModule.html":{},"index.html":{}}}],["alert",{"_index":1572,"title":{},"body":{"components/PerfilPage.html":{}}}],["alert.present",{"_index":1579,"title":{},"body":{"components/PerfilPage.html":{}}}],["alerta",{"_index":1281,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["alertas",{"_index":1272,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["alertcontroller",{"_index":1268,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["alertctrl",{"_index":1267,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["alertdelete",{"_index":1491,"title":{},"body":{"components/PerfilPage.html":{}}}],["alertdelete(documentid",{"_index":1508,"title":{},"body":{"components/PerfilPage.html":{}}}],["alertpasschange",{"_index":1492,"title":{},"body":{"components/PerfilPage.html":{}}}],["align",{"_index":118,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{}}}],["alinearán",{"_index":1562,"title":{},"body":{"components/PerfilPage.html":{}}}],["allowediting",{"_index":1309,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["almacena",{"_index":1291,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{},"injectables/UserService.html":{}}}],["almacenamiento",{"_index":1235,"title":{},"body":{"injectables/MultimediaService.html":{}}}],["almacenamos",{"_index":822,"title":{},"body":{"components/FavoritosPage.html":{}}}],["almacenar",{"_index":286,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/RetoComponent.html":{}}}],["alojar",{"_index":1244,"title":{},"body":{"injectables/MultimediaService.html":{}}}],["alumno",{"_index":97,"title":{},"body":{"components/AboutPage.html":{}}}],["amarillo",{"_index":1677,"title":{},"body":{"components/RetoComponent.html":{}}}],["ampliar",{"_index":195,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AdminPageModule.html":{},"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/FavoritosPageModule.html":{},"modules/HomePageModule.html":{},"modules/MisRetosPageModule.html":{},"modules/NewsPagePageModule.html":{},"modules/PerfilPageModule.html":{},"modules/RankingPageModule.html":{},"index.html":{}}}],["ana",{"_index":104,"title":{},"body":{"components/AboutPage.html":{}}}],["android",{"_index":1445,"title":{},"body":{"components/NoticiaComponent.html":{}}}],["angular",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MenuService.html":{},"dependencies.html":{}}}],["angular.json",{"_index":1945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular/common",{"_index":203,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AdminPageModule.html":{},"modules/ComponentsModule.html":{},"modules/FavoritosPageModule.html":{},"modules/HomePageModule.html":{},"modules/MisRetosPageModule.html":{},"modules/NewsPagePageModule.html":{},"modules/PerfilPageModule.html":{},"modules/RankingPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"injectables/NewsService.html":{},"injectables/UserService.html":{}}}],["angular/core",{"_index":71,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AdminPage.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"modules/ComponentsModule.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"modules/FavoritosPageModule.html":{},"modules/FavoritosPageRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"modules/MisRetosPageModule.html":{},"modules/MisRetosPageRoutingModule.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"modules/NewsPagePageModule.html":{},"modules/NewsPagePageRoutingModule.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"modules/PerfilPageModule.html":{},"modules/PerfilPageRoutingModule.html":{},"components/RankingPage.html":{},"modules/RankingPageModule.html":{},"modules/RankingPageRoutingModule.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":1851,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/compat",{"_index":402,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/compat/auth",{"_index":404,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/HomePage.html":{},"injectables/MenuService.html":{},"components/PerfilPage.html":{},"components/RetoComponent.html":{}}}],["angular/fire/compat/firestore",{"_index":586,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["angular/fire/compat/storage",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"injectables/MultimediaService.html":{}}}],["angular/forms",{"_index":205,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AdminPageModule.html":{},"modules/ComponentsModule.html":{},"modules/FavoritosPageModule.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"modules/MisRetosPageModule.html":{},"components/NewRetoComponent.html":{},"modules/NewsPagePageModule.html":{},"modules/PerfilPageModule.html":{},"modules/RankingPageModule.html":{},"components/RegistroComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":394,"title":{},"body":{"modules/AppModule.html":{},"components/NewRetoComponent.html":{},"components/PerfilPage.html":{},"dependencies.html":{}}}],["angular/router",{"_index":217,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AdminPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"modules/FavoritosPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"components/MenuComponent.html":{},"modules/MisRetosPageRoutingModule.html":{},"modules/NewsPagePageRoutingModule.html":{},"components/PerfilPage.html":{},"modules/PerfilPageRoutingModule.html":{},"modules/RankingPageRoutingModule.html":{},"dependencies.html":{}}}],["angularfireauth",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{},"components/HomePage.html":{},"injectables/MenuService.html":{},"components/PerfilPage.html":{},"components/RetoComponent.html":{}}}],["angularfireauthmodule",{"_index":403,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule",{"_index":401,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebase",{"_index":413,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestorage",{"_index":1231,"title":{},"body":{"injectables/MultimediaService.html":{}}}],["angularfirestoragemodule",{"_index":407,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestore",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["angularfirestorecollection",{"_index":1768,"title":{},"body":{"injectables/UserService.html":{}}}],["animated",{"_index":1566,"title":{},"body":{"components/PerfilPage.html":{}}}],["anónimo",{"_index":700,"title":{},"body":{"components/FabLoginComponent.html":{},"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["api",{"_index":1395,"title":{},"body":{"interfaces/NewsResponse.html":{},"injectables/NewsService.html":{},"miscellaneous/variables.html":{}}}],["apikey",{"_index":1423,"title":{},"body":{"injectables/NewsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apinews",{"_index":1422,"title":{},"body":{"injectables/NewsService.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":1425,"title":{},"body":{"injectables/NewsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["aplicaciones",{"_index":987,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/NoticiaComponent.html":{},"components/RetoComponent.html":{}}}],["aplicación",{"_index":90,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/NoticiaComponent.html":{},"miscellaneous/variables.html":{}}}],["aplicar",{"_index":1529,"title":{},"body":{"components/PerfilPage.html":{}}}],["apoyandose",{"_index":1109,"title":{},"body":{"components/LoginComponent.html":{}}}],["app",{"_index":16,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"dependencies.html":{}}}],["app.component",{"_index":397,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":382,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":381,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":144,"title":{"components/AppComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"coverage.html":{},"index.html":{}}}],["appid",{"_index":1924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":385,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["approutingmodule",{"_index":390,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["aqui",{"_index":814,"title":{},"body":{"components/FavoritosPage.html":{},"injectables/NewsService.html":{},"components/PerfilPage.html":{}}}],["archivo",{"_index":1241,"title":{},"body":{"injectables/MultimediaService.html":{}}}],["archivos",{"_index":1236,"title":{},"body":{"injectables/MultimediaService.html":{}}}],["arfticulo",{"_index":1451,"title":{},"body":{"components/NoticiaComponent.html":{}}}],["arranque",{"_index":392,"title":{},"body":{"modules/AppModule.html":{}}}],["array",{"_index":317,"title":{},"body":{"components/AdminPage.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"components/RankingPage.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"miscellaneous/variables.html":{}}}],["arriba",{"_index":1754,"title":{},"body":{"injectables/UserService.html":{}}}],["article",{"_index":454,"title":{"interfaces/Article.html":{}},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"components/NewsPagePage.html":{},"interfaces/NewsResponse.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"interfaces/Source.html":{},"coverage.html":{}}}],["article.description",{"_index":1478,"title":{},"body":{"components/NoticiaComponent.html":{}}}],["article.source.name",{"_index":1476,"title":{},"body":{"components/NoticiaComponent.html":{}}}],["article.title",{"_index":1477,"title":{},"body":{"components/NoticiaComponent.html":{}}}],["articles",{"_index":482,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"components/NewsPagePage.html":{},"interfaces/NewsResponse.html":{},"injectables/NewsService.html":{},"components/NoticiasComponent.html":{},"interfaces/Source.html":{}}}],["articlesbycategoryandpage",{"_index":489,"title":{"interfaces/ArticlesByCategoryAndPage.html":{}},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/NewsResponse.html":{},"interfaces/Source.html":{},"coverage.html":{}}}],["articulo",{"_index":1458,"title":{},"body":{"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{}}}],["articulos",{"_index":1485,"title":{},"body":{"components/NoticiasComponent.html":{}}}],["artículo",{"_index":1448,"title":{},"body":{"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{}}}],["artículos",{"_index":1365,"title":{},"body":{"components/NewsPagePage.html":{}}}],["asigna",{"_index":991,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{}}}],["asignando",{"_index":1644,"title":{},"body":{"components/RegistroComponent.html":{}}}],["astroretos",{"_index":108,"title":{},"body":{"components/AboutPage.html":{},"miscellaneous/variables.html":{}}}],["async",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/LoginComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{},"components/RetoComponent.html":{}}}],["attributes",{"_index":1599,"title":{},"body":{"components/PerfilPage.html":{}}}],["aun",{"_index":1150,"title":{},"body":{"components/LoginComponent.html":{}}}],["autenticacion",{"_index":256,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/PerfilPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{}}}],["autenticación",{"_index":1500,"title":{},"body":{"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{}}}],["auth",{"_index":582,"title":{},"body":{"injectables/AuthService.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"injectables/MenuService.html":{}}}],["auth.service",{"_index":1186,"title":{},"body":{"injectables/MenuService.html":{},"injectables/UserService.html":{}}}],["authdomain",{"_index":1916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["author",{"_index":459,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/NewsResponse.html":{},"interfaces/Source.html":{},"properties.html":{}}}],["authservice",{"_index":243,"title":{"injectables/AuthService.html":{}},"body":{"components/AdminPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["authsrv",{"_index":1642,"title":{},"body":{"components/RegistroComponent.html":{}}}],["authsvc",{"_index":242,"title":{},"body":{"components/AdminPage.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RetoComponent.html":{}}}],["auto",{"_index":126,"title":{},"body":{"components/AboutPage.html":{}}}],["autogenerado",{"_index":754,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["autor",{"_index":465,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/NewsResponse.html":{},"interfaces/Source.html":{}}}],["avatar",{"_index":597,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"components/PerfilPage.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{}}}],["avataractionsheet",{"_index":1493,"title":{},"body":{"components/PerfilPage.html":{}}}],["aviso",{"_index":1203,"title":{},"body":{"components/MisRetosPage.html":{}}}],["avisos",{"_index":257,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"components/FavoritosPage.html":{},"components/InfoRetoComponent.html":{},"components/MisRetosPage.html":{},"components/PerfilPage.html":{},"components/RetoComponent.html":{}}}],["avisos.service",{"_index":593,"title":{},"body":{"injectables/AuthService.html":{}}}],["avisosservice",{"_index":245,"title":{"injectables/AvisosService.html":{}},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"components/FavoritosPage.html":{},"components/InfoRetoComponent.html":{},"components/MisRetosPage.html":{},"components/PerfilPage.html":{},"components/RetoComponent.html":{},"coverage.html":{}}}],["avisossvc",{"_index":244,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"components/FavoritosPage.html":{},"components/InfoRetoComponent.html":{},"components/MisRetosPage.html":{},"components/PerfilPage.html":{},"components/RetoComponent.html":{}}}],["await",{"_index":632,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/LoginComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{},"components/RetoComponent.html":{}}}],["awesome",{"_index":72,"title":{},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"components/InfoRetoComponent.html":{},"components/NoticiaComponent.html":{},"components/RetoComponent.html":{},"dependencies.html":{}}}],["añadido",{"_index":1054,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["añadir",{"_index":1055,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["backdropdismiss",{"_index":1565,"title":{},"body":{"components/PerfilPage.html":{}}}],["background",{"_index":740,"title":{},"body":{"components/FabLoginComponent.html":{},"components/InfoRetoComponent.html":{}}}],["bar",{"_index":1871,"title":{},"body":{"dependencies.html":{}}}],["barry",{"_index":105,"title":{},"body":{"components/AboutPage.html":{}}}],["behaviorsubject",{"_index":1765,"title":{},"body":{"injectables/UserService.html":{}}}],["black",{"_index":731,"title":{},"body":{"components/FabLoginComponent.html":{},"components/InfoRetoComponent.html":{},"components/MenuComponent.html":{}}}],["blob",{"_index":1317,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["boolean",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Favorito.html":{},"components/InfoRetoComponent.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["booleano",{"_index":895,"title":{},"body":{"components/HomePage.html":{},"injectables/MenuService.html":{}}}],["bootstrap",{"_index":417,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":719,"title":{},"body":{"components/FabLoginComponent.html":{},"components/MenuComponent.html":{}}}],["borrar",{"_index":282,"title":{},"body":{"components/AdminPage.html":{}}}],["botones",{"_index":1548,"title":{},"body":{"components/PerfilPage.html":{}}}],["botón",{"_index":1018,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["box",{"_index":722,"title":{},"body":{"components/FabLoginComponent.html":{},"components/MenuComponent.html":{}}}],["browser",{"_index":86,"title":{},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"components/NewRetoComponent.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{},"dependencies.html":{}}}],["browser.show",{"_index":88,"title":{},"body":{"components/AboutPage.html":{},"components/NoticiaComponent.html":{}}}],["browser/ngx",{"_index":75,"title":{},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"components/NoticiaComponent.html":{}}}],["browsermodule",{"_index":393,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["busca",{"_index":1499,"title":{},"body":{"components/PerfilPage.html":{}}}],["buscado",{"_index":1747,"title":{},"body":{"injectables/UserService.html":{}}}],["buscar",{"_index":1744,"title":{},"body":{"injectables/UserService.html":{}}}],["button",{"_index":718,"title":{},"body":{"components/FabLoginComponent.html":{},"components/MenuComponent.html":{}}}],["buttons",{"_index":1462,"title":{},"body":{"components/NoticiaComponent.html":{},"components/PerfilPage.html":{}}}],["cabeceras",{"_index":870,"title":{},"body":{"components/HeaderComponent.html":{},"components/NewsPagePage.html":{},"injectables/NewsService.html":{}}}],["cada",{"_index":947,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RankingPage.html":{}}}],["cadena",{"_index":1413,"title":{},"body":{"injectables/NewsService.html":{}}}],["camara",{"_index":1502,"title":{},"body":{"components/PerfilPage.html":{}}}],["cambia",{"_index":261,"title":{},"body":{"components/AdminPage.html":{},"components/MisRetosPage.html":{},"components/RetoComponent.html":{}}}],["cambiada",{"_index":1596,"title":{},"body":{"components/PerfilPage.html":{}}}],["cambiar",{"_index":269,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"components/MisRetosPage.html":{},"components/PerfilPage.html":{},"injectables/UserService.html":{}}}],["cambiarestado",{"_index":234,"title":{},"body":{"components/AdminPage.html":{},"components/MisRetosPage.html":{}}}],["cambiarestado(id",{"_index":259,"title":{},"body":{"components/AdminPage.html":{},"components/MisRetosPage.html":{}}}],["cambiarlo",{"_index":1698,"title":{},"body":{"components/RetoComponent.html":{},"injectables/UserService.html":{}}}],["cambiarrol",{"_index":235,"title":{},"body":{"components/AdminPage.html":{}}}],["cambiarrol(id",{"_index":266,"title":{},"body":{"components/AdminPage.html":{}}}],["cambio",{"_index":299,"title":{},"body":{"components/AdminPage.html":{},"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"components/MisRetosPage.html":{},"components/PerfilPage.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["camera",{"_index":1298,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["camera.getphoto",{"_index":1306,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["cameraresulttype",{"_index":1299,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["cameraresulttype.dataurl",{"_index":1311,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["camerasource",{"_index":1300,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["camerasource.camera",{"_index":1605,"title":{},"body":{"components/PerfilPage.html":{}}}],["camerasource.photos",{"_index":1312,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["campo",{"_index":753,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["campos",{"_index":1583,"title":{},"body":{"components/PerfilPage.html":{},"components/RegistroComponent.html":{}}}],["canactivate",{"_index":431,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{}}}],["canactivate(next",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["cancel",{"_index":1468,"title":{},"body":{"components/NoticiaComponent.html":{},"components/PerfilPage.html":{}}}],["cancelar",{"_index":1333,"title":{},"body":{"components/NewRetoComponent.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{}}}],["capacitor/app",{"_index":1859,"title":{},"body":{"dependencies.html":{}}}],["capacitor/camera",{"_index":1301,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{},"dependencies.html":{}}}],["capacitor/core",{"_index":1862,"title":{},"body":{"dependencies.html":{}}}],["capacitor/filesystem",{"_index":1864,"title":{},"body":{"dependencies.html":{}}}],["capacitor/haptics",{"_index":1865,"title":{},"body":{"dependencies.html":{}}}],["capacitor/keyboard",{"_index":1867,"title":{},"body":{"dependencies.html":{}}}],["capacitor/preferences",{"_index":1868,"title":{},"body":{"dependencies.html":{}}}],["capacitor/status",{"_index":1870,"title":{},"body":{"dependencies.html":{}}}],["caracteres",{"_index":693,"title":{},"body":{"interfaces/Error.html":{},"components/InfoRetoComponent.html":{}}}],["card",{"_index":941,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["carga",{"_index":818,"title":{},"body":{"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewsPagePage.html":{},"components/NoticiasComponent.html":{},"components/RankingPage.html":{},"components/RetoComponent.html":{}}}],["cargada",{"_index":1370,"title":{},"body":{"components/NewsPagePage.html":{}}}],["cargadas",{"_index":1354,"title":{},"body":{"components/NewsPagePage.html":{}}}],["cargamos",{"_index":815,"title":{},"body":{"components/FavoritosPage.html":{},"components/NewRetoComponent.html":{},"components/RankingPage.html":{}}}],["cargar",{"_index":834,"title":{},"body":{"components/FavoritosPage.html":{},"components/NewsPagePage.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RetoComponent.html":{}}}],["cargaran",{"_index":791,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["case",{"_index":1034,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["casi",{"_index":1351,"title":{},"body":{"components/NewsPagePage.html":{}}}],["caso",{"_index":552,"title":{},"body":{"injectables/AuthService.html":{}}}],["catch",{"_index":353,"title":{},"body":{"components/AdminPage.html":{},"components/FavoritosPage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/RetoComponent.html":{}}}],["catch((error",{"_index":601,"title":{},"body":{"injectables/AuthService.html":{},"components/InfoRetoComponent.html":{},"components/NoticiaComponent.html":{},"components/RetoComponent.html":{}}}],["categoria",{"_index":485,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/NewsResponse.html":{},"injectables/NewsService.html":{},"interfaces/Source.html":{}}}],["cde",{"_index":1100,"title":{},"body":{"components/LoginComponent.html":{}}}],["center",{"_index":119,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{},"components/PerfilPage.html":{}}}],["centro",{"_index":1563,"title":{},"body":{"components/PerfilPage.html":{}}}],["cerramos",{"_index":1274,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["cerrar",{"_index":1608,"title":{},"body":{"components/PerfilPage.html":{}}}],["checkeamos",{"_index":1681,"title":{},"body":{"components/RetoComponent.html":{}}}],["checklogin",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkretoconseguido",{"_index":954,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["checkretoconseguido(retoid",{"_index":976,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["checkretofavorito",{"_index":955,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["checkretofavorito(retoid",{"_index":979,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["ciencia",{"_index":1418,"title":{},"body":{"injectables/NewsService.html":{}}}],["cierra",{"_index":982,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{}}}],["cierremodal",{"_index":956,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["clase",{"_index":33,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/MenuComponent.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"injectables/MultimediaService.html":{},"components/NewsPagePage.html":{},"injectables/NewsService.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"injectables/UserService.html":{}}}],["class",{"_index":78,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AdminPage.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"modules/ComponentsModule.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"modules/FavoritosPageModule.html":{},"modules/FavoritosPageRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"modules/MisRetosPageModule.html":{},"modules/MisRetosPageRoutingModule.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"modules/NewsPagePageModule.html":{},"modules/NewsPagePageRoutingModule.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"modules/PerfilPageModule.html":{},"modules/PerfilPageRoutingModule.html":{},"components/RankingPage.html":{},"modules/RankingPageModule.html":{},"modules/RankingPageRoutingModule.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"injectables/UserService.html":{}}}],["close",{"_index":1466,"title":{},"body":{"components/NoticiaComponent.html":{},"components/PerfilPage.html":{}}}],["closemodal",{"_index":1092,"title":{},"body":{"components/LoginComponent.html":{},"components/NewRetoComponent.html":{}}}],["cluster_aboutpagemodule",{"_index":191,"title":{},"body":{"modules/AboutPageModule.html":{},"index.html":{}}}],["cluster_aboutpagemodule_declarations",{"_index":192,"title":{},"body":{"modules/AboutPageModule.html":{},"index.html":{}}}],["cluster_aboutpagemodule_imports",{"_index":193,"title":{},"body":{"modules/AboutPageModule.html":{},"index.html":{}}}],["cluster_adminpagemodule",{"_index":370,"title":{},"body":{"modules/AdminPageModule.html":{},"index.html":{}}}],["cluster_adminpagemodule_declarations",{"_index":372,"title":{},"body":{"modules/AdminPageModule.html":{},"index.html":{}}}],["cluster_adminpagemodule_imports",{"_index":371,"title":{},"body":{"modules/AdminPageModule.html":{},"index.html":{}}}],["cluster_appmodule",{"_index":386,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":387,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":388,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_componentsmodule",{"_index":660,"title":{},"body":{"modules/ComponentsModule.html":{},"index.html":{}}}],["cluster_componentsmodule_declarations",{"_index":662,"title":{},"body":{"modules/ComponentsModule.html":{},"index.html":{}}}],["cluster_componentsmodule_exports",{"_index":661,"title":{},"body":{"modules/ComponentsModule.html":{},"index.html":{}}}],["cluster_favoritospagemodule",{"_index":861,"title":{},"body":{"modules/FavoritosPageModule.html":{},"index.html":{}}}],["cluster_favoritospagemodule_declarations",{"_index":862,"title":{},"body":{"modules/FavoritosPageModule.html":{},"index.html":{}}}],["cluster_favoritospagemodule_imports",{"_index":863,"title":{},"body":{"modules/FavoritosPageModule.html":{},"index.html":{}}}],["cluster_homepagemodule",{"_index":932,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_declarations",{"_index":933,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_imports",{"_index":934,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_misretospagemodule",{"_index":1221,"title":{},"body":{"modules/MisRetosPageModule.html":{},"index.html":{}}}],["cluster_misretospagemodule_declarations",{"_index":1223,"title":{},"body":{"modules/MisRetosPageModule.html":{},"index.html":{}}}],["cluster_misretospagemodule_imports",{"_index":1222,"title":{},"body":{"modules/MisRetosPageModule.html":{},"index.html":{}}}],["cluster_newspagepagemodule",{"_index":1388,"title":{},"body":{"modules/NewsPagePageModule.html":{},"index.html":{}}}],["cluster_newspagepagemodule_declarations",{"_index":1390,"title":{},"body":{"modules/NewsPagePageModule.html":{},"index.html":{}}}],["cluster_newspagepagemodule_imports",{"_index":1389,"title":{},"body":{"modules/NewsPagePageModule.html":{},"index.html":{}}}],["cluster_perfilpagemodule",{"_index":1611,"title":{},"body":{"modules/PerfilPageModule.html":{},"index.html":{}}}],["cluster_perfilpagemodule_declarations",{"_index":1613,"title":{},"body":{"modules/PerfilPageModule.html":{},"index.html":{}}}],["cluster_perfilpagemodule_imports",{"_index":1612,"title":{},"body":{"modules/PerfilPageModule.html":{},"index.html":{}}}],["cluster_rankingpagemodule",{"_index":1629,"title":{},"body":{"modules/RankingPageModule.html":{},"index.html":{}}}],["cluster_rankingpagemodule_declarations",{"_index":1630,"title":{},"body":{"modules/RankingPageModule.html":{},"index.html":{}}}],["cluster_rankingpagemodule_imports",{"_index":1631,"title":{},"body":{"modules/RankingPageModule.html":{},"index.html":{}}}],["cobertura",{"_index":1800,"title":{},"body":{"coverage.html":{}}}],["cogida",{"_index":1292,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["coincidan",{"_index":186,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AdminPage.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"modules/ComponentsModule.html":{},"interfaces/Error.html":{},"components/FabLoginComponent.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"modules/FavoritosPageModule.html":{},"modules/FavoritosPageRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"modules/MisRetosPageModule.html":{},"modules/MisRetosPageRoutingModule.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"modules/NewsPagePageModule.html":{},"modules/NewsPagePageRoutingModule.html":{},"interfaces/NewsResponse.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"modules/PerfilPageModule.html":{},"modules/PerfilPageRoutingModule.html":{},"components/RankingPage.html":{},"modules/RankingPageModule.html":{},"modules/RankingPageRoutingModule.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"components/RetosComponent.html":{},"interfaces/Source.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["coinciden",{"_index":1518,"title":{},"body":{"components/PerfilPage.html":{}}}],["coleccion",{"_index":750,"title":{},"body":{"interfaces/Favorito.html":{},"components/InfoRetoComponent.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{}}}],["color",{"_index":127,"title":{},"body":{"components/AboutPage.html":{},"injectables/AvisosService.html":{},"components/FabLoginComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/MenuComponent.html":{},"components/RetoComponent.html":{}}}],["colsulta",{"_index":1769,"title":{},"body":{"injectables/UserService.html":{}}}],["commonmodule",{"_index":202,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AdminPageModule.html":{},"modules/ComponentsModule.html":{},"modules/FavoritosPageModule.html":{},"modules/HomePageModule.html":{},"modules/MisRetosPageModule.html":{},"modules/NewsPagePageModule.html":{},"modules/PerfilPageModule.html":{},"modules/RankingPageModule.html":{}}}],["como",{"_index":92,"title":{},"body":{"components/AboutPage.html":{},"components/FabLoginComponent.html":{},"interfaces/Favorito.html":{},"components/HeaderComponent.html":{},"components/InfoRetoComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"components/RetosComponent.html":{},"interfaces/Usuario.html":{}}}],["comparación",{"_index":183,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AdminPage.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"modules/ComponentsModule.html":{},"interfaces/Error.html":{},"components/FabLoginComponent.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"modules/FavoritosPageModule.html":{},"modules/FavoritosPageRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"modules/MisRetosPageModule.html":{},"modules/MisRetosPageRoutingModule.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"modules/NewsPagePageModule.html":{},"modules/NewsPagePageRoutingModule.html":{},"interfaces/NewsResponse.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"modules/PerfilPageModule.html":{},"modules/PerfilPageRoutingModule.html":{},"components/RankingPage.html":{},"modules/RankingPageModule.html":{},"modules/RankingPageRoutingModule.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"components/RetosComponent.html":{},"interfaces/Source.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["comparar",{"_index":1589,"title":{},"body":{"components/PerfilPage.html":{}}}],["comparte",{"_index":966,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["compartiendo",{"_index":1048,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/NoticiaComponent.html":{},"components/RetoComponent.html":{}}}],["compartir",{"_index":986,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/NoticiaComponent.html":{},"components/RetoComponent.html":{}}}],["compartirreto",{"_index":957,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["completa",{"_index":475,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"components/InfoRetoComponent.html":{},"interfaces/NewsResponse.html":{},"interfaces/Source.html":{}}}],["completo",{"_index":468,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/NewsResponse.html":{},"interfaces/Source.html":{}}}],["component",{"_index":0,"title":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageRoutingModule.html":{},"components/AdminPage.html":{},"modules/AdminPageRoutingModule.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"modules/FavoritosPageRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"modules/MisRetosPageRoutingModule.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"modules/NewsPagePageRoutingModule.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"modules/PerfilPageRoutingModule.html":{},"components/RankingPage.html":{},"modules/RankingPageRoutingModule.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":138,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["componente",{"_index":41,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"injectables/AvisosService.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["componentes",{"_index":2,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"modules/ComponentsModule.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"index.html":{}}}],["componentprops",{"_index":853,"title":{},"body":{"components/FavoritosPage.html":{},"components/MisRetosPage.html":{},"components/RetoComponent.html":{}}}],["components",{"_index":139,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["componentsmodule",{"_index":209,"title":{"modules/ComponentsModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AdminPageModule.html":{},"modules/ComponentsModule.html":{},"modules/FavoritosPageModule.html":{},"modules/HomePageModule.html":{},"modules/MisRetosPageModule.html":{},"modules/NewsPagePageModule.html":{},"modules/PerfilPageModule.html":{},"modules/RankingPageModule.html":{},"index.html":{},"modules.html":{}}}],["comprobamos",{"_index":821,"title":{},"body":{"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/RankingPage.html":{}}}],["comprobar",{"_index":905,"title":{},"body":{"components/HomePage.html":{},"components/MisRetosPage.html":{},"components/NewsPagePage.html":{},"components/RetoComponent.html":{}}}],["comprueba",{"_index":284,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"components/MisRetosPage.html":{},"components/NewsPagePage.html":{},"components/RetoComponent.html":{}}}],["con",{"_index":135,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"injectables/UserService.html":{}}}],["concreta",{"_index":486,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/NewsResponse.html":{},"interfaces/Source.html":{}}}],["concreto",{"_index":272,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"components/InfoRetoComponent.html":{},"injectables/UserService.html":{}}}],["conecta",{"_index":904,"title":{},"body":{"components/HomePage.html":{}}}],["configura",{"_index":1181,"title":{},"body":{"injectables/MenuService.html":{}}}],["confirmación",{"_index":1283,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["conseguido",{"_index":789,"title":{},"body":{"interfaces/Favorito.html":{},"components/InfoRetoComponent.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["conseguidos",{"_index":766,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["conseguir",{"_index":1063,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["console.log('arriba",{"_index":1326,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["console.log('cambio",{"_index":347,"title":{},"body":{"components/AdminPage.html":{},"components/MisRetosPage.html":{},"injectables/UserService.html":{}}}],["console.log('compartido",{"_index":1046,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/NoticiaComponent.html":{},"components/RetoComponent.html":{}}}],["console.log('el",{"_index":1187,"title":{},"body":{"injectables/MenuService.html":{}}}],["console.log('eliminando",{"_index":856,"title":{},"body":{"components/FavoritosPage.html":{}}}],["console.log('email",{"_index":1706,"title":{},"body":{"components/RetoComponent.html":{}}}],["console.log('error",{"_index":1047,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/NewRetoComponent.html":{},"components/NoticiaComponent.html":{},"components/RetoComponent.html":{}}}],["console.log('id",{"_index":1602,"title":{},"body":{"components/PerfilPage.html":{}}}],["console.log('logado",{"_index":1144,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log('no",{"_index":1539,"title":{},"body":{"components/PerfilPage.html":{}}}],["console.log('reto",{"_index":850,"title":{},"body":{"components/FavoritosPage.html":{}}}],["console.log('ruta",{"_index":1601,"title":{},"body":{"components/PerfilPage.html":{}}}],["console.log('tenemos",{"_index":1321,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["console.log('vamos",{"_index":1062,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/NewRetoComponent.html":{}}}],["console.log(menuopts",{"_index":1190,"title":{},"body":{"injectables/MenuService.html":{}}}],["console.log(password1",{"_index":1588,"title":{},"body":{"components/PerfilPage.html":{}}}],["console.log(this.esfavorito",{"_index":1052,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["console.log(this.esretoconseguido",{"_index":1061,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["console.log(this.favoritos.length",{"_index":848,"title":{},"body":{"components/FavoritosPage.html":{}}}],["console.log(this.newretoform.value",{"_index":1331,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["console.log(this.reto.id",{"_index":1707,"title":{},"body":{"components/RetoComponent.html":{}}}],["console.log(this.usuario.nombre",{"_index":846,"title":{},"body":{"components/FavoritosPage.html":{}}}],["console.log(this.usuariologado.rol",{"_index":1189,"title":{},"body":{"injectables/MenuService.html":{}}}],["const",{"_index":85,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AdminPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"modules/FavoritosPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"components/LoginComponent.html":{},"components/MisRetosPage.html":{},"modules/MisRetosPageRoutingModule.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"modules/NewsPagePageRoutingModule.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{},"modules/PerfilPageRoutingModule.html":{},"modules/RankingPageRoutingModule.html":{},"components/RetoComponent.html":{}}}],["constructor",{"_index":25,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"injectables/UserService.html":{}}}],["constructor(angularfireauth",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MenuService.html":{}}}],["constructor(authsrv",{"_index":1640,"title":{},"body":{"components/RegistroComponent.html":{}}}],["constructor(authsvc",{"_index":888,"title":{},"body":{"components/HomePage.html":{},"components/LoginComponent.html":{},"components/PerfilPage.html":{}}}],["constructor(firestorage",{"_index":1230,"title":{},"body":{"injectables/MultimediaService.html":{}}}],["constructor(firestore",{"_index":1733,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(http",{"_index":1401,"title":{},"body":{"injectables/NewsService.html":{}}}],["constructor(iab",{"_index":26,"title":{},"body":{"components/AboutPage.html":{},"components/NoticiaComponent.html":{}}}],["constructor(menusvc",{"_index":812,"title":{},"body":{"components/FavoritosPage.html":{},"components/MisRetosPage.html":{},"components/NewsPagePage.html":{}}}],["constructor(modalctrl",{"_index":706,"title":{},"body":{"components/FabLoginComponent.html":{},"components/NewRetoComponent.html":{}}}],["constructor(private",{"_index":81,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"components/FabLoginComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"injectables/MenuService.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"injectables/UserService.html":{}}}],["constructor(public",{"_index":841,"title":{},"body":{"components/FavoritosPage.html":{},"components/MisRetosPage.html":{},"components/NewsPagePage.html":{}}}],["constructor(retosvc",{"_index":963,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["constructor(router",{"_index":1156,"title":{},"body":{"components/MenuComponent.html":{}}}],["constructor(toastctrl",{"_index":640,"title":{},"body":{"injectables/AvisosService.html":{}}}],["constructor(usersvc",{"_index":239,"title":{},"body":{"components/AdminPage.html":{},"components/RankingPage.html":{}}}],["construimos",{"_index":1279,"title":{},"body":{"components/NewRetoComponent.html":{},"components/RegistroComponent.html":{}}}],["consulta",{"_index":1410,"title":{},"body":{"injectables/NewsService.html":{}}}],["contacto",{"_index":110,"title":{},"body":{"components/AboutPage.html":{}}}],["container",{"_index":914,"title":{},"body":{"components/HomePage.html":{}}}],["contenido",{"_index":467,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/NewsResponse.html":{},"interfaces/Source.html":{}}}],["content",{"_index":460,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/NewsResponse.html":{},"components/PerfilPage.html":{},"interfaces/Source.html":{}}}],["contraseña",{"_index":557,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Error.html":{},"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"components/PerfilPage.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["contraseñas",{"_index":1590,"title":{},"body":{"components/PerfilPage.html":{}}}],["controla",{"_index":817,"title":{},"body":{"components/FavoritosPage.html":{},"components/InfoRetoComponent.html":{},"components/NewsPagePage.html":{}}}],["controlador",{"_index":644,"title":{},"body":{"injectables/AvisosService.html":{},"components/FabLoginComponent.html":{},"components/LoginComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/PerfilPage.html":{},"components/RetoComponent.html":{}}}],["controlar",{"_index":51,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/InfoRetoComponent.html":{},"components/NoticiaComponent.html":{},"components/RankingPage.html":{},"components/RetoComponent.html":{}}}],["contructor",{"_index":1158,"title":{},"body":{"components/MenuComponent.html":{},"components/NewsPagePage.html":{}}}],["cordova",{"_index":73,"title":{},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"components/InfoRetoComponent.html":{},"components/NoticiaComponent.html":{},"components/RetoComponent.html":{},"dependencies.html":{}}}],["correctamente",{"_index":361,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"components/FavoritosPage.html":{},"components/InfoRetoComponent.html":{},"components/MisRetosPage.html":{},"components/PerfilPage.html":{},"components/RetoComponent.html":{}}}],["correcto",{"_index":351,"title":{},"body":{"components/AdminPage.html":{},"injectables/AvisosService.html":{},"components/LoginComponent.html":{},"components/MisRetosPage.html":{},"components/RegistroComponent.html":{}}}],["correspondiente",{"_index":1198,"title":{},"body":{"components/MisRetosPage.html":{},"components/RetoComponent.html":{}}}],["correspondientes",{"_index":1682,"title":{},"body":{"components/RetoComponent.html":{}}}],["corta",{"_index":470,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"components/InfoRetoComponent.html":{},"interfaces/NewsResponse.html":{},"interfaces/Source.html":{}}}],["country",{"_index":1429,"title":{},"body":{"injectables/NewsService.html":{}}}],["coverage",{"_index":1799,"title":{"coverage.html":{}},"body":{}}],["crea",{"_index":580,"title":{},"body":{"injectables/AuthService.html":{},"components/NewRetoComponent.html":{}}}],["creación",{"_index":578,"title":{},"body":{"injectables/AuthService.html":{},"components/MisRetosPage.html":{}}}],["creado",{"_index":1661,"title":{},"body":{"components/RegistroComponent.html":{}}}],["creamos",{"_index":1113,"title":{},"body":{"components/LoginComponent.html":{},"components/NewRetoComponent.html":{}}}],["creando",{"_index":1330,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["crear",{"_index":605,"title":{},"body":{"injectables/AuthService.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NoticiaComponent.html":{}}}],["crearreto",{"_index":1261,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["crearreto(value",{"_index":1275,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["css",{"_index":883,"title":{},"body":{"components/HomePage.html":{},"components/PerfilPage.html":{}}}],["cssclass",{"_index":715,"title":{},"body":{"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/LoginComponent.html":{},"components/MisRetosPage.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{},"components/RetoComponent.html":{}}}],["cualquier",{"_index":652,"title":{},"body":{"injectables/AvisosService.html":{}}}],["cuando",{"_index":701,"title":{},"body":{"components/FabLoginComponent.html":{}}}],["cuenta",{"_index":1609,"title":{},"body":{"components/PerfilPage.html":{}}}],["curso",{"_index":95,"title":{},"body":{"components/AboutPage.html":{}}}],["customevent).detail.value",{"_index":346,"title":{},"body":{"components/AdminPage.html":{}}}],["damn",{"_index":1905,"title":{},"body":{"properties.html":{}}}],["damos",{"_index":1024,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["danger",{"_index":356,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"components/FavoritosPage.html":{},"components/InfoRetoComponent.html":{},"components/MisRetosPage.html":{},"components/PerfilPage.html":{},"components/RetoComponent.html":{}}}],["dar",{"_index":697,"title":{},"body":{"components/FabLoginComponent.html":{}}}],["data",{"_index":1582,"title":{},"body":{"components/PerfilPage.html":{}}}],["data.password1",{"_index":1585,"title":{},"body":{"components/PerfilPage.html":{}}}],["data.password2",{"_index":1587,"title":{},"body":{"components/PerfilPage.html":{}}}],["date.now",{"_index":1248,"title":{},"body":{"injectables/MultimediaService.html":{}}}],["datos",{"_index":14,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"injectables/UserService.html":{}}}],["db",{"_index":1919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db.appspot.com",{"_index":1921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db.firebaseapp.com",{"_index":1917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dded",{"_index":1669,"title":{},"body":{"components/RetoComponent.html":{}}}],["de",{"_index":32,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AdminPage.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"modules/ComponentsModule.html":{},"interfaces/Error.html":{},"components/FabLoginComponent.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"modules/FavoritosPageModule.html":{},"modules/FavoritosPageRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"modules/MisRetosPageModule.html":{},"modules/MisRetosPageRoutingModule.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"modules/NewsPagePageModule.html":{},"modules/NewsPagePageRoutingModule.html":{},"interfaces/NewsResponse.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"modules/PerfilPageModule.html":{},"modules/PerfilPageRoutingModule.html":{},"components/RankingPage.html":{},"modules/RankingPageModule.html":{},"modules/RankingPageRoutingModule.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"components/RetosComponent.html":{},"interfaces/Source.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["debe",{"_index":689,"title":{},"body":{"interfaces/Error.html":{}}}],["deberias",{"_index":1540,"title":{},"body":{"components/PerfilPage.html":{}}}],["declara",{"_index":1697,"title":{},"body":{"components/RetoComponent.html":{}}}],["declaracion",{"_index":1653,"title":{},"body":{"components/RegistroComponent.html":{}}}],["declaraciones",{"_index":199,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AdminPageModule.html":{},"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/FavoritosPageModule.html":{},"modules/HomePageModule.html":{},"modules/MisRetosPageModule.html":{},"modules/NewsPagePageModule.html":{},"modules/PerfilPageModule.html":{},"modules/RankingPageModule.html":{},"coverage.html":{}}}],["declaración",{"_index":1124,"title":{},"body":{"components/LoginComponent.html":{}}}],["declarados",{"_index":1651,"title":{},"body":{"components/RegistroComponent.html":{}}}],["declaramos",{"_index":1026,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["declarations",{"_index":212,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AdminPageModule.html":{},"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/FavoritosPageModule.html":{},"modules/HomePageModule.html":{},"modules/MisRetosPageModule.html":{},"modules/NewsPagePageModule.html":{},"modules/PerfilPageModule.html":{},"modules/RankingPageModule.html":{}}}],["decoration",{"_index":929,"title":{},"body":{"components/HomePage.html":{}}}],["default",{"_index":1039,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["defecto",{"_index":315,"title":{},"body":{"components/AdminPage.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"components/NewsPagePage.html":{},"components/NoticiasComponent.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["definido",{"_index":29,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"injectables/UserService.html":{}}}],["del",{"_index":253,"title":{},"body":{"components/AdminPage.html":{},"components/AppComponent.html":{},"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"interfaces/NewsResponse.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Source.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{},"miscellaneous/variables.html":{}}}],["deletereto",{"_index":236,"title":{},"body":{"components/AdminPage.html":{},"components/MisRetosPage.html":{}}}],["deletereto(id",{"_index":274,"title":{},"body":{"components/AdminPage.html":{},"components/MisRetosPage.html":{}}}],["deleteuser",{"_index":237,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{}}}],["deleteuser(id",{"_index":278,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{}}}],["dentro",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{},"components/NoticiaComponent.html":{}}}],["dependencias",{"_index":1849,"title":{},"body":{"dependencies.html":{}}}],["dependencies",{"_index":190,"title":{"dependencies.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AdminPageModule.html":{},"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/FavoritosPageModule.html":{},"modules/HomePageModule.html":{},"modules/MisRetosPageModule.html":{},"modules/NewsPagePageModule.html":{},"modules/PerfilPageModule.html":{},"modules/RankingPageModule.html":{},"index.html":{}}}],["dependiendo",{"_index":992,"title":{},"body":{"components/InfoRetoComponent.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"injectables/UserService.html":{}}}],["derecha",{"_index":1550,"title":{},"body":{"components/PerfilPage.html":{}}}],["desactiva",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{}}}],["desarrollada",{"_index":91,"title":{},"body":{"components/AboutPage.html":{}}}],["desc",{"_index":1794,"title":{},"body":{"injectables/UserService.html":{}}}],["descripcion",{"_index":469,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/Favorito.html":{},"components/InfoRetoComponent.html":{},"interfaces/MenuOpts.html":{},"components/NewRetoComponent.html":{},"interfaces/NewsResponse.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Source.html":{},"interfaces/Usuario.html":{}}}],["descripción",{"_index":39,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"interfaces/Error.html":{},"components/FabLoginComponent.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"interfaces/NewsResponse.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Source.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["description",{"_index":461,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/NewsResponse.html":{},"interfaces/Source.html":{},"properties.html":{}}}],["desde",{"_index":975,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/PerfilPage.html":{}}}],["deseada",{"_index":1592,"title":{},"body":{"components/PerfilPage.html":{}}}],["desencadena",{"_index":1348,"title":{},"body":{"components/NewsPagePage.html":{}}}],["desencadenador",{"_index":1362,"title":{},"body":{"components/NewsPagePage.html":{}}}],["desencadenar",{"_index":1361,"title":{},"body":{"components/NewsPagePage.html":{}}}],["deshabilita",{"_index":903,"title":{},"body":{"components/HomePage.html":{},"injectables/MenuService.html":{}}}],["desloga",{"_index":1520,"title":{},"body":{"components/PerfilPage.html":{}}}],["deslogado",{"_index":574,"title":{},"body":{"injectables/AuthService.html":{}}}],["deslogarse",{"_index":1525,"title":{},"body":{"components/PerfilPage.html":{}}}],["desmarcar",{"_index":1684,"title":{},"body":{"components/RetoComponent.html":{}}}],["destacado",{"_index":782,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["destacados",{"_index":779,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["detallada",{"_index":1212,"title":{},"body":{"components/MisRetosPage.html":{},"components/RetoComponent.html":{}}}],["detalles",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{},"components/FavoritosPage.html":{}}}],["determinadas",{"_index":1505,"title":{},"body":{"components/PerfilPage.html":{}}}],["devuelve",{"_index":60,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"injectables/UserService.html":{}}}],["dificil",{"_index":774,"title":{},"body":{"interfaces/Favorito.html":{},"components/InfoRetoComponent.html":{},"interfaces/MenuOpts.html":{},"components/NewRetoComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["dificultad",{"_index":993,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["directiva",{"_index":136,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["directives",{"_index":181,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["disponible",{"_index":1901,"title":{},"body":{"modules.html":{}}}],["disponibles",{"_index":897,"title":{},"body":{"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/MenuComponent.html":{},"injectables/MenuService.html":{},"components/RetoComponent.html":{}}}],["dispositivo",{"_index":1456,"title":{},"body":{"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{}}}],["dle",{"_index":788,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["docref.id",{"_index":600,"title":{},"body":{"injectables/AuthService.html":{}}}],["documentación",{"_index":109,"title":{},"body":{"components/AboutPage.html":{},"coverage.html":{}}}],["documentid",{"_index":1512,"title":{},"body":{"components/PerfilPage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["domsanitizer",{"_index":1265,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["donde",{"_index":54,"title":{},"body":{"components/AboutPage.html":{},"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["downloadurl",{"_index":1255,"title":{},"body":{"injectables/MultimediaService.html":{}}}],["duration",{"_index":657,"title":{},"body":{"injectables/AvisosService.html":{}}}],["during",{"_index":1933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamic",{"_index":1853,"title":{},"body":{"dependencies.html":{}}}],["dónde",{"_index":1444,"title":{},"body":{"components/NoticiaComponent.html":{}}}],["e",{"_index":1560,"title":{},"body":{"components/PerfilPage.html":{}}}],["ejecucion",{"_index":1668,"title":{},"body":{"components/RetoComponent.html":{}}}],["ejecuta",{"_index":56,"title":{},"body":{"components/AboutPage.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{}}}],["el",{"_index":47,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"interfaces/NewsResponse.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Source.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{}}}],["elemento",{"_index":133,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["elementos",{"_index":1161,"title":{},"body":{"components/MenuComponent.html":{},"components/NewsPagePage.html":{}}}],["elements",{"_index":1874,"title":{},"body":{"dependencies.html":{}}}],["elimina",{"_index":276,"title":{},"body":{"components/AdminPage.html":{},"components/MisRetosPage.html":{},"components/PerfilPage.html":{}}}],["eliminado",{"_index":360,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"components/FavoritosPage.html":{},"components/InfoRetoComponent.html":{},"components/MisRetosPage.html":{},"components/RetoComponent.html":{}}}],["eliminando",{"_index":637,"title":{},"body":{"injectables/AuthService.html":{}}}],["eliminar",{"_index":277,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"components/FavoritosPage.html":{},"components/InfoRetoComponent.html":{},"components/MisRetosPage.html":{},"components/PerfilPage.html":{},"components/RetoComponent.html":{}}}],["eliminarlo",{"_index":1511,"title":{},"body":{"components/PerfilPage.html":{}}}],["elwe.isilra@gmail.com",{"_index":111,"title":{},"body":{"components/AboutPage.html":{}}}],["email",{"_index":337,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"interfaces/Error.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{}}}],["email).limit(1",{"_index":1776,"title":{},"body":{"injectables/UserService.html":{}}}],["email).subscribe(fav",{"_index":1057,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["email).subscribe(retoconseguido",{"_index":1070,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["email:string",{"_index":1712,"title":{},"body":{"components/RetoComponent.html":{}}}],["en",{"_index":30,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"components/FabLoginComponent.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"components/RetosComponent.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{},"miscellaneous/variables.html":{}}}],["enablefav",{"_index":1173,"title":{},"body":{"injectables/MenuService.html":{}}}],["encarga",{"_index":696,"title":{},"body":{"components/FabLoginComponent.html":{},"components/MisRetosPage.html":{},"components/NoticiasComponent.html":{}}}],["end",{"_index":1561,"title":{},"body":{"components/PerfilPage.html":{}}}],["endpoint",{"_index":1412,"title":{},"body":{"injectables/NewsService.html":{}}}],["enlace",{"_index":106,"title":{},"body":{"components/AboutPage.html":{}}}],["enlaces",{"_index":45,"title":{},"body":{"components/AboutPage.html":{}}}],["enrutador",{"_index":542,"title":{},"body":{"injectables/AuthService.html":{}}}],["enrutamiento",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{}}}],["entrada",{"_index":1160,"title":{},"body":{"components/MenuComponent.html":{}}}],["entradas",{"_index":875,"title":{},"body":{"components/HeaderComponent.html":{},"components/InfoRetoComponent.html":{},"components/MenuComponent.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["entres",{"_index":1521,"title":{},"body":{"components/PerfilPage.html":{}}}],["envia",{"_index":761,"title":{},"body":{"interfaces/Favorito.html":{},"components/InfoRetoComponent.html":{},"interfaces/MenuOpts.html":{},"components/PerfilPage.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["environment",{"_index":405,"title":{},"body":{"modules/AppModule.html":{},"injectables/NewsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.news.apikey",{"_index":1424,"title":{},"body":{"injectables/NewsService.html":{},"miscellaneous/variables.html":{}}}],["environment.news.apiurl",{"_index":1426,"title":{},"body":{"injectables/NewsService.html":{},"miscellaneous/variables.html":{}}}],["environment.prod.ts",{"_index":1941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.ts",{"_index":1940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":406,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":612,"title":{},"body":{"injectables/AuthService.html":{}}}],["erroneo",{"_index":1121,"title":{},"body":{"components/LoginComponent.html":{}}}],["error",{"_index":354,"title":{"interfaces/Error.html":{}},"body":{"components/AdminPage.html":{},"injectables/AvisosService.html":{},"interfaces/Error.html":{},"components/FavoritosPage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"coverage.html":{}}}],["error.email[0].message",{"_index":1147,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["error.message",{"_index":1662,"title":{},"body":{"components/RegistroComponent.html":{}}}],["error.password[1].message",{"_index":1148,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["errormsg",{"_index":1089,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["es",{"_index":686,"title":{},"body":{"interfaces/Error.html":{},"interfaces/Favorito.html":{},"components/LoginComponent.html":{},"interfaces/MenuOpts.html":{},"components/NoticiaComponent.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["ese",{"_index":790,"title":{},"body":{"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["esfavorito",{"_index":951,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["espacio",{"_index":1419,"title":{},"body":{"injectables/NewsService.html":{}}}],["especifica",{"_index":1515,"title":{},"body":{"components/PerfilPage.html":{}}}],["esretoconseguido",{"_index":952,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["est",{"_index":310,"title":{},"body":{"components/AdminPage.html":{},"components/HomePage.html":{},"injectables/MenuService.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RetoComponent.html":{}}}],["esta",{"_index":776,"title":{},"body":{"interfaces/Favorito.html":{},"components/InfoRetoComponent.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["estado",{"_index":262,"title":{},"body":{"components/AdminPage.html":{},"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"interfaces/NewsResponse.html":{},"components/PerfilPage.html":{},"interfaces/Source.html":{}}}],["estar",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{},"components/PerfilPage.html":{},"components/RetoComponent.html":{}}}],["estas",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{}}}],["este",{"_index":1483,"title":{},"body":{"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RegistroComponent.html":{}}}],["estg",{"_index":702,"title":{},"body":{"components/FabLoginComponent.html":{}}}],["esto",{"_index":1709,"title":{},"body":{"components/RetoComponent.html":{}}}],["estás",{"_index":1574,"title":{},"body":{"components/PerfilPage.html":{}}}],["event",{"_index":296,"title":{},"body":{"components/AdminPage.html":{},"components/NewsPagePage.html":{}}}],["event.target",{"_index":1384,"title":{},"body":{"components/NewsPagePage.html":{}}}],["event.target.complete",{"_index":1382,"title":{},"body":{"components/NewsPagePage.html":{}}}],["evento",{"_index":302,"title":{},"body":{"components/AdminPage.html":{},"components/NewsPagePage.html":{}}}],["executequery",{"_index":1399,"title":{},"body":{"injectables/NewsService.html":{}}}],["executequery(endpoint",{"_index":1407,"title":{},"body":{"injectables/NewsService.html":{}}}],["existe",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{},"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["export",{"_index":77,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AdminPage.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"modules/ComponentsModule.html":{},"interfaces/Error.html":{},"components/FabLoginComponent.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"modules/FavoritosPageModule.html":{},"modules/FavoritosPageRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"modules/MisRetosPageModule.html":{},"modules/MisRetosPageRoutingModule.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"modules/NewsPagePageModule.html":{},"modules/NewsPagePageRoutingModule.html":{},"interfaces/NewsResponse.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"modules/PerfilPageModule.html":{},"modules/PerfilPageRoutingModule.html":{},"components/RankingPage.html":{},"modules/RankingPageModule.html":{},"modules/RankingPageRoutingModule.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"components/RetosComponent.html":{},"interfaces/Source.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{}}}],["exporta",{"_index":664,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["exports",{"_index":220,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AdminPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ComponentsModule.html":{},"modules/FavoritosPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MisRetosPageRoutingModule.html":{},"modules/NewsPagePageRoutingModule.html":{},"modules/PerfilPageRoutingModule.html":{},"modules/RankingPageRoutingModule.html":{}}}],["eye",{"_index":1038,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["fab",{"_index":147,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"modules/ComponentsModule.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["fablogincomponent",{"_index":146,"title":{"components/FabLoginComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"modules/ComponentsModule.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"coverage.html":{},"index.html":{}}}],["facil",{"_index":772,"title":{},"body":{"interfaces/Favorito.html":{},"components/InfoRetoComponent.html":{},"interfaces/MenuOpts.html":{},"components/NewRetoComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["facilitar",{"_index":760,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["false",{"_index":908,"title":{},"body":{"components/HomePage.html":{},"injectables/MenuService.html":{},"components/NewRetoComponent.html":{},"components/PerfilPage.html":{},"components/RetoComponent.html":{},"miscellaneous/variables.html":{}}}],["favorito",{"_index":748,"title":{"interfaces/Favorito.html":{}},"body":{"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"components/InfoRetoComponent.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{},"coverage.html":{}}}],["favoritos",{"_index":443,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"modules/FavoritosPageModule.html":{},"components/HomePage.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["favoritos'},{'name",{"_index":150,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["favoritos.page",{"_index":866,"title":{},"body":{"modules/FavoritosPageModule.html":{},"modules/FavoritosPageRoutingModule.html":{}}}],["favoritos.page.html",{"_index":807,"title":{},"body":{"components/FavoritosPage.html":{}}}],["favoritos.page.scss",{"_index":806,"title":{},"body":{"components/FavoritosPage.html":{}}}],["favoritospage",{"_index":149,"title":{"components/FavoritosPage.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"modules/FavoritosPageModule.html":{},"modules/FavoritosPageRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"coverage.html":{},"index.html":{}}}],["favoritospagemodule",{"_index":860,"title":{"modules/FavoritosPageModule.html":{}},"body":{"modules/FavoritosPageModule.html":{},"index.html":{},"modules.html":{}}}],["favoritospageroutingmodule",{"_index":864,"title":{"modules/FavoritosPageRoutingModule.html":{}},"body":{"modules/FavoritosPageModule.html":{},"modules/FavoritosPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["fbuilder",{"_index":1095,"title":{},"body":{"components/LoginComponent.html":{},"components/NewRetoComponent.html":{},"components/RegistroComponent.html":{}}}],["fecha",{"_index":471,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/NewsResponse.html":{},"interfaces/Source.html":{}}}],["fetch(foto.dataurl).then(r",{"_index":1318,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["fichero",{"_index":9,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AdminPage.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"modules/ComponentsModule.html":{},"interfaces/Error.html":{},"components/FabLoginComponent.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"modules/FavoritosPageModule.html":{},"modules/FavoritosPageRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"modules/MisRetosPageModule.html":{},"modules/MisRetosPageRoutingModule.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"modules/NewsPagePageModule.html":{},"modules/NewsPagePageRoutingModule.html":{},"interfaces/NewsResponse.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"modules/PerfilPageModule.html":{},"modules/PerfilPageRoutingModule.html":{},"components/RankingPage.html":{},"modules/RankingPageModule.html":{},"modules/RankingPageRoutingModule.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"components/RetosComponent.html":{},"interfaces/Source.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{},"coverage.html":{}}}],["file",{"_index":1240,"title":{},"body":{"injectables/MultimediaService.html":{},"miscellaneous/variables.html":{}}}],["filepath",{"_index":1247,"title":{},"body":{"injectables/MultimediaService.html":{}}}],["filereplacements",{"_index":1936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filtros",{"_index":1411,"title":{},"body":{"injectables/NewsService.html":{}}}],["fin",{"_index":94,"title":{},"body":{"components/AboutPage.html":{},"properties.html":{}}}],["final",{"_index":1352,"title":{},"body":{"components/NewsPagePage.html":{}}}],["finalizar",{"_index":1010,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["finalize",{"_index":1245,"title":{},"body":{"injectables/MultimediaService.html":{}}}],["firebase",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Favorito.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"injectables/MultimediaService.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{},"miscellaneous/variables.html":{}}}],["firestorage",{"_index":1233,"title":{},"body":{"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["firestore",{"_index":400,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/Favorito.html":{},"components/InfoRetoComponent.html":{},"interfaces/MenuOpts.html":{},"components/NewRetoComponent.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{}}}],["font",{"_index":114,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{}}}],["forma",{"_index":890,"title":{},"body":{"components/HomePage.html":{},"components/PerfilPage.html":{}}}],["formbuilder",{"_index":1096,"title":{},"body":{"components/LoginComponent.html":{},"components/NewRetoComponent.html":{},"components/RegistroComponent.html":{}}}],["formcontrol",{"_index":1127,"title":{},"body":{"components/LoginComponent.html":{},"components/NewRetoComponent.html":{},"components/RegistroComponent.html":{}}}],["formcontrol(true",{"_index":1304,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["formgroup",{"_index":1122,"title":{},"body":{"components/LoginComponent.html":{},"components/NewRetoComponent.html":{},"components/RegistroComponent.html":{}}}],["formsmodule",{"_index":204,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AdminPageModule.html":{},"modules/ComponentsModule.html":{},"modules/FavoritosPageModule.html":{},"modules/HomePageModule.html":{},"modules/MisRetosPageModule.html":{},"modules/NewsPagePageModule.html":{},"modules/PerfilPageModule.html":{},"modules/RankingPageModule.html":{}}}],["formulario",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{},"components/FabLoginComponent.html":{},"components/LoginComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/RegistroComponent.html":{}}}],["foto",{"_index":1305,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["foto.dataurl",{"_index":1316,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["found",{"_index":1944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["full",{"_index":427,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["funcion",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{}}}],["g",{"_index":1927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["galeria",{"_index":1286,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["gauth",{"_index":1093,"title":{},"body":{"components/LoginComponent.html":{}}}],["general",{"_index":1892,"title":{},"body":{"index.html":{}}}],["gestion",{"_index":255,"title":{},"body":{"components/AdminPage.html":{}}}],["gestiona",{"_index":1176,"title":{},"body":{"injectables/MenuService.html":{},"components/RetoComponent.html":{}}}],["gestionar",{"_index":816,"title":{},"body":{"components/FavoritosPage.html":{},"injectables/MenuService.html":{},"components/NewRetoComponent.html":{},"components/RankingPage.html":{}}}],["getcolornivel",{"_index":958,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["getcolornivel(nivel",{"_index":989,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["geticontipo",{"_index":959,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["geticontipo(tipo",{"_index":996,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["getmenuopts",{"_index":1723,"title":{},"body":{"injectables/UserService.html":{}}}],["getmenuopts(roles",{"_index":1736,"title":{},"body":{"injectables/UserService.html":{}}}],["gettopheadlines",{"_index":1400,"title":{},"body":{"injectables/NewsService.html":{}}}],["gettotalpuntosbyuser",{"_index":1724,"title":{},"body":{"injectables/UserService.html":{}}}],["gettotalpuntosbyuser(user",{"_index":1739,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyemail",{"_index":1725,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyemail(email",{"_index":1742,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyid",{"_index":1726,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyid(id",{"_index":1745,"title":{},"body":{"injectables/UserService.html":{}}}],["getuseremail",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["getusers",{"_index":1727,"title":{},"body":{"injectables/UserService.html":{}}}],["getusuariosporpuntos",{"_index":1728,"title":{},"body":{"injectables/UserService.html":{}}}],["github",{"_index":107,"title":{},"body":{"components/AboutPage.html":{}}}],["google",{"_index":1106,"title":{},"body":{"components/LoginComponent.html":{}}}],["gráfica",{"_index":1900,"title":{},"body":{"modules.html":{}}}],["guarda",{"_index":568,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Favorito.html":{},"components/InfoRetoComponent.html":{},"interfaces/MenuOpts.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["guardamos",{"_index":1623,"title":{},"body":{"components/RankingPage.html":{}}}],["guardar",{"_index":307,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/RetoComponent.html":{},"injectables/UserService.html":{}}}],["guardarlos",{"_index":1215,"title":{},"body":{"components/MisRetosPage.html":{}}}],["h1",{"_index":1086,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["ha",{"_index":603,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"components/PerfilPage.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["habilita/deshabilita",{"_index":902,"title":{},"body":{"components/HomePage.html":{},"injectables/MenuService.html":{}}}],["habilitar",{"_index":1704,"title":{},"body":{"components/RetoComponent.html":{}}}],["hace",{"_index":1169,"title":{},"body":{"components/MenuComponent.html":{}}}],["hacer",{"_index":564,"title":{},"body":{"injectables/AuthService.html":{},"components/PerfilPage.html":{},"components/RetoComponent.html":{}}}],["handler",{"_index":1464,"title":{},"body":{"components/NoticiaComponent.html":{},"components/PerfilPage.html":{}}}],["hay",{"_index":185,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AdminPage.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"modules/ComponentsModule.html":{},"interfaces/Error.html":{},"components/FabLoginComponent.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"modules/FavoritosPageModule.html":{},"modules/FavoritosPageRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"modules/MisRetosPageModule.html":{},"modules/MisRetosPageRoutingModule.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"modules/NewsPagePageModule.html":{},"modules/NewsPagePageRoutingModule.html":{},"interfaces/NewsResponse.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"modules/PerfilPageModule.html":{},"modules/PerfilPageRoutingModule.html":{},"components/RankingPage.html":{},"modules/RankingPageModule.html":{},"modules/RankingPageRoutingModule.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"components/RetosComponent.html":{},"interfaces/Source.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["header",{"_index":872,"title":{},"body":{"components/HeaderComponent.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{}}}],["header'},{'name",{"_index":152,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["header.component.html",{"_index":874,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":873,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":674,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["headercomponent",{"_index":151,"title":{"components/HeaderComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"modules/ComponentsModule.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"coverage.html":{},"index.html":{}}}],["headlines?category=science&q=space",{"_index":1431,"title":{},"body":{"injectables/NewsService.html":{}}}],["height",{"_index":121,"title":{},"body":{"components/AboutPage.html":{},"components/FabLoginComponent.html":{},"components/HomePage.html":{}}}],["help",{"_index":1040,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["hoja",{"_index":1554,"title":{},"body":{"components/PerfilPage.html":{}}}],["hola",{"_index":1606,"title":{},"body":{"components/PerfilPage.html":{}}}],["home",{"_index":421,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/PerfilPage.html":{}}}],["home'},{'name",{"_index":154,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["home.page",{"_index":937,"title":{},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["home.page.html",{"_index":886,"title":{},"body":{"components/HomePage.html":{}}}],["home.page.scss",{"_index":885,"title":{},"body":{"components/HomePage.html":{}}}],["homepage",{"_index":153,"title":{"components/HomePage.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"coverage.html":{},"index.html":{},"properties.html":{}}}],["homepagemodule",{"_index":931,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"index.html":{},"modules.html":{}}}],["homepageroutingmodule",{"_index":935,"title":{"modules/HomePageRoutingModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["html",{"_index":134,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["htmlionactionsheetelement",{"_index":1532,"title":{},"body":{"components/PerfilPage.html":{}}}],["http",{"_index":1404,"title":{},"body":{"injectables/NewsService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["httpclient",{"_index":1402,"title":{},"body":{"injectables/NewsService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":398,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/valverdenyo/astroretos",{"_index":1906,"title":{},"body":{"properties.html":{}}}],["https://newsapi.org/v2",{"_index":1397,"title":{},"body":{"interfaces/NewsResponse.html":{},"miscellaneous/variables.html":{}}}],["iab",{"_index":40,"title":{},"body":{"components/AboutPage.html":{},"components/NoticiaComponent.html":{}}}],["icon",{"_index":113,"title":{},"body":{"components/AboutPage.html":{},"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["icono",{"_index":797,"title":{},"body":{"interfaces/Favorito.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["iconos",{"_index":1523,"title":{},"body":{"components/PerfilPage.html":{},"components/RetoComponent.html":{}}}],["icontipo",{"_index":1665,"title":{},"body":{"components/RetoComponent.html":{}}}],["id",{"_index":265,"title":{},"body":{"components/AdminPage.html":{},"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"injectables/AuthService.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"components/InfoRetoComponent.html":{},"interfaces/MenuOpts.html":{},"components/MisRetosPage.html":{},"interfaces/NewsResponse.html":{},"components/PerfilPage.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Source.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{}}}],["id).limit(1",{"_index":1781,"title":{},"body":{"injectables/UserService.html":{}}}],["id_fav",{"_index":751,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["id_reto",{"_index":752,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["id_reto_conseguido",{"_index":787,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["ide",{"_index":281,"title":{},"body":{"components/AdminPage.html":{}}}],["identificador",{"_index":483,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/NewsResponse.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Source.html":{},"interfaces/Usuario.html":{},"coverage.html":{}}}],["idfavorito",{"_index":808,"title":{},"body":{"components/FavoritosPage.html":{}}}],["idfield",{"_index":1773,"title":{},"body":{"injectables/UserService.html":{}}}],["iduser",{"_index":809,"title":{},"body":{"components/FavoritosPage.html":{}}}],["igual",{"_index":786,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["image",{"_index":1258,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["imagen",{"_index":476,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"interfaces/NewsResponse.html":{},"components/PerfilPage.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Source.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{}}}],["imagenes",{"_index":1506,"title":{},"body":{"components/PerfilPage.html":{}}}],["imagensaneada",{"_index":1259,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["img",{"_index":120,"title":{},"body":{"components/AboutPage.html":{}}}],["implementa",{"_index":11,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{}}}],["implementado",{"_index":781,"title":{},"body":{"interfaces/Favorito.html":{},"components/LoginComponent.html":{},"interfaces/MenuOpts.html":{},"components/PerfilPage.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["implements",{"_index":79,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{}}}],["import",{"_index":70,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AdminPage.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"modules/ComponentsModule.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"modules/FavoritosPageModule.html":{},"modules/FavoritosPageRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"modules/MisRetosPageModule.html":{},"modules/MisRetosPageRoutingModule.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"modules/NewsPagePageModule.html":{},"modules/NewsPagePageRoutingModule.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"modules/PerfilPageModule.html":{},"modules/PerfilPageRoutingModule.html":{},"components/RankingPage.html":{},"modules/RankingPageModule.html":{},"modules/RankingPageRoutingModule.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"injectables/UserService.html":{}}}],["import('./pages/about/about.module').then",{"_index":432,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/admin/admin.module').then",{"_index":434,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/favoritos/favoritos.module').then",{"_index":444,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/home/home.module').then(m",{"_index":423,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/mis",{"_index":439,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/news",{"_index":447,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/perfil/perfil.module').then",{"_index":428,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/ranking/ranking.module').then",{"_index":437,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["importa",{"_index":200,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AdminPageModule.html":{},"modules/AppModule.html":{},"modules/FavoritosPageModule.html":{},"modules/HomePageModule.html":{},"modules/MisRetosPageModule.html":{},"modules/NewsPagePageModule.html":{},"modules/PerfilPageModule.html":{},"modules/RankingPageModule.html":{}}}],["imports",{"_index":211,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ComponentsModule.html":{},"modules/FavoritosPageModule.html":{},"modules/FavoritosPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MisRetosPageModule.html":{},"modules/MisRetosPageRoutingModule.html":{},"modules/NewsPagePageModule.html":{},"modules/NewsPagePageRoutingModule.html":{},"modules/PerfilPageModule.html":{},"modules/PerfilPageRoutingModule.html":{},"modules/RankingPageModule.html":{},"modules/RankingPageRoutingModule.html":{}}}],["inappbrowser",{"_index":27,"title":{},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"components/NoticiaComponent.html":{},"dependencies.html":{}}}],["incono",{"_index":998,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["index",{"_index":849,"title":{"index.html":{}},"body":{"components/FavoritosPage.html":{},"components/NoticiaComponent.html":{},"components/RetoComponent.html":{}}}],["indexable",{"_index":491,"title":{},"body":{"interfaces/ArticlesByCategoryAndPage.html":{}}}],["indica",{"_index":775,"title":{},"body":{"interfaces/Favorito.html":{},"components/HomePage.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["indicar",{"_index":651,"title":{},"body":{"injectables/AvisosService.html":{}}}],["indice",{"_index":1450,"title":{},"body":{"components/NoticiaComponent.html":{},"components/RetoComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AdminPage.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"modules/ComponentsModule.html":{},"interfaces/Error.html":{},"components/FabLoginComponent.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"modules/FavoritosPageModule.html":{},"modules/FavoritosPageRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"modules/MisRetosPageModule.html":{},"modules/MisRetosPageRoutingModule.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"modules/NewsPagePageModule.html":{},"modules/NewsPagePageRoutingModule.html":{},"interfaces/NewsResponse.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"modules/PerfilPageModule.html":{},"modules/PerfilPageRoutingModule.html":{},"components/RankingPage.html":{},"modules/RankingPageModule.html":{},"modules/RankingPageRoutingModule.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"components/RetosComponent.html":{},"interfaces/Source.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{}}}],["inforetocomponent",{"_index":155,"title":{"components/InfoRetoComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"modules/ComponentsModule.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"coverage.html":{},"index.html":{}}}],["informacion",{"_index":1694,"title":{},"body":{"components/RetoComponent.html":{},"injectables/UserService.html":{}}}],["información",{"_index":901,"title":{},"body":{"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuService.html":{},"components/NewRetoComponent.html":{}}}],["iniciado",{"_index":1513,"title":{},"body":{"components/PerfilPage.html":{}}}],["iniciar",{"_index":1145,"title":{},"body":{"components/LoginComponent.html":{}}}],["inicio",{"_index":59,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RetoComponent.html":{}}}],["inicios",{"_index":1177,"title":{},"body":{"injectables/MenuService.html":{},"components/NewRetoComponent.html":{}}}],["initauthstatelistener",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectable",{"_index":495,"title":{"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"injectables/MenuService.html":{},"injectables/MultimediaService.html":{},"injectables/NewsService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"injectables/MenuService.html":{},"injectables/MultimediaService.html":{},"injectables/NewsService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["input",{"_index":880,"title":{},"body":{"components/HeaderComponent.html":{},"components/InfoRetoComponent.html":{},"components/MenuComponent.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["inputs",{"_index":1597,"title":{},"body":{"components/PerfilPage.html":{}}}],["instaladas",{"_index":1446,"title":{},"body":{"components/NoticiaComponent.html":{}}}],["instalas",{"_index":1455,"title":{},"body":{"components/NoticiaComponent.html":{}}}],["integrado",{"_index":49,"title":{},"body":{"components/AboutPage.html":{}}}],["intenta",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{}}}],["interface",{"_index":453,"title":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/Error.html":{},"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/NewsResponse.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Source.html":{},"interfaces/Usuario.html":{}},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/Error.html":{},"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/NewsResponse.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Source.html":{},"interfaces/Usuario.html":{},"coverage.html":{}}}],["interfaces",{"_index":455,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/Error.html":{},"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/NewsResponse.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Source.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["interfaces/interfaces",{"_index":329,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"components/MenuComponent.html":{},"injectables/MenuService.html":{},"injectables/UserService.html":{}}}],["interfaces/news",{"_index":1421,"title":{},"body":{"injectables/NewsService.html":{}}}],["intermedio",{"_index":773,"title":{},"body":{"interfaces/Favorito.html":{},"components/InfoRetoComponent.html":{},"interfaces/MenuOpts.html":{},"components/NewRetoComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["inyectables",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"injectables/MenuService.html":{},"injectables/MultimediaService.html":{},"injectables/NewsService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["ion",{"_index":112,"title":{},"body":{"components/AboutPage.html":{},"components/FabLoginComponent.html":{},"components/InfoRetoComponent.html":{},"components/MenuComponent.html":{},"components/PerfilPage.html":{}}}],["ionfabvisible",{"_index":887,"title":{},"body":{"components/HomePage.html":{},"injectables/MenuService.html":{}}}],["ionic",{"_index":654,"title":{},"body":{"injectables/AvisosService.html":{},"components/FabLoginComponent.html":{}}}],["ionic/angular",{"_index":76,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AdminPageModule.html":{},"modules/AppModule.html":{},"injectables/AvisosService.html":{},"modules/ComponentsModule.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"modules/FavoritosPageModule.html":{},"modules/HomePageModule.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MisRetosPage.html":{},"modules/MisRetosPageModule.html":{},"components/NewRetoComponent.html":{},"modules/NewsPagePageModule.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{},"modules/PerfilPageModule.html":{},"modules/RankingPageModule.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"dependencies.html":{}}}],["ionic/pwa",{"_index":1873,"title":{},"body":{"dependencies.html":{}}}],["ionic/storage",{"_index":1876,"title":{},"body":{"dependencies.html":{}}}],["ionicmodule",{"_index":206,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AdminPageModule.html":{},"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/FavoritosPageModule.html":{},"modules/HomePageModule.html":{},"modules/MisRetosPageModule.html":{},"modules/NewsPagePageModule.html":{},"modules/PerfilPageModule.html":{},"modules/RankingPageModule.html":{}}}],["ionicmodule.forroot",{"_index":412,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicons",{"_index":1884,"title":{},"body":{"dependencies.html":{}}}],["ionicons.io",{"_index":999,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["ionicroutestrategy",{"_index":396,"title":{},"body":{"modules/AppModule.html":{}}}],["ios",{"_index":1569,"title":{},"body":{"components/PerfilPage.html":{}}}],["izquierda",{"_index":1549,"title":{},"body":{"components/PerfilPage.html":{}}}],["json",{"_index":1735,"title":{},"body":{"injectables/UserService.html":{}}}],["juan",{"_index":98,"title":{},"body":{"components/AboutPage.html":{}}}],["juanma",{"_index":1907,"title":{},"body":{"properties.html":{}}}],["justify",{"_index":1564,"title":{},"body":{"components/PerfilPage.html":{}}}],["key",{"_index":490,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/NewsResponse.html":{},"interfaces/Source.html":{}}}],["keyboardclose",{"_index":1567,"title":{},"body":{"components/PerfilPage.html":{}}}],["la",{"_index":52,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"injectables/AuthService.html":{},"interfaces/Error.html":{},"components/FabLoginComponent.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"interfaces/NewsResponse.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Source.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lados",{"_index":1552,"title":{},"body":{"components/PerfilPage.html":{}}}],["lanza",{"_index":1519,"title":{},"body":{"components/PerfilPage.html":{}}}],["larga",{"_index":767,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["las",{"_index":457,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"components/FabLoginComponent.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"injectables/MenuService.html":{},"components/NewsPagePage.html":{},"interfaces/NewsResponse.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{},"components/RetoComponent.html":{},"interfaces/Source.html":{},"injectables/UserService.html":{}}}],["le",{"_index":1023,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["leer",{"_index":1077,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["left",{"_index":917,"title":{},"body":{"components/HomePage.html":{},"components/InfoRetoComponent.html":{}}}],["leyenda",{"_index":132,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["libreria",{"_index":1507,"title":{},"body":{"components/PerfilPage.html":{}}}],["line",{"_index":924,"title":{},"body":{"components/HomePage.html":{}}}],["linkedin",{"_index":130,"title":{},"body":{"components/AboutPage.html":{}}}],["list",{"_index":1942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lista",{"_index":291,"title":{},"body":{"components/AdminPage.html":{},"components/FavoritosPage.html":{},"components/PerfilPage.html":{},"injectables/UserService.html":{}}}],["listado",{"_index":984,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["literal",{"_index":492,"title":{},"body":{"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/Error.html":{}}}],["llama",{"_index":1526,"title":{},"body":{"components/PerfilPage.html":{}}}],["llamada",{"_index":1406,"title":{},"body":{"injectables/NewsService.html":{}}}],["llegar",{"_index":1350,"title":{},"body":{"components/NewsPagePage.html":{}}}],["lleva",{"_index":802,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["lo",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"injectables/MenuService.html":{},"components/NewRetoComponent.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{}}}],["loadchildren",{"_index":422,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadmore",{"_index":1339,"title":{},"body":{"components/NewsPagePage.html":{}}}],["loadmore(event",{"_index":1345,"title":{},"body":{"components/NewsPagePage.html":{}}}],["loadnews",{"_index":1340,"title":{},"body":{"components/NewsPagePage.html":{}}}],["log",{"_index":1149,"title":{},"body":{"components/LoginComponent.html":{}}}],["logado",{"_index":285,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RetoComponent.html":{},"injectables/UserService.html":{}}}],["loggedin",{"_index":628,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{},"components/FabLoginComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"injectables/MenuService.html":{}}}],["login'},{'name",{"_index":148,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["login(value",{"_index":1107,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component",{"_index":668,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["login.component.html",{"_index":704,"title":{},"body":{"components/FabLoginComponent.html":{},"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":703,"title":{},"body":{"components/FabLoginComponent.html":{},"components/LoginComponent.html":{}}}],["login.component.ts",{"_index":695,"title":{},"body":{"components/FabLoginComponent.html":{},"coverage.html":{}}}],["login.component.ts:18",{"_index":708,"title":{},"body":{"components/FabLoginComponent.html":{}}}],["login.component.ts:31",{"_index":713,"title":{},"body":{"components/FabLoginComponent.html":{}}}],["login.component.ts:40",{"_index":711,"title":{},"body":{"components/FabLoginComponent.html":{}}}],["login/fab",{"_index":667,"title":{},"body":{"modules/ComponentsModule.html":{},"components/FabLoginComponent.html":{},"coverage.html":{}}}],["login/login.component",{"_index":670,"title":{},"body":{"modules/ComponentsModule.html":{},"components/FabLoginComponent.html":{}}}],["logincomponent",{"_index":157,"title":{"components/LoginComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"modules/ComponentsModule.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"coverage.html":{},"index.html":{}}}],["loginform",{"_index":1090,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginmodal",{"_index":705,"title":{},"body":{"components/FabLoginComponent.html":{}}}],["loginregistermodal",{"_index":716,"title":{},"body":{"components/FabLoginComponent.html":{},"components/LoginComponent.html":{}}}],["logout",{"_index":1494,"title":{},"body":{"components/PerfilPage.html":{}}}],["logueado",{"_index":906,"title":{},"body":{"components/HomePage.html":{},"injectables/MenuService.html":{},"components/PerfilPage.html":{}}}],["los",{"_index":44,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"injectables/NewsService.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{}}}],["luego",{"_index":1022,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/NewRetoComponent.html":{}}}],["lópez",{"_index":101,"title":{},"body":{"components/AboutPage.html":{}}}],["m",{"_index":429,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.aboutpagemodule",{"_index":433,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.adminpagemodule",{"_index":435,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.favoritospagemodule",{"_index":445,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.homepagemodule",{"_index":424,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.misretospagemodule",{"_index":442,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.newspagepagemodule",{"_index":450,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.perfilpagemodule",{"_index":430,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.rankingpagemodule",{"_index":438,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["mail",{"_index":324,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"interfaces/Error.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"injectables/MenuService.html":{},"components/PerfilPage.html":{},"components/RetoComponent.html":{}}}],["maneja",{"_index":965,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/MisRetosPage.html":{},"interfaces/NewsResponse.html":{}}}],["manejar",{"_index":320,"title":{},"body":{"components/AdminPage.html":{},"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/Favorito.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"interfaces/MenuOpts.html":{},"components/NewsPagePage.html":{},"interfaces/NewsResponse.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Source.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{}}}],["manejarlo",{"_index":1449,"title":{},"body":{"components/NoticiaComponent.html":{}}}],["manejo",{"_index":251,"title":{},"body":{"components/AdminPage.html":{},"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"interfaces/NewsResponse.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Source.html":{},"interfaces/Usuario.html":{}}}],["manuel",{"_index":99,"title":{},"body":{"components/AboutPage.html":{}}}],["map",{"_index":589,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NewsService.html":{},"injectables/UserService.html":{}}}],["map((menuopts",{"_index":1796,"title":{},"body":{"injectables/UserService.html":{}}}],["map(retos",{"_index":1790,"title":{},"body":{"injectables/UserService.html":{}}}],["map(user",{"_index":625,"title":{},"body":{"injectables/AuthService.html":{}}}],["map(usuarios",{"_index":1778,"title":{},"body":{"injectables/UserService.html":{}}}],["marca",{"_index":758,"title":{},"body":{"interfaces/Favorito.html":{},"components/InfoRetoComponent.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["marcamos",{"_index":1647,"title":{},"body":{"components/RegistroComponent.html":{}}}],["marcar",{"_index":1009,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/NewRetoComponent.html":{},"components/RetoComponent.html":{}}}],["margin",{"_index":124,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{}}}],["mas",{"_index":1349,"title":{},"body":{"components/NewsPagePage.html":{}}}],["mayor",{"_index":1752,"title":{},"body":{"injectables/UserService.html":{}}}],["measurementid",{"_index":1926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["men",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{},"components/HomePage.html":{},"components/MenuComponent.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"components/NewsPagePage.html":{}}}],["menos",{"_index":691,"title":{},"body":{"interfaces/Error.html":{}}}],["mensaje",{"_index":648,"title":{},"body":{"injectables/AvisosService.html":{},"components/InfoRetoComponent.html":{},"components/PerfilPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{}}}],["mensajes",{"_index":681,"title":{},"body":{"interfaces/Error.html":{},"components/RegistroComponent.html":{}}}],["menu",{"_index":254,"title":{},"body":{"components/AdminPage.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"components/NewsPagePage.html":{},"components/RankingPage.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{}}}],["menu'},{'name",{"_index":159,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["menu.component.html",{"_index":1154,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu.component.scss",{"_index":1153,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu/menu.component",{"_index":673,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["menucomponent",{"_index":158,"title":{"components/MenuComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"modules/ComponentsModule.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"coverage.html":{},"index.html":{}}}],["menuopts",{"_index":796,"title":{"interfaces/MenuOpts.html":{}},"body":{"interfaces/Favorito.html":{},"components/HomePage.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{},"coverage.html":{}}}],["menuopts.filter((menuopt",{"_index":1797,"title":{},"body":{"injectables/UserService.html":{}}}],["menuservice",{"_index":241,"title":{"injectables/MenuService.html":{}},"body":{"components/AdminPage.html":{},"components/FavoritosPage.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"components/NewsPagePage.html":{},"components/RankingPage.html":{},"coverage.html":{}}}],["menusvc",{"_index":227,"title":{},"body":{"components/AdminPage.html":{},"components/FavoritosPage.html":{},"components/MisRetosPage.html":{},"components/NewsPagePage.html":{},"components/RankingPage.html":{}}}],["message",{"_index":656,"title":{},"body":{"injectables/AvisosService.html":{},"interfaces/Error.html":{},"components/PerfilPage.html":{}}}],["messagingsenderid",{"_index":1922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meta",{"_index":13,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["metodo",{"_index":58,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"injectables/AuthService.html":{},"components/FavoritosPage.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/PerfilPage.html":{},"components/RetoComponent.html":{},"injectables/UserService.html":{}}}],["metodos",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{},"components/RankingPage.html":{}}}],["minlength",{"_index":688,"title":{},"body":{"interfaces/Error.html":{},"components/PerfilPage.html":{}}}],["mis",{"_index":161,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"modules/MisRetosPageModule.html":{},"modules/MisRetosPageRoutingModule.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["miscellaneous",{"_index":1908,"title":{"miscellaneous/variables.html":{}},"body":{}}],["miscelánea",{"_index":1909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mismo",{"_index":759,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"components/PerfilPage.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["misretospage",{"_index":160,"title":{"components/MisRetosPage.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"modules/MisRetosPageModule.html":{},"modules/MisRetosPageRoutingModule.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"coverage.html":{},"index.html":{}}}],["misretospagemodule",{"_index":1220,"title":{"modules/MisRetosPageModule.html":{}},"body":{"modules/MisRetosPageModule.html":{},"index.html":{},"modules.html":{}}}],["misretospageroutingmodule",{"_index":1224,"title":{"modules/MisRetosPageRoutingModule.html":{}},"body":{"modules/MisRetosPageModule.html":{},"modules/MisRetosPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["modal",{"_index":709,"title":{},"body":{"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{}}}],["modal.present",{"_index":717,"title":{},"body":{"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/LoginComponent.html":{},"components/MisRetosPage.html":{},"components/RetoComponent.html":{}}}],["modal::part(backdrop",{"_index":739,"title":{},"body":{"components/FabLoginComponent.html":{}}}],["modalcontroller",{"_index":707,"title":{},"body":{"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{}}}],["modalctrl",{"_index":710,"title":{},"body":{"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{}}}],["modales",{"_index":819,"title":{},"body":{"components/FavoritosPage.html":{},"components/RetoComponent.html":{}}}],["modalinfo",{"_index":854,"title":{},"body":{"components/FavoritosPage.html":{},"components/MisRetosPage.html":{},"components/RetoComponent.html":{}}}],["mode",{"_index":1568,"title":{},"body":{"components/PerfilPage.html":{}}}],["module",{"_index":187,"title":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ComponentsModule.html":{},"modules/FavoritosPageModule.html":{},"modules/FavoritosPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MisRetosPageModule.html":{},"modules/MisRetosPageRoutingModule.html":{},"modules/NewsPagePageModule.html":{},"modules/NewsPagePageRoutingModule.html":{},"modules/PerfilPageModule.html":{},"modules/PerfilPageRoutingModule.html":{},"modules/RankingPageModule.html":{},"modules/RankingPageRoutingModule.html":{}},"body":{}}],["modules",{"_index":1897,"title":{"modules.html":{}},"body":{}}],["mostar",{"_index":1689,"title":{},"body":{"components/RetoComponent.html":{}}}],["mostrar",{"_index":43,"title":{},"body":{"components/AboutPage.html":{},"injectables/AvisosService.html":{},"interfaces/Error.html":{},"interfaces/Favorito.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuOpts.html":{},"components/MisRetosPage.html":{},"components/NewsPagePage.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["mostrar/ocultar",{"_index":896,"title":{},"body":{"components/HomePage.html":{},"injectables/MenuService.html":{}}}],["mostrarlo/cerrarlo",{"_index":1101,"title":{},"body":{"components/LoginComponent.html":{}}}],["mostrarlos",{"_index":294,"title":{},"body":{"components/AdminPage.html":{},"components/MisRetosPage.html":{}}}],["movil",{"_index":972,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["muestra",{"_index":645,"title":{},"body":{"injectables/AvisosService.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MisRetosPage.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{},"components/RegistroComponent.html":{}}}],["multimedia",{"_index":1545,"title":{},"body":{"components/PerfilPage.html":{}}}],["multimediaservice",{"_index":1227,"title":{"injectables/MultimediaService.html":{}},"body":{"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/PerfilPage.html":{},"coverage.html":{}}}],["multimediasvc",{"_index":1266,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["más",{"_index":756,"title":{},"body":{"interfaces/Favorito.html":{},"components/InfoRetoComponent.html":{},"interfaces/MenuOpts.html":{},"components/NewsPagePage.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{}}}],["método",{"_index":268,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"components/FabLoginComponent.html":{},"interfaces/Favorito.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["métodos",{"_index":22,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"injectables/UserService.html":{}}}],["módulo",{"_index":938,"title":{},"body":{"modules/HomePageModule.html":{},"properties.html":{}}}],["módulos",{"_index":189,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ComponentsModule.html":{},"modules/FavoritosPageModule.html":{},"modules/FavoritosPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MisRetosPageModule.html":{},"modules/MisRetosPageRoutingModule.html":{},"modules/NewsPagePageModule.html":{},"modules/NewsPagePageRoutingModule.html":{},"modules/PerfilPageModule.html":{},"modules/PerfilPageRoutingModule.html":{},"modules/RankingPageModule.html":{},"modules/RankingPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["nada",{"_index":1170,"title":{},"body":{"components/MenuComponent.html":{}}}],["name",{"_index":140,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"components/FabLoginComponent.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"interfaces/NewsResponse.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"components/RetosComponent.html":{},"interfaces/Source.html":{},"interfaces/Usuario.html":{}}}],["navcontroller",{"_index":1098,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilPage.html":{}}}],["navctrl",{"_index":1097,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilPage.html":{}}}],["navega",{"_index":1164,"title":{},"body":{"components/MenuComponent.html":{}}}],["navegación",{"_index":1102,"title":{},"body":{"components/LoginComponent.html":{}}}],["navegador",{"_index":48,"title":{},"body":{"components/AboutPage.html":{},"components/InfoRetoComponent.html":{},"components/NoticiaComponent.html":{},"modules.html":{}}}],["navegar",{"_index":1167,"title":{},"body":{"components/MenuComponent.html":{},"modules.html":{}}}],["navigatetopage",{"_index":1155,"title":{},"body":{"components/MenuComponent.html":{}}}],["navigatetopage(url",{"_index":1162,"title":{},"body":{"components/MenuComponent.html":{}}}],["navigator.share",{"_index":1044,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/NoticiaComponent.html":{},"components/RetoComponent.html":{}}}],["ndice",{"_index":21,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"interfaces/Article.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"interfaces/Error.html":{},"components/FabLoginComponent.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"interfaces/NewsResponse.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"components/RetosComponent.html":{},"interfaces/Source.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{},"miscellaneous/variables.html":{}}}],["necesarios",{"_index":1115,"title":{},"body":{"components/LoginComponent.html":{}}}],["necesita",{"_index":1415,"title":{},"body":{"injectables/NewsService.html":{}}}],["necesite",{"_index":1126,"title":{},"body":{"components/LoginComponent.html":{}}}],["new",{"_index":164,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"modules/ComponentsModule.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["newavatar",{"_index":1720,"title":{},"body":{"injectables/UserService.html":{}}}],["newreto",{"_index":1196,"title":{},"body":{"components/MisRetosPage.html":{}}}],["newreto(id",{"_index":1206,"title":{},"body":{"components/MisRetosPage.html":{}}}],["newretocomponent",{"_index":163,"title":{"components/NewRetoComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"modules/ComponentsModule.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"coverage.html":{},"index.html":{}}}],["newretoform",{"_index":1260,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["newrol",{"_index":1721,"title":{},"body":{"injectables/UserService.html":{}}}],["news",{"_index":166,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"modules/NewsPagePageModule.html":{},"modules/NewsPagePageRoutingModule.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"miscellaneous/variables.html":{}}}],["newsapi",{"_index":1396,"title":{},"body":{"interfaces/NewsResponse.html":{}}}],["newspagepage",{"_index":165,"title":{"components/NewsPagePage.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"modules/NewsPagePageModule.html":{},"modules/NewsPagePageRoutingModule.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"coverage.html":{},"index.html":{}}}],["newspagepagemodule",{"_index":1387,"title":{"modules/NewsPagePageModule.html":{}},"body":{"modules/NewsPagePageModule.html":{},"index.html":{},"modules.html":{}}}],["newspagepageroutingmodule",{"_index":1391,"title":{"modules/NewsPagePageRoutingModule.html":{}},"body":{"modules/NewsPagePageModule.html":{},"modules/NewsPagePageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["newsresponse",{"_index":477,"title":{"interfaces/NewsResponse.html":{}},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/NewsResponse.html":{},"injectables/NewsService.html":{},"interfaces/Source.html":{},"coverage.html":{}}}],["newsservice",{"_index":1343,"title":{"injectables/NewsService.html":{}},"body":{"components/NewsPagePage.html":{},"injectables/NewsService.html":{},"coverage.html":{}}}],["newssvc",{"_index":1342,"title":{},"body":{"components/NewsPagePage.html":{}}}],["next",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{}}}],["ng",{"_index":1937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngmodule",{"_index":201,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ComponentsModule.html":{},"modules/FavoritosPageModule.html":{},"modules/FavoritosPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MisRetosPageModule.html":{},"modules/MisRetosPageRoutingModule.html":{},"modules/NewsPagePageModule.html":{},"modules/NewsPagePageRoutingModule.html":{},"modules/PerfilPageModule.html":{},"modules/PerfilPageRoutingModule.html":{},"modules/RankingPageModule.html":{},"modules/RankingPageRoutingModule.html":{}}}],["ngoninit",{"_index":23,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{}}}],["ni",{"_index":762,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["nivel",{"_index":771,"title":{},"body":{"interfaces/Favorito.html":{},"components/InfoRetoComponent.html":{},"interfaces/MenuOpts.html":{},"components/NewRetoComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["nombre",{"_index":36,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"components/FabLoginComponent.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"interfaces/NewsResponse.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Source.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{}}}],["none",{"_index":930,"title":{},"body":{"components/HomePage.html":{}}}],["nos",{"_index":801,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["noticia",{"_index":466,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/NewsResponse.html":{},"components/NoticiaComponent.html":{},"interfaces/Source.html":{}}}],["noticia'},{'name",{"_index":169,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["noticia.component.html",{"_index":1435,"title":{},"body":{"components/NoticiaComponent.html":{}}}],["noticia.component.scss",{"_index":1434,"title":{},"body":{"components/NoticiaComponent.html":{}}}],["noticia/noticia.component",{"_index":671,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["noticiacomponent",{"_index":168,"title":{"components/NoticiaComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"modules/ComponentsModule.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"coverage.html":{},"index.html":{}}}],["noticias",{"_index":458,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"components/NewsPagePage.html":{},"interfaces/NewsResponse.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"interfaces/Source.html":{},"miscellaneous/variables.html":{}}}],["noticias'},{'name",{"_index":171,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["noticias.component.html",{"_index":1481,"title":{},"body":{"components/NoticiasComponent.html":{}}}],["noticias.component.scss",{"_index":1480,"title":{},"body":{"components/NoticiasComponent.html":{}}}],["noticias/noticias.component",{"_index":672,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["noticiascomponent",{"_index":170,"title":{"components/NoticiasComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"modules/ComponentsModule.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"coverage.html":{},"index.html":{}}}],["nueva",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{},"components/PerfilPage.html":{},"injectables/UserService.html":{}}}],["nuevacontraseña",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{}}}],["nuevo",{"_index":1208,"title":{},"body":{"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"injectables/UserService.html":{}}}],["null",{"_index":620,"title":{},"body":{"injectables/AuthService.html":{},"components/HomePage.html":{},"injectables/MenuService.html":{}}}],["number",{"_index":304,"title":{},"body":{"components/AdminPage.html":{},"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/Favorito.html":{},"components/InfoRetoComponent.html":{},"interfaces/MenuOpts.html":{},"components/NewsPagePage.html":{},"interfaces/NewsResponse.html":{},"components/NoticiaComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Source.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{}}}],["numero",{"_index":1372,"title":{},"body":{"components/NewsPagePage.html":{},"components/RetoComponent.html":{}}}],["número",{"_index":765,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["o",{"_index":312,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"interfaces/Favorito.html":{},"components/InfoRetoComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/PerfilPage.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["object",{"_index":1913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objeto",{"_index":326,"title":{},"body":{"components/AdminPage.html":{},"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"injectables/AuthService.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuOpts.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"interfaces/NewsResponse.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Source.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{}}}],["objetos",{"_index":318,"title":{},"body":{"components/AdminPage.html":{},"components/FavoritosPage.html":{},"components/MisRetosPage.html":{},"components/RankingPage.html":{}}}],["obligatorios",{"_index":1648,"title":{},"body":{"components/RegistroComponent.html":{}}}],["observable",{"_index":543,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NewsService.html":{},"injectables/UserService.html":{}}}],["obtener",{"_index":1200,"title":{},"body":{"components/MisRetosPage.html":{},"components/PerfilPage.html":{},"injectables/UserService.html":{}}}],["obtenida",{"_index":1534,"title":{},"body":{"components/PerfilPage.html":{}}}],["obtenidos",{"_index":1700,"title":{},"body":{"components/RetoComponent.html":{}}}],["obtiene",{"_index":289,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["ocular",{"_index":768,"title":{},"body":{"interfaces/Favorito.html":{},"components/InfoRetoComponent.html":{},"interfaces/MenuOpts.html":{},"components/NewRetoComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["oculto",{"_index":953,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{}}}],["onopenmenu",{"_index":1436,"title":{},"body":{"components/NoticiaComponent.html":{}}}],["onscroll",{"_index":1341,"title":{},"body":{"components/NewsPagePage.html":{}}}],["onscroll(event",{"_index":1358,"title":{},"body":{"components/NewsPagePage.html":{}}}],["onsharearticle",{"_index":1437,"title":{},"body":{"components/NoticiaComponent.html":{}}}],["opacity",{"_index":744,"title":{},"body":{"components/FabLoginComponent.html":{}}}],["opcion",{"_index":798,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"components/NoticiaComponent.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["opcional",{"_index":38,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"interfaces/Article.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"interfaces/Source.html":{},"injectables/UserService.html":{}}}],["opciones",{"_index":793,"title":{},"body":{"interfaces/Favorito.html":{},"components/HomePage.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/NoticiaComponent.html":{},"components/RankingPage.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{}}}],["openarticle",{"_index":1438,"title":{},"body":{"components/NoticiaComponent.html":{}}}],["openurl",{"_index":24,"title":{},"body":{"components/AboutPage.html":{}}}],["openurl(url",{"_index":62,"title":{},"body":{"components/AboutPage.html":{}}}],["operaciones",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{}}}],["opuestos",{"_index":1553,"title":{},"body":{"components/PerfilPage.html":{}}}],["ordenada",{"_index":1751,"title":{},"body":{"injectables/UserService.html":{}}}],["origen",{"_index":473,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/NewsResponse.html":{},"interfaces/Source.html":{}}}],["otra",{"_index":891,"title":{},"body":{"components/HomePage.html":{},"components/NoticiaComponent.html":{}}}],["otras",{"_index":795,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["otro",{"_index":653,"title":{},"body":{"injectables/AvisosService.html":{}}}],["outline",{"_index":1036,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{},"components/RetoComponent.html":{}}}],["overview",{"_index":1891,"title":{"index.html":{}},"body":{}}],["p",{"_index":926,"title":{},"body":{"components/HomePage.html":{}}}],["package",{"_index":1848,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":1083,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["page",{"_index":446,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"components/NewsPagePage.html":{},"modules/NewsPagePageModule.html":{},"modules/NewsPagePageRoutingModule.html":{},"interfaces/NewsResponse.html":{},"interfaces/Source.html":{}}}],["page'},{'name",{"_index":167,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["page.module').then",{"_index":449,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["page.module.ts",{"_index":1392,"title":{},"body":{"modules/NewsPagePageModule.html":{}}}],["page.page",{"_index":1393,"title":{},"body":{"modules/NewsPagePageModule.html":{},"modules/NewsPagePageRoutingModule.html":{}}}],["page.page.html",{"_index":1337,"title":{},"body":{"components/NewsPagePage.html":{}}}],["page.page.scss",{"_index":1336,"title":{},"body":{"components/NewsPagePage.html":{}}}],["page.page.ts",{"_index":1335,"title":{},"body":{"components/NewsPagePage.html":{},"coverage.html":{}}}],["page.page.ts:20",{"_index":1363,"title":{},"body":{"components/NewsPagePage.html":{}}}],["page.page.ts:25",{"_index":1367,"title":{},"body":{"components/NewsPagePage.html":{}}}],["page.page.ts:30",{"_index":1374,"title":{},"body":{"components/NewsPagePage.html":{}}}],["page.page.ts:34",{"_index":1369,"title":{},"body":{"components/NewsPagePage.html":{}}}],["page.page.ts:38",{"_index":1344,"title":{},"body":{"components/NewsPagePage.html":{}}}],["page.page.ts:47",{"_index":1368,"title":{},"body":{"components/NewsPagePage.html":{}}}],["page.page.ts:48",{"_index":1366,"title":{},"body":{"components/NewsPagePage.html":{}}}],["page.page.ts:49",{"_index":1373,"title":{},"body":{"components/NewsPagePage.html":{}}}],["page.page.ts:61",{"_index":1356,"title":{},"body":{"components/NewsPagePage.html":{}}}],["page.page.ts:77",{"_index":1355,"title":{},"body":{"components/NewsPagePage.html":{}}}],["page.page.ts:86",{"_index":1346,"title":{},"body":{"components/NewsPagePage.html":{}}}],["page.page.ts:96",{"_index":1359,"title":{},"body":{"components/NewsPagePage.html":{}}}],["page/news",{"_index":448,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NewsPagePage.html":{},"modules/NewsPagePageModule.html":{},"modules/NewsPagePageRoutingModule.html":{},"coverage.html":{}}}],["pagesize",{"_index":1338,"title":{},"body":{"components/NewsPagePage.html":{}}}],["pagina",{"_index":321,"title":{},"body":{"components/AdminPage.html":{},"components/NewsPagePage.html":{}}}],["paginas",{"_index":487,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/NewsResponse.html":{},"interfaces/Source.html":{}}}],["para",{"_index":42,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"interfaces/Error.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"interfaces/NewsResponse.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Source.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{}}}],["param",{"_index":80,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"injectables/UserService.html":{}}}],["parametro",{"_index":1159,"title":{},"body":{"components/MenuComponent.html":{},"injectables/MultimediaService.html":{},"injectables/NewsService.html":{},"injectables/UserService.html":{}}}],["params",{"_index":1428,"title":{},"body":{"injectables/NewsService.html":{}}}],["parámetro",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"components/HeaderComponent.html":{},"components/InfoRetoComponent.html":{},"components/MisRetosPage.html":{},"components/NoticiaComponent.html":{},"components/RetosComponent.html":{}}}],["parámetros",{"_index":34,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"injectables/UserService.html":{}}}],["pasa",{"_index":1209,"title":{},"body":{"components/MisRetosPage.html":{},"injectables/NewsService.html":{}}}],["pasada",{"_index":1239,"title":{},"body":{"injectables/MultimediaService.html":{},"injectables/NewsService.html":{}}}],["pasado",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"components/InfoRetoComponent.html":{},"injectables/UserService.html":{}}}],["pasados",{"_index":1111,"title":{},"body":{"components/LoginComponent.html":{},"injectables/NewsService.html":{}}}],["pasando",{"_index":1347,"title":{},"body":{"components/NewsPagePage.html":{},"components/PerfilPage.html":{}}}],["passchange",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["passchange(nuevacontraseña",{"_index":555,"title":{},"body":{"injectables/AuthService.html":{}}}],["password",{"_index":682,"title":{},"body":{"interfaces/Error.html":{},"interfaces/Favorito.html":{},"components/LoginComponent.html":{},"interfaces/MenuOpts.html":{},"components/PerfilPage.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["password1",{"_index":1584,"title":{},"body":{"components/PerfilPage.html":{}}}],["password2",{"_index":1586,"title":{},"body":{"components/PerfilPage.html":{}}}],["path",{"_index":218,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AdminPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/FavoritosPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MisRetosPageRoutingModule.html":{},"injectables/MultimediaService.html":{},"modules/NewsPagePageRoutingModule.html":{},"modules/PerfilPageRoutingModule.html":{},"modules/RankingPageRoutingModule.html":{}}}],["pathmatch",{"_index":426,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["patrones",{"_index":1646,"title":{},"body":{"components/RegistroComponent.html":{}}}],["pattern",{"_index":685,"title":{},"body":{"interfaces/Error.html":{}}}],["pedir",{"_index":1282,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["perfil",{"_index":288,"title":{},"body":{"components/AdminPage.html":{},"modules/AppRoutingModule.html":{},"components/PerfilPage.html":{},"modules/PerfilPageModule.html":{}}}],["perfil'},{'name",{"_index":173,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["perfil.page",{"_index":1616,"title":{},"body":{"modules/PerfilPageModule.html":{},"modules/PerfilPageRoutingModule.html":{}}}],["perfil.page.html",{"_index":1490,"title":{},"body":{"components/PerfilPage.html":{}}}],["perfil.page.scss",{"_index":1489,"title":{},"body":{"components/PerfilPage.html":{}}}],["perfiles",{"_index":46,"title":{},"body":{"components/AboutPage.html":{}}}],["perfilpage",{"_index":172,"title":{"components/PerfilPage.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"modules/PerfilPageModule.html":{},"modules/PerfilPageRoutingModule.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"coverage.html":{},"index.html":{}}}],["perfilpagemodule",{"_index":1610,"title":{"modules/PerfilPageModule.html":{}},"body":{"modules/PerfilPageModule.html":{},"index.html":{},"modules.html":{}}}],["perfilpageroutingmodule",{"_index":1614,"title":{"modules/PerfilPageRoutingModule.html":{}},"body":{"modules/PerfilPageModule.html":{},"modules/PerfilPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["pero",{"_index":1001,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["personalización",{"_index":252,"title":{},"body":{"components/AdminPage.html":{}}}],["personalizado",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{},"components/FavoritosPage.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{}}}],["personalizados",{"_index":666,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/HomePageModule.html":{}}}],["personalizar",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/RetoComponent.html":{}}}],["pestaña",{"_index":1459,"title":{},"body":{"components/NoticiaComponent.html":{}}}],["peticion",{"_index":478,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/NewsResponse.html":{},"interfaces/Source.html":{}}}],["peticiones",{"_index":1394,"title":{},"body":{"interfaces/NewsResponse.html":{},"injectables/UserService.html":{}}}],["pipe",{"_index":1432,"title":{},"body":{"injectables/NewsService.html":{},"injectables/UserService.html":{}}}],["placeholder",{"_index":1598,"title":{},"body":{"components/PerfilPage.html":{}}}],["plantilla",{"_index":882,"title":{},"body":{"components/HomePage.html":{}}}],["plataforma",{"_index":53,"title":{},"body":{"components/AboutPage.html":{},"components/NoticiaComponent.html":{},"components/RetoComponent.html":{}}}],["platform",{"_index":28,"title":{},"body":{"components/AboutPage.html":{},"components/InfoRetoComponent.html":{},"components/NoticiaComponent.html":{},"components/RetoComponent.html":{}}}],["plugin",{"_index":1878,"title":{},"body":{"dependencies.html":{}}}],["plugins/http",{"_index":1854,"title":{},"body":{"dependencies.html":{}}}],["plugins/in",{"_index":74,"title":{},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"components/NoticiaComponent.html":{},"dependencies.html":{}}}],["plugins/social",{"_index":410,"title":{},"body":{"modules/AppModule.html":{},"components/InfoRetoComponent.html":{},"components/NoticiaComponent.html":{},"components/RetoComponent.html":{},"dependencies.html":{}}}],["plugins/splash",{"_index":1857,"title":{},"body":{"dependencies.html":{}}}],["podido",{"_index":604,"title":{},"body":{"injectables/AuthService.html":{}}}],["pon",{"_index":684,"title":{},"body":{"interfaces/Error.html":{},"components/PerfilPage.html":{}}}],["pone",{"_index":1930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["poner",{"_index":995,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["por",{"_index":314,"title":{},"body":{"components/AdminPage.html":{},"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"interfaces/NewsResponse.html":{},"injectables/NewsService.html":{},"components/NoticiasComponent.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"components/RetosComponent.html":{},"interfaces/Source.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{},"miscellaneous/variables.html":{}}}],["posición",{"_index":1002,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["position",{"_index":915,"title":{},"body":{"components/HomePage.html":{},"components/InfoRetoComponent.html":{}}}],["posteriormente",{"_index":1357,"title":{},"body":{"components/NewsPagePage.html":{},"components/PerfilPage.html":{}}}],["preloadallmodules",{"_index":419,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":452,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["prepara",{"_index":1199,"title":{},"body":{"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{}}}],["preparada",{"_index":1295,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["presentalert",{"_index":1262,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["presenttoast",{"_index":639,"title":{},"body":{"injectables/AvisosService.html":{}}}],["presenttoast(mensaje",{"_index":646,"title":{},"body":{"injectables/AvisosService.html":{}}}],["primero",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{}}}],["principal",{"_index":378,"title":{},"body":{"components/AppComponent.html":{}}}],["prismaticos",{"_index":769,"title":{},"body":{"interfaces/Favorito.html":{},"components/InfoRetoComponent.html":{},"interfaces/MenuOpts.html":{},"components/NewRetoComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["private",{"_index":82,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"injectables/AuthService.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"injectables/UserService.html":{}}}],["proceso",{"_index":1655,"title":{},"body":{"components/RegistroComponent.html":{}}}],["prod",{"_index":1938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["producción",{"_index":1931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projectid",{"_index":1918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":544,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MultimediaService.html":{}}}],["promise((resolve",{"_index":606,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise(resolve",{"_index":1246,"title":{},"body":{"injectables/MultimediaService.html":{}}}],["properties",{"_index":1902,"title":{"properties.html":{}},"body":{}}],["propiedades",{"_index":225,"title":{},"body":{"components/AdminPage.html":{},"interfaces/Article.html":{},"injectables/AuthService.html":{},"interfaces/Error.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"interfaces/NewsResponse.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"components/RetosComponent.html":{},"interfaces/Source.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{},"properties.html":{}}}],["propio",{"_index":1104,"title":{},"body":{"components/LoginComponent.html":{}}}],["provide",{"_index":415,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":594,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"injectables/MenuService.html":{},"injectables/MultimediaService.html":{},"injectables/NewsService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["proyecto",{"_index":93,"title":{},"body":{"components/AboutPage.html":{},"components/HeaderComponent.html":{},"properties.html":{}}}],["public",{"_index":226,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/MisRetosPage.html":{},"components/NewsPagePage.html":{},"components/NoticiasComponent.html":{},"components/RankingPage.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"injectables/UserService.html":{}}}],["publica",{"_index":1487,"title":{},"body":{"components/NoticiasComponent.html":{}}}],["publicacion",{"_index":472,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/NewsResponse.html":{},"interfaces/Source.html":{}}}],["publishedat",{"_index":462,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/NewsResponse.html":{},"interfaces/Source.html":{}}}],["puede",{"_index":650,"title":{},"body":{"injectables/AvisosService.html":{},"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["pueden",{"_index":945,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["puntos",{"_index":228,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{}}}],["puntuacion",{"_index":1753,"title":{},"body":{"injectables/UserService.html":{}}}],["página",{"_index":799,"title":{},"body":{"interfaces/Favorito.html":{},"components/HomePage.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["páginas",{"_index":699,"title":{},"body":{"components/FabLoginComponent.html":{},"components/HeaderComponent.html":{}}}],["pérez",{"_index":100,"title":{},"body":{"components/AboutPage.html":{},"properties.html":{}}}],["pública",{"_index":1364,"title":{},"body":{"components/NewsPagePage.html":{}}}],["qcjvpe1f4n",{"_index":1928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["qcon",{"_index":649,"title":{},"body":{"injectables/AvisosService.html":{}}}],["quality",{"_index":1307,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["que",{"_index":67,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AdminPage.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"modules/ComponentsModule.html":{},"interfaces/Error.html":{},"components/FabLoginComponent.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"modules/FavoritosPageModule.html":{},"modules/FavoritosPageRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"modules/MisRetosPageModule.html":{},"modules/MisRetosPageRoutingModule.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"modules/NewsPagePageModule.html":{},"modules/NewsPagePageRoutingModule.html":{},"interfaces/NewsResponse.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"modules/PerfilPageModule.html":{},"modules/PerfilPageRoutingModule.html":{},"components/RankingPage.html":{},"modules/RankingPageModule.html":{},"modules/RankingPageRoutingModule.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"components/RetosComponent.html":{},"interfaces/Source.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["quieres",{"_index":1576,"title":{},"body":{"components/PerfilPage.html":{}}}],["quita",{"_index":825,"title":{},"body":{"components/FavoritosPage.html":{}}}],["quitarfavorito",{"_index":810,"title":{},"body":{"components/FavoritosPage.html":{},"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["quitarfavorito(id",{"_index":823,"title":{},"body":{"components/FavoritosPage.html":{}}}],["quitarfavorito(retoid",{"_index":1003,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["r.blob",{"_index":1319,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["radius",{"_index":720,"title":{},"body":{"components/FabLoginComponent.html":{},"components/MenuComponent.html":{}}}],["ranking",{"_index":436,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/RankingPage.html":{},"modules/RankingPageModule.html":{}}}],["ranking'},{'name",{"_index":175,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["ranking.page",{"_index":1634,"title":{},"body":{"modules/RankingPageModule.html":{},"modules/RankingPageRoutingModule.html":{}}}],["ranking.page.html",{"_index":1620,"title":{},"body":{"components/RankingPage.html":{}}}],["ranking.page.scss",{"_index":1619,"title":{},"body":{"components/RankingPage.html":{}}}],["rankingpage",{"_index":174,"title":{"components/RankingPage.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"modules/RankingPageModule.html":{},"modules/RankingPageRoutingModule.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"coverage.html":{},"index.html":{}}}],["rankingpagemodule",{"_index":1628,"title":{"modules/RankingPageModule.html":{}},"body":{"modules/RankingPageModule.html":{},"index.html":{},"modules.html":{}}}],["rankingpageroutingmodule",{"_index":1632,"title":{"modules/RankingPageRoutingModule.html":{}},"body":{"modules/RankingPageModule.html":{},"modules/RankingPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["reactiveformsmodule",{"_index":665,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["realiza",{"_index":298,"title":{},"body":{"components/AdminPage.html":{},"components/LoginComponent.html":{}}}],["realizado",{"_index":1705,"title":{},"body":{"components/RetoComponent.html":{}}}],["realizar",{"_index":946,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/PerfilPage.html":{}}}],["recibe",{"_index":877,"title":{},"body":{"components/HeaderComponent.html":{},"components/InfoRetoComponent.html":{},"components/MenuComponent.html":{},"components/NoticiasComponent.html":{},"components/RetoComponent.html":{}}}],["recibido",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{},"components/NoticiaComponent.html":{},"components/RegistroComponent.html":{}}}],["recibir",{"_index":301,"title":{},"body":{"components/AdminPage.html":{}}}],["recie",{"_index":1717,"title":{},"body":{"components/RetosComponent.html":{}}}],["recoge",{"_index":1277,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["recogidos",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{},"components/NewRetoComponent.html":{}}}],["recomienda",{"_index":384,"title":{},"body":{"components/AppComponent.html":{}}}],["recording",{"_index":1037,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["redirecciona",{"_index":1110,"title":{},"body":{"components/LoginComponent.html":{}}}],["redireccionaria",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{}}}],["redirectto",{"_index":425,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["redirigir",{"_index":1504,"title":{},"body":{"components/PerfilPage.html":{}}}],["ref",{"_index":1249,"title":{},"body":{"injectables/MultimediaService.html":{},"injectables/UserService.html":{}}}],["ref.getdownloadurl().subscribe(res",{"_index":1254,"title":{},"body":{"injectables/MultimediaService.html":{}}}],["ref.orderby('puntos",{"_index":1793,"title":{},"body":{"injectables/UserService.html":{}}}],["ref.put(file",{"_index":1252,"title":{},"body":{"injectables/MultimediaService.html":{}}}],["ref.where('email",{"_index":1775,"title":{},"body":{"injectables/UserService.html":{}}}],["ref.where('id",{"_index":1780,"title":{},"body":{"injectables/UserService.html":{}}}],["ref.where('user",{"_index":1789,"title":{},"body":{"injectables/UserService.html":{}}}],["registrado?registrar",{"_index":1151,"title":{},"body":{"components/LoginComponent.html":{}}}],["registrar",{"_index":1663,"title":{},"body":{"components/RegistroComponent.html":{}}}],["registro",{"_index":1117,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["registro'},{'name",{"_index":177,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["registro(value",{"_index":1649,"title":{},"body":{"components/RegistroComponent.html":{}}}],["registro.component.html",{"_index":1638,"title":{},"body":{"components/RegistroComponent.html":{}}}],["registro.component.scss",{"_index":1637,"title":{},"body":{"components/RegistroComponent.html":{}}}],["registro/registro.component",{"_index":669,"title":{},"body":{"modules/ComponentsModule.html":{},"components/LoginComponent.html":{}}}],["registrocomponent",{"_index":176,"title":{"components/RegistroComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"modules/ComponentsModule.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"coverage.html":{},"index.html":{}}}],["registroform",{"_index":1639,"title":{},"body":{"components/RegistroComponent.html":{}}}],["registromodal",{"_index":1094,"title":{},"body":{"components/LoginComponent.html":{}}}],["regresar",{"_index":1078,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["reject",{"_index":607,"title":{},"body":{"injectables/AuthService.html":{}}}],["reject(err",{"_index":613,"title":{},"body":{"injectables/AuthService.html":{}}}],["relacionado",{"_index":1179,"title":{},"body":{"injectables/MenuService.html":{}}}],["removeretoconseguido",{"_index":960,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["removeretoconseguido(retoid",{"_index":1005,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["repite",{"_index":1600,"title":{},"body":{"components/PerfilPage.html":{}}}],["replaced",{"_index":1932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replacements",{"_index":1943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replaces",{"_index":1939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":683,"title":{},"body":{"interfaces/Error.html":{}}}],["res",{"_index":610,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["resolve(downloadurl",{"_index":1256,"title":{},"body":{"injectables/MultimediaService.html":{}}}],["resolve(res",{"_index":611,"title":{},"body":{"injectables/AuthService.html":{}}}],["restablecer",{"_index":196,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AdminPageModule.html":{},"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/FavoritosPageModule.html":{},"modules/HomePageModule.html":{},"modules/MisRetosPageModule.html":{},"modules/NewsPagePageModule.html":{},"modules/PerfilPageModule.html":{},"modules/RankingPageModule.html":{},"index.html":{}}}],["resto",{"_index":1692,"title":{},"body":{"components/RetoComponent.html":{}}}],["resultado",{"_index":616,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"components/MisRetosPage.html":{},"components/RegistroComponent.html":{}}}],["resultados",{"_index":184,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AdminPage.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"modules/ComponentsModule.html":{},"interfaces/Error.html":{},"components/FabLoginComponent.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"modules/FavoritosPageModule.html":{},"modules/FavoritosPageRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"modules/MisRetosPageModule.html":{},"modules/MisRetosPageRoutingModule.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"modules/NewsPagePageModule.html":{},"modules/NewsPagePageRoutingModule.html":{},"interfaces/NewsResponse.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"modules/PerfilPageModule.html":{},"modules/PerfilPageRoutingModule.html":{},"components/RankingPage.html":{},"modules/RankingPageModule.html":{},"modules/RankingPageRoutingModule.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"components/RetosComponent.html":{},"interfaces/Source.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["resulttype",{"_index":1310,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["retador",{"_index":596,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Favorito.html":{},"components/HomePage.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{}}}],["retadoradministrador",{"_index":273,"title":{},"body":{"components/AdminPage.html":{}}}],["reto",{"_index":263,"title":{"interfaces/Reto.html":{}},"body":{"components/AdminPage.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"interfaces/MenuOpts.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"components/RetosComponent.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{},"coverage.html":{}}}],["reto'},{'name",{"_index":156,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["reto.activo",{"_index":364,"title":{},"body":{"components/AdminPage.html":{},"components/MisRetosPage.html":{}}}],["reto.component",{"_index":677,"title":{},"body":{"modules/ComponentsModule.html":{},"components/FavoritosPage.html":{},"components/MisRetosPage.html":{},"components/RetoComponent.html":{}}}],["reto.component.html",{"_index":950,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/NewRetoComponent.html":{},"components/RetoComponent.html":{}}}],["reto.component.scss",{"_index":949,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/NewRetoComponent.html":{},"components/RetoComponent.html":{}}}],["reto.component.ts",{"_index":940,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/NewRetoComponent.html":{},"coverage.html":{}}}],["reto.component.ts:108",{"_index":1276,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["reto.component.ts:111",{"_index":990,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["reto.component.ts:128",{"_index":985,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["reto.component.ts:135",{"_index":1280,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["reto.component.ts:143",{"_index":980,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["reto.component.ts:144",{"_index":1273,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["reto.component.ts:158",{"_index":1008,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["reto.component.ts:169",{"_index":1004,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["reto.component.ts:184",{"_index":977,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["reto.component.ts:192",{"_index":1012,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["reto.component.ts:20",{"_index":1296,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["reto.component.ts:207",{"_index":1006,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["reto.component.ts:224",{"_index":981,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["reto.component.ts:24",{"_index":1297,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["reto.component.ts:27",{"_index":974,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["reto.component.ts:28",{"_index":1290,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["reto.component.ts:31",{"_index":1025,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["reto.component.ts:32",{"_index":1293,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["reto.component.ts:35",{"_index":1020,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["reto.component.ts:36",{"_index":1269,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["reto.component.ts:39",{"_index":1016,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["reto.component.ts:43",{"_index":1013,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["reto.component.ts:45",{"_index":1014,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["reto.component.ts:47",{"_index":964,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["reto.component.ts:60",{"_index":1278,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["reto.component.ts:72",{"_index":1000,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["reto.component.ts:88",{"_index":1284,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["reto.component.ts:92",{"_index":997,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["reto.puntos",{"_index":1792,"title":{},"body":{"injectables/UserService.html":{}}}],["reto.titulo",{"_index":363,"title":{},"body":{"components/AdminPage.html":{},"components/MisRetosPage.html":{},"components/RetoComponent.html":{}}}],["reto/info",{"_index":676,"title":{},"body":{"modules/ComponentsModule.html":{},"components/FavoritosPage.html":{},"components/InfoRetoComponent.html":{},"components/MisRetosPage.html":{},"components/RetoComponent.html":{},"coverage.html":{}}}],["reto/new",{"_index":678,"title":{},"body":{"modules/ComponentsModule.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"coverage.html":{}}}],["reto/reto.component",{"_index":675,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["reto?.descripcion",{"_index":1075,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["reto?.nivel",{"_index":1074,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["reto?.tipo",{"_index":1073,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["reto?.titulo",{"_index":859,"title":{},"body":{"components/FavoritosPage.html":{},"components/InfoRetoComponent.html":{}}}],["retoactivo",{"_index":229,"title":{},"body":{"components/AdminPage.html":{}}}],["retocomponent",{"_index":178,"title":{"components/RetoComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"modules/ComponentsModule.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"coverage.html":{},"index.html":{}}}],["retoconseguido",{"_index":785,"title":{"interfaces/RetoConseguido.html":{}},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{},"coverage.html":{}}}],["retoid",{"_index":978,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["retorna",{"_index":994,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["retorno",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{}}}],["retos",{"_index":180,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FabLoginComponent.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"components/MisRetosPage.html":{},"modules/MisRetosPageModule.html":{},"modules/MisRetosPageRoutingModule.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"components/RetosComponent.html":{},"interfaces/Usuario.html":{}}}],["retos'},{'name",{"_index":162,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["retos.component.html",{"_index":1715,"title":{},"body":{"components/RetosComponent.html":{}}}],["retos.component.scss",{"_index":1714,"title":{},"body":{"components/RetosComponent.html":{}}}],["retos.module').then",{"_index":441,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["retos.module.ts",{"_index":1225,"title":{},"body":{"modules/MisRetosPageModule.html":{}}}],["retos.page",{"_index":1226,"title":{},"body":{"modules/MisRetosPageModule.html":{},"modules/MisRetosPageRoutingModule.html":{}}}],["retos.page.html",{"_index":1195,"title":{},"body":{"components/MisRetosPage.html":{}}}],["retos.page.scss",{"_index":1194,"title":{},"body":{"components/MisRetosPage.html":{}}}],["retos.page.ts",{"_index":1193,"title":{},"body":{"components/MisRetosPage.html":{},"coverage.html":{}}}],["retos.page.ts:111",{"_index":1204,"title":{},"body":{"components/MisRetosPage.html":{}}}],["retos.page.ts:125",{"_index":1211,"title":{},"body":{"components/MisRetosPage.html":{}}}],["retos.page.ts:25",{"_index":1213,"title":{},"body":{"components/MisRetosPage.html":{}}}],["retos.page.ts:30",{"_index":1216,"title":{},"body":{"components/MisRetosPage.html":{}}}],["retos.page.ts:35",{"_index":1197,"title":{},"body":{"components/MisRetosPage.html":{}}}],["retos.page.ts:46",{"_index":1214,"title":{},"body":{"components/MisRetosPage.html":{}}}],["retos.page.ts:61",{"_index":1210,"title":{},"body":{"components/MisRetosPage.html":{}}}],["retos.page.ts:78",{"_index":1207,"title":{},"body":{"components/MisRetosPage.html":{}}}],["retos.page.ts:96",{"_index":1201,"title":{},"body":{"components/MisRetosPage.html":{}}}],["retos.reduce((total",{"_index":1791,"title":{},"body":{"injectables/UserService.html":{}}}],["retos/mis",{"_index":440,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MisRetosPage.html":{},"modules/MisRetosPageModule.html":{},"modules/MisRetosPageRoutingModule.html":{},"coverage.html":{}}}],["retos/retos.component",{"_index":679,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["retos[0",{"_index":1030,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["retoscomponent",{"_index":179,"title":{"components/RetosComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"modules/ComponentsModule.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"coverage.html":{},"index.html":{}}}],["retosconseguidos",{"_index":784,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["retoservice",{"_index":247,"title":{},"body":{"components/AdminPage.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/RetoComponent.html":{},"coverage.html":{}}}],["retosvc",{"_index":246,"title":{},"body":{"components/AdminPage.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/RetoComponent.html":{}}}],["return",{"_index":89,"title":{},"body":{"components/AboutPage.html":{},"injectables/AuthService.html":{},"components/FabLoginComponent.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"injectables/MultimediaService.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/RetoComponent.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":83,"title":{},"body":{"components/AboutPage.html":{},"injectables/AuthService.html":{},"components/FabLoginComponent.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"injectables/MultimediaService.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/RetoComponent.html":{},"injectables/UserService.html":{}}}],["revisa",{"_index":1498,"title":{},"body":{"components/PerfilPage.html":{}}}],["rgb(0",{"_index":735,"title":{},"body":{"components/FabLoginComponent.html":{}}}],["rgb(252",{"_index":1080,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["rgba(0",{"_index":727,"title":{},"body":{"components/FabLoginComponent.html":{},"components/MenuComponent.html":{}}}],["rgba(209",{"_index":741,"title":{},"body":{"components/FabLoginComponent.html":{}}}],["right",{"_index":918,"title":{},"body":{"components/HomePage.html":{}}}],["rojo",{"_index":1678,"title":{},"body":{"components/RetoComponent.html":{}}}],["rol",{"_index":270,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"interfaces/Favorito.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{}}}],["role",{"_index":1467,"title":{},"body":{"components/NoticiaComponent.html":{},"components/PerfilPage.html":{}}}],["roles",{"_index":803,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{}}}],["roles.includes(menuopt.rol",{"_index":1798,"title":{},"body":{"injectables/UserService.html":{}}}],["root",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"injectables/MenuService.html":{},"injectables/MultimediaService.html":{},"injectables/NewsService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":145,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["router",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{},"components/MenuComponent.html":{},"components/PerfilPage.html":{}}}],["routereusestrategy",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":216,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AdminPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/FavoritosPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MisRetosPageRoutingModule.html":{},"modules/NewsPagePageRoutingModule.html":{},"modules/PerfilPageRoutingModule.html":{},"modules/RankingPageRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":219,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AdminPageRoutingModule.html":{},"modules/FavoritosPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MisRetosPageRoutingModule.html":{},"modules/NewsPagePageRoutingModule.html":{},"modules/PerfilPageRoutingModule.html":{},"modules/RankingPageRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":451,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["routes",{"_index":215,"title":{"routes.html":{}},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AdminPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/FavoritosPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MisRetosPageRoutingModule.html":{},"modules/NewsPagePageRoutingModule.html":{},"modules/PerfilPageRoutingModule.html":{},"modules/RankingPageRoutingModule.html":{}}}],["routing.module",{"_index":207,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AdminPageModule.html":{},"modules/AppModule.html":{},"modules/FavoritosPageModule.html":{},"modules/HomePageModule.html":{},"modules/MisRetosPageModule.html":{},"modules/NewsPagePageModule.html":{},"modules/PerfilPageModule.html":{},"modules/RankingPageModule.html":{}}}],["routing.module.ts",{"_index":214,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AdminPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/FavoritosPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MisRetosPageRoutingModule.html":{},"modules/NewsPagePageRoutingModule.html":{},"modules/PerfilPageRoutingModule.html":{},"modules/RankingPageRoutingModule.html":{}}}],["rrss",{"_index":967,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["ruta",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MultimediaService.html":{}}}],["rutas",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{},"components/MenuComponent.html":{},"components/PerfilPage.html":{},"index.html":{},"routes.html":{}}}],["rxjs",{"_index":587,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NewsService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":591,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MultimediaService.html":{},"injectables/NewsService.html":{},"injectables/UserService.html":{}}}],["sae",{"_index":944,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["saferesourceurl",{"_index":1289,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["salir",{"_index":1443,"title":{},"body":{"components/NoticiaComponent.html":{}}}],["sanea",{"_index":1287,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["saneada",{"_index":1294,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["saneado",{"_index":1242,"title":{},"body":{"injectables/MultimediaService.html":{},"injectables/UserService.html":{}}}],["saneador",{"_index":1270,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["sanearla",{"_index":1313,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["sanitizer",{"_index":1264,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["santa",{"_index":103,"title":{},"body":{"components/AboutPage.html":{}}}],["screen",{"_index":1858,"title":{},"body":{"dependencies.html":{}}}],["scrollelement",{"_index":1383,"title":{},"body":{"components/NewsPagePage.html":{}}}],["scrollelement.scrollheight",{"_index":1386,"title":{},"body":{"components/NewsPagePage.html":{}}}],["scrollheight",{"_index":1385,"title":{},"body":{"components/NewsPagePage.html":{}}}],["se",{"_index":55,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"components/FabLoginComponent.html":{},"interfaces/Favorito.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"interfaces/NewsResponse.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Source.html":{},"interfaces/Usuario.html":{}}}],["sea",{"_index":755,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"components/PerfilPage.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["secondary",{"_index":1469,"title":{},"body":{"components/NoticiaComponent.html":{},"components/PerfilPage.html":{}}}],["segmentchanged",{"_index":238,"title":{},"body":{"components/AdminPage.html":{}}}],["segmentchanged(event",{"_index":295,"title":{},"body":{"components/AdminPage.html":{}}}],["segmento",{"_index":230,"title":{},"body":{"components/AdminPage.html":{}}}],["segmentos",{"_index":323,"title":{},"body":{"components/AdminPage.html":{}}}],["segun",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["segura",{"_index":1271,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["seguro",{"_index":1575,"title":{},"body":{"components/PerfilPage.html":{}}}],["según",{"_index":764,"title":{},"body":{"interfaces/Favorito.html":{},"components/HomePage.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/NoticiasComponent.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["selecciona",{"_index":1285,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["seleccionado",{"_index":1205,"title":{},"body":{"components/MisRetosPage.html":{}}}],["seleccionar",{"_index":1332,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["selectimage",{"_index":1263,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["selector",{"_index":15,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["ser",{"_index":322,"title":{},"body":{"components/AdminPage.html":{},"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"components/PerfilPage.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["services/auth.service",{"_index":420,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomePage.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{}}}],["services/avisos.service",{"_index":330,"title":{},"body":{"components/AdminPage.html":{},"components/MisRetosPage.html":{}}}],["services/menu.service",{"_index":1217,"title":{},"body":{"components/MisRetosPage.html":{}}}],["services/multimedia.service",{"_index":1302,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["services/news.service",{"_index":1375,"title":{},"body":{"components/NewsPagePage.html":{}}}],["services/reto.service",{"_index":331,"title":{},"body":{"components/AdminPage.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{}}}],["services/user.service",{"_index":328,"title":{},"body":{"components/AdminPage.html":{},"components/MisRetosPage.html":{},"components/PerfilPage.html":{}}}],["servicio",{"_index":250,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"injectables/NewsService.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["servidcio",{"_index":1234,"title":{},"body":{"injectables/MultimediaService.html":{}}}],["sesion",{"_index":969,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["sesión",{"_index":1146,"title":{},"body":{"components/LoginComponent.html":{},"injectables/MenuService.html":{},"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["setavatarcamara",{"_index":1495,"title":{},"body":{"components/PerfilPage.html":{}}}],["setavatargallery",{"_index":1496,"title":{},"body":{"components/PerfilPage.html":{}}}],["setfavorito",{"_index":961,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["setfavorito(retoid",{"_index":1007,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["setmenu",{"_index":1174,"title":{},"body":{"injectables/MenuService.html":{}}}],["setretoconseguido",{"_index":962,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["setretoconseguido(retoid",{"_index":1011,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["setuseremail",{"_index":1729,"title":{},"body":{"injectables/UserService.html":{}}}],["setuseremail(email",{"_index":1755,"title":{},"body":{"injectables/UserService.html":{}}}],["shadow",{"_index":723,"title":{},"body":{"components/FabLoginComponent.html":{},"components/MenuComponent.html":{}}}],["share",{"_index":1463,"title":{},"body":{"components/NoticiaComponent.html":{}}}],["sharing",{"_index":1856,"title":{},"body":{"dependencies.html":{}}}],["sharing/ngx",{"_index":411,"title":{},"body":{"modules/AppModule.html":{},"components/InfoRetoComponent.html":{},"components/NoticiaComponent.html":{},"components/RetoComponent.html":{}}}],["sheet",{"_index":1558,"title":{},"body":{"components/PerfilPage.html":{}}}],["si",{"_index":309,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"interfaces/Favorito.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["signin",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["signin(value",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{}}}],["signout",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup(usuario",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{}}}],["sin",{"_index":1442,"title":{},"body":{"components/NoticiaComponent.html":{}}}],["sirve",{"_index":1021,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["size",{"_index":115,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{}}}],["slice",{"_index":1076,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["socialsharing",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"components/InfoRetoComponent.html":{},"components/NoticiaComponent.html":{},"components/RetoComponent.html":{}}}],["solicitada",{"_index":1165,"title":{},"body":{"components/MenuComponent.html":{}}}],["solicitar",{"_index":1405,"title":{},"body":{"injectables/NewsService.html":{}}}],["solicitud",{"_index":1416,"title":{},"body":{"injectables/NewsService.html":{}}}],["solo",{"_index":698,"title":{},"body":{"components/FabLoginComponent.html":{},"interfaces/Favorito.html":{},"components/InfoRetoComponent.html":{},"interfaces/MenuOpts.html":{},"components/NoticiasComponent.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["soporta",{"_index":1898,"title":{},"body":{"modules.html":{}}}],["source",{"_index":4,"title":{"interfaces/Source.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AdminPage.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"modules/ComponentsModule.html":{},"interfaces/Error.html":{},"components/FabLoginComponent.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"modules/FavoritosPageModule.html":{},"modules/FavoritosPageRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"modules/MisRetosPageModule.html":{},"modules/MisRetosPageRoutingModule.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"modules/NewsPagePageModule.html":{},"modules/NewsPagePageRoutingModule.html":{},"interfaces/NewsResponse.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"modules/PerfilPageModule.html":{},"modules/PerfilPageRoutingModule.html":{},"components/RankingPage.html":{},"modules/RankingPageModule.html":{},"modules/RankingPageRoutingModule.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"components/RetosComponent.html":{},"interfaces/Source.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{},"coverage.html":{}}}],["splashscreen",{"_index":1882,"title":{},"body":{"dependencies.html":{}}}],["src/.../environment.prod.ts",{"_index":1911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../news.service.ts",{"_index":1910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":418,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":383,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":391,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/components.module",{"_index":210,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AdminPageModule.html":{},"modules/FavoritosPageModule.html":{},"modules/HomePageModule.html":{},"modules/MisRetosPageModule.html":{},"modules/NewsPagePageModule.html":{},"modules/PerfilPageModule.html":{},"modules/RankingPageModule.html":{}}}],["src/app/components/components.module.ts",{"_index":663,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["src/app/components/fab",{"_index":694,"title":{},"body":{"components/FabLoginComponent.html":{},"coverage.html":{}}}],["src/app/components/header/header.component.ts",{"_index":868,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/components/header/header.component.ts:16",{"_index":876,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:26",{"_index":879,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/info",{"_index":836,"title":{},"body":{"components/FavoritosPage.html":{},"components/InfoRetoComponent.html":{},"components/MisRetosPage.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts",{"_index":1088,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:110",{"_index":1103,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:24",{"_index":1123,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:28",{"_index":1125,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:32",{"_index":1119,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:36",{"_index":1099,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:56",{"_index":1112,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:75",{"_index":1108,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:91",{"_index":1105,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:99",{"_index":1116,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/menu/menu.component.ts",{"_index":1152,"title":{},"body":{"components/MenuComponent.html":{},"coverage.html":{}}}],["src/app/components/menu/menu.component.ts:15",{"_index":1157,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/components/menu/menu.component.ts:26",{"_index":1168,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/components/menu/menu.component.ts:34",{"_index":1163,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/components/new",{"_index":1218,"title":{},"body":{"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"coverage.html":{}}}],["src/app/components/noticia/noticia.component.ts",{"_index":1433,"title":{},"body":{"components/NoticiaComponent.html":{},"coverage.html":{}}}],["src/app/components/noticia/noticia.component.ts:19",{"_index":1447,"title":{},"body":{"components/NoticiaComponent.html":{}}}],["src/app/components/noticia/noticia.component.ts:24",{"_index":1441,"title":{},"body":{"components/NoticiaComponent.html":{}}}],["src/app/components/noticia/noticia.component.ts:41",{"_index":1452,"title":{},"body":{"components/NoticiaComponent.html":{}}}],["src/app/components/noticia/noticia.component.ts:67",{"_index":1457,"title":{},"body":{"components/NoticiaComponent.html":{}}}],["src/app/components/noticia/noticia.component.ts:80",{"_index":1454,"title":{},"body":{"components/NoticiaComponent.html":{}}}],["src/app/components/noticias/noticias.component.ts",{"_index":1479,"title":{},"body":{"components/NoticiasComponent.html":{},"coverage.html":{}}}],["src/app/components/noticias/noticias.component.ts:15",{"_index":1486,"title":{},"body":{"components/NoticiasComponent.html":{}}}],["src/app/components/noticias/noticias.component.ts:20",{"_index":1482,"title":{},"body":{"components/NoticiasComponent.html":{}}}],["src/app/components/registro/registro.component.ts",{"_index":1636,"title":{},"body":{"components/RegistroComponent.html":{},"coverage.html":{}}}],["src/app/components/registro/registro.component.ts:19",{"_index":1652,"title":{},"body":{"components/RegistroComponent.html":{}}}],["src/app/components/registro/registro.component.ts:24",{"_index":1654,"title":{},"body":{"components/RegistroComponent.html":{}}}],["src/app/components/registro/registro.component.ts:29",{"_index":1641,"title":{},"body":{"components/RegistroComponent.html":{}}}],["src/app/components/registro/registro.component.ts:45",{"_index":1643,"title":{},"body":{"components/RegistroComponent.html":{}}}],["src/app/components/registro/registro.component.ts:65",{"_index":1650,"title":{},"body":{"components/RegistroComponent.html":{}}}],["src/app/components/reto/reto.component.ts",{"_index":1664,"title":{},"body":{"components/RetoComponent.html":{},"coverage.html":{}}}],["src/app/components/reto/reto.component.ts:112",{"_index":1680,"title":{},"body":{"components/RetoComponent.html":{}}}],["src/app/components/reto/reto.component.ts:124",{"_index":1688,"title":{},"body":{"components/RetoComponent.html":{}}}],["src/app/components/reto/reto.component.ts:141",{"_index":1679,"title":{},"body":{"components/RetoComponent.html":{}}}],["src/app/components/reto/reto.component.ts:159",{"_index":1675,"title":{},"body":{"components/RetoComponent.html":{}}}],["src/app/components/reto/reto.component.ts:175",{"_index":1674,"title":{},"body":{"components/RetoComponent.html":{}}}],["src/app/components/reto/reto.component.ts:195",{"_index":1673,"title":{},"body":{"components/RetoComponent.html":{}}}],["src/app/components/reto/reto.component.ts:209",{"_index":1686,"title":{},"body":{"components/RetoComponent.html":{}}}],["src/app/components/reto/reto.component.ts:233",{"_index":1683,"title":{},"body":{"components/RetoComponent.html":{}}}],["src/app/components/reto/reto.component.ts:253",{"_index":1672,"title":{},"body":{"components/RetoComponent.html":{}}}],["src/app/components/reto/reto.component.ts:267",{"_index":1687,"title":{},"body":{"components/RetoComponent.html":{}}}],["src/app/components/reto/reto.component.ts:28",{"_index":1671,"title":{},"body":{"components/RetoComponent.html":{}}}],["src/app/components/reto/reto.component.ts:289",{"_index":1685,"title":{},"body":{"components/RetoComponent.html":{}}}],["src/app/components/reto/reto.component.ts:33",{"_index":1670,"title":{},"body":{"components/RetoComponent.html":{}}}],["src/app/components/reto/reto.component.ts:38",{"_index":1703,"title":{},"body":{"components/RetoComponent.html":{}}}],["src/app/components/reto/reto.component.ts:42",{"_index":1702,"title":{},"body":{"components/RetoComponent.html":{}}}],["src/app/components/reto/reto.component.ts:46",{"_index":1701,"title":{},"body":{"components/RetoComponent.html":{}}}],["src/app/components/reto/reto.component.ts:50",{"_index":1695,"title":{},"body":{"components/RetoComponent.html":{}}}],["src/app/components/reto/reto.component.ts:55",{"_index":1693,"title":{},"body":{"components/RetoComponent.html":{}}}],["src/app/components/reto/reto.component.ts:60",{"_index":1690,"title":{},"body":{"components/RetoComponent.html":{}}}],["src/app/components/reto/reto.component.ts:65",{"_index":1691,"title":{},"body":{"components/RetoComponent.html":{}}}],["src/app/components/reto/reto.component.ts:69",{"_index":1696,"title":{},"body":{"components/RetoComponent.html":{}}}],["src/app/components/reto/reto.component.ts:73",{"_index":1699,"title":{},"body":{"components/RetoComponent.html":{}}}],["src/app/components/reto/reto.component.ts:78",{"_index":1666,"title":{},"body":{"components/RetoComponent.html":{}}}],["src/app/components/retos/retos.component.ts",{"_index":1713,"title":{},"body":{"components/RetosComponent.html":{},"coverage.html":{}}}],["src/app/components/retos/retos.component.ts:15",{"_index":1718,"title":{},"body":{"components/RetosComponent.html":{}}}],["src/app/components/retos/retos.component.ts:20",{"_index":1716,"title":{},"body":{"components/RetosComponent.html":{}}}],["src/app/interfaces/errores",{"_index":1129,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["src/app/interfaces/errores.ts",{"_index":680,"title":{},"body":{"interfaces/Error.html":{},"coverage.html":{}}}],["src/app/interfaces/interfaces",{"_index":837,"title":{},"body":{"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["src/app/interfaces/interfaces.ts",{"_index":749,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{},"coverage.html":{}}}],["src/app/interfaces/news",{"_index":1376,"title":{},"body":{"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{}}}],["src/app/interfaces/news.ts",{"_index":456,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/NewsResponse.html":{},"interfaces/Source.html":{},"coverage.html":{}}}],["src/app/interfaces/news.ts:86",{"_index":494,"title":{},"body":{"interfaces/ArticlesByCategoryAndPage.html":{}}}],["src/app/pages/about/about",{"_index":213,"title":{},"body":{"modules/AboutPageRoutingModule.html":{}}}],["src/app/pages/about/about.module.ts",{"_index":198,"title":{},"body":{"modules/AboutPageModule.html":{}}}],["src/app/pages/about/about.page.ts",{"_index":10,"title":{},"body":{"components/AboutPage.html":{},"coverage.html":{}}}],["src/app/pages/about/about.page.ts:12",{"_index":31,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/about/about.page.ts:25",{"_index":57,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/about/about.page.ts:33",{"_index":64,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/admin/admin",{"_index":376,"title":{},"body":{"modules/AdminPageRoutingModule.html":{}}}],["src/app/pages/admin/admin.module.ts",{"_index":374,"title":{},"body":{"modules/AdminPageModule.html":{}}}],["src/app/pages/admin/admin.page.ts",{"_index":221,"title":{},"body":{"components/AdminPage.html":{},"coverage.html":{}}}],["src/app/pages/admin/admin.page.ts:112",{"_index":267,"title":{},"body":{"components/AdminPage.html":{}}}],["src/app/pages/admin/admin.page.ts:128",{"_index":260,"title":{},"body":{"components/AdminPage.html":{}}}],["src/app/pages/admin/admin.page.ts:145",{"_index":279,"title":{},"body":{"components/AdminPage.html":{}}}],["src/app/pages/admin/admin.page.ts:160",{"_index":275,"title":{},"body":{"components/AdminPage.html":{}}}],["src/app/pages/admin/admin.page.ts:19",{"_index":327,"title":{},"body":{"components/AdminPage.html":{}}}],["src/app/pages/admin/admin.page.ts:24",{"_index":325,"title":{},"body":{"components/AdminPage.html":{}}}],["src/app/pages/admin/admin.page.ts:29",{"_index":316,"title":{},"body":{"components/AdminPage.html":{}}}],["src/app/pages/admin/admin.page.ts:34",{"_index":319,"title":{},"body":{"components/AdminPage.html":{}}}],["src/app/pages/admin/admin.page.ts:39",{"_index":308,"title":{},"body":{"components/AdminPage.html":{}}}],["src/app/pages/admin/admin.page.ts:44",{"_index":305,"title":{},"body":{"components/AdminPage.html":{}}}],["src/app/pages/admin/admin.page.ts:49",{"_index":248,"title":{},"body":{"components/AdminPage.html":{}}}],["src/app/pages/admin/admin.page.ts:60",{"_index":303,"title":{},"body":{"components/AdminPage.html":{}}}],["src/app/pages/admin/admin.page.ts:74",{"_index":283,"title":{},"body":{"components/AdminPage.html":{}}}],["src/app/pages/admin/admin.page.ts:98",{"_index":297,"title":{},"body":{"components/AdminPage.html":{}}}],["src/app/pages/favoritos/favoritos",{"_index":867,"title":{},"body":{"modules/FavoritosPageRoutingModule.html":{}}}],["src/app/pages/favoritos/favoritos.module.ts",{"_index":865,"title":{},"body":{"modules/FavoritosPageModule.html":{}}}],["src/app/pages/favoritos/favoritos.page.ts",{"_index":805,"title":{},"body":{"components/FavoritosPage.html":{},"coverage.html":{}}}],["src/app/pages/favoritos/favoritos.page.ts:111",{"_index":827,"title":{},"body":{"components/FavoritosPage.html":{}}}],["src/app/pages/favoritos/favoritos.page.ts:129",{"_index":824,"title":{},"body":{"components/FavoritosPage.html":{}}}],["src/app/pages/favoritos/favoritos.page.ts:24",{"_index":832,"title":{},"body":{"components/FavoritosPage.html":{}}}],["src/app/pages/favoritos/favoritos.page.ts:29",{"_index":830,"title":{},"body":{"components/FavoritosPage.html":{}}}],["src/app/pages/favoritos/favoritos.page.ts:34",{"_index":829,"title":{},"body":{"components/FavoritosPage.html":{}}}],["src/app/pages/favoritos/favoritos.page.ts:39",{"_index":833,"title":{},"body":{"components/FavoritosPage.html":{}}}],["src/app/pages/favoritos/favoritos.page.ts:44",{"_index":828,"title":{},"body":{"components/FavoritosPage.html":{}}}],["src/app/pages/favoritos/favoritos.page.ts:49",{"_index":813,"title":{},"body":{"components/FavoritosPage.html":{}}}],["src/app/pages/favoritos/favoritos.page.ts:61",{"_index":831,"title":{},"body":{"components/FavoritosPage.html":{}}}],["src/app/pages/favoritos/favoritos.page.ts:77",{"_index":820,"title":{},"body":{"components/FavoritosPage.html":{}}}],["src/app/pages/home/home",{"_index":939,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["src/app/pages/home/home.module.ts",{"_index":936,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/pages/home/home.page.ts",{"_index":881,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["src/app/pages/home/home.page.ts:102",{"_index":892,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:21",{"_index":898,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:26",{"_index":894,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:30",{"_index":899,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:34",{"_index":900,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:38",{"_index":889,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/mis",{"_index":1192,"title":{},"body":{"components/MisRetosPage.html":{},"modules/MisRetosPageModule.html":{},"modules/MisRetosPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/pages/news",{"_index":1334,"title":{},"body":{"components/NewsPagePage.html":{},"modules/NewsPagePageModule.html":{},"modules/NewsPagePageRoutingModule.html":{},"coverage.html":{}}}],["src/app/pages/perfil/perfil",{"_index":1617,"title":{},"body":{"modules/PerfilPageRoutingModule.html":{}}}],["src/app/pages/perfil/perfil.module.ts",{"_index":1615,"title":{},"body":{"modules/PerfilPageModule.html":{}}}],["src/app/pages/perfil/perfil.page.ts",{"_index":1488,"title":{},"body":{"components/PerfilPage.html":{},"coverage.html":{}}}],["src/app/pages/perfil/perfil.page.ts:109",{"_index":1527,"title":{},"body":{"components/PerfilPage.html":{}}}],["src/app/pages/perfil/perfil.page.ts:122",{"_index":1524,"title":{},"body":{"components/PerfilPage.html":{}}}],["src/app/pages/perfil/perfil.page.ts:132",{"_index":1522,"title":{},"body":{"components/PerfilPage.html":{}}}],["src/app/pages/perfil/perfil.page.ts:181",{"_index":1509,"title":{},"body":{"components/PerfilPage.html":{}}}],["src/app/pages/perfil/perfil.page.ts:209",{"_index":1514,"title":{},"body":{"components/PerfilPage.html":{}}}],["src/app/pages/perfil/perfil.page.ts:273",{"_index":1531,"title":{},"body":{"components/PerfilPage.html":{}}}],["src/app/pages/perfil/perfil.page.ts:29",{"_index":1536,"title":{},"body":{"components/PerfilPage.html":{}}}],["src/app/pages/perfil/perfil.page.ts:296",{"_index":1528,"title":{},"body":{"components/PerfilPage.html":{}}}],["src/app/pages/perfil/perfil.page.ts:34",{"_index":1537,"title":{},"body":{"components/PerfilPage.html":{}}}],["src/app/pages/perfil/perfil.page.ts:39",{"_index":1533,"title":{},"body":{"components/PerfilPage.html":{}}}],["src/app/pages/perfil/perfil.page.ts:44",{"_index":1535,"title":{},"body":{"components/PerfilPage.html":{}}}],["src/app/pages/perfil/perfil.page.ts:49",{"_index":1497,"title":{},"body":{"components/PerfilPage.html":{}}}],["src/app/pages/ranking/ranking",{"_index":1635,"title":{},"body":{"modules/RankingPageRoutingModule.html":{}}}],["src/app/pages/ranking/ranking.module.ts",{"_index":1633,"title":{},"body":{"modules/RankingPageModule.html":{}}}],["src/app/pages/ranking/ranking.page.ts",{"_index":1618,"title":{},"body":{"components/RankingPage.html":{},"coverage.html":{}}}],["src/app/pages/ranking/ranking.page.ts:17",{"_index":1625,"title":{},"body":{"components/RankingPage.html":{}}}],["src/app/pages/ranking/ranking.page.ts:22",{"_index":1626,"title":{},"body":{"components/RankingPage.html":{}}}],["src/app/pages/ranking/ranking.page.ts:27",{"_index":1621,"title":{},"body":{"components/RankingPage.html":{}}}],["src/app/pages/ranking/ranking.page.ts:36",{"_index":1624,"title":{},"body":{"components/RankingPage.html":{}}}],["src/app/pages/ranking/ranking.page.ts:48",{"_index":1622,"title":{},"body":{"components/RankingPage.html":{}}}],["src/app/services/auth.service",{"_index":333,"title":{},"body":{"components/AdminPage.html":{},"components/FavoritosPage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/NewsPagePage.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{}}}],["src/app/services/auth.service.ts",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:110",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:122",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:140",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:150",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:161",{"_index":554,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:175",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:184",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:22",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:27",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:49",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:82",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:98",{"_index":573,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/avisos.service",{"_index":838,"title":{},"body":{"components/FavoritosPage.html":{},"components/InfoRetoComponent.html":{},"components/PerfilPage.html":{},"components/RetoComponent.html":{}}}],["src/app/services/avisos.service.ts",{"_index":638,"title":{},"body":{"injectables/AvisosService.html":{},"coverage.html":{}}}],["src/app/services/avisos.service.ts:21",{"_index":647,"title":{},"body":{"injectables/AvisosService.html":{}}}],["src/app/services/avisos.service.ts:8",{"_index":642,"title":{},"body":{"injectables/AvisosService.html":{}}}],["src/app/services/menu.service",{"_index":332,"title":{},"body":{"components/AdminPage.html":{},"components/FavoritosPage.html":{},"components/NewsPagePage.html":{},"components/RankingPage.html":{}}}],["src/app/services/menu.service.ts",{"_index":1172,"title":{},"body":{"injectables/MenuService.html":{},"coverage.html":{}}}],["src/app/services/menu.service.ts:16",{"_index":1182,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/services/menu.service.ts:20",{"_index":1184,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/services/menu.service.ts:24",{"_index":1185,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/services/menu.service.ts:28",{"_index":1183,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/services/menu.service.ts:32",{"_index":1175,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/services/menu.service.ts:47",{"_index":1180,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/services/multimedia.service.ts",{"_index":1228,"title":{},"body":{"injectables/MultimediaService.html":{},"coverage.html":{}}}],["src/app/services/multimedia.service.ts:24",{"_index":1238,"title":{},"body":{"injectables/MultimediaService.html":{}}}],["src/app/services/multimedia.service.ts:9",{"_index":1232,"title":{},"body":{"injectables/MultimediaService.html":{}}}],["src/app/services/news.service.ts",{"_index":1398,"title":{},"body":{"injectables/NewsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/news.service.ts:24",{"_index":1403,"title":{},"body":{"injectables/NewsService.html":{}}}],["src/app/services/news.service.ts:37",{"_index":1408,"title":{},"body":{"injectables/NewsService.html":{}}}],["src/app/services/news.service.ts:53",{"_index":1417,"title":{},"body":{"injectables/NewsService.html":{}}}],["src/app/services/reto.service",{"_index":839,"title":{},"body":{"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["src/app/services/reto.service.ts",{"_index":1839,"title":{},"body":{"coverage.html":{}}}],["src/app/services/user.service",{"_index":840,"title":{},"body":{"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/NewsPagePage.html":{},"components/RankingPage.html":{},"components/RetoComponent.html":{}}}],["src/app/services/user.service.ts",{"_index":1719,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:105",{"_index":1762,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:129",{"_index":1758,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:146",{"_index":1740,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:160",{"_index":1750,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:172",{"_index":1737,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:19",{"_index":1766,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:24",{"_index":1767,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:29",{"_index":1764,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:34",{"_index":1763,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:39",{"_index":1734,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:50",{"_index":1756,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:54",{"_index":1748,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:62",{"_index":1749,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:73",{"_index":1743,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:88",{"_index":1746,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:96",{"_index":1760,"title":{},"body":{"injectables/UserService.html":{}}}],["src/environments/environment",{"_index":1420,"title":{},"body":{"injectables/NewsService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1844,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1845,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standard",{"_index":1017,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["standariza",{"_index":869,"title":{},"body":{"components/HeaderComponent.html":{}}}],["start",{"_index":1559,"title":{},"body":{"components/PerfilPage.html":{}}}],["state",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{}}}],["status",{"_index":479,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/NewsResponse.html":{},"interfaces/Source.html":{}}}],["storagebucket",{"_index":1920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":63,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"interfaces/NewsResponse.html":{},"injectables/NewsService.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Source.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{}}}],["strong",{"_index":922,"title":{},"body":{"components/HomePage.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["su",{"_index":287,"title":{},"body":{"components/AdminPage.html":{},"components/HomePage.html":{},"injectables/MenuService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/PerfilPage.html":{},"injectables/UserService.html":{}}}],["subida",{"_index":783,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/PerfilPage.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["subir",{"_index":1243,"title":{},"body":{"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{}}}],["subirimagen",{"_index":1229,"title":{},"body":{"injectables/MultimediaService.html":{}}}],["subirimagen(file",{"_index":1237,"title":{},"body":{"injectables/MultimediaService.html":{}}}],["subirla",{"_index":1288,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["subscribe",{"_index":1257,"title":{},"body":{"injectables/MultimediaService.html":{}}}],["subscribe((menuopts",{"_index":911,"title":{},"body":{"components/HomePage.html":{},"injectables/MenuService.html":{}}}],["subscribe(articles",{"_index":1379,"title":{},"body":{"components/NewsPagePage.html":{}}}],["success",{"_index":352,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"components/FavoritosPage.html":{},"components/InfoRetoComponent.html":{},"components/MisRetosPage.html":{},"components/PerfilPage.html":{},"components/RetoComponent.html":{}}}],["success/error",{"_index":968,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["successmsg",{"_index":1091,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["sus",{"_index":835,"title":{},"body":{"components/FavoritosPage.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{}}}],["suyos",{"_index":777,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["svg",{"_index":1899,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1033,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["t",{"_index":1409,"title":{},"body":{"injectables/NewsService.html":{}}}],["table",{"_index":1847,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1846,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":588,"title":{},"body":{"injectables/AuthService.html":{}}}],["take(1",{"_index":624,"title":{},"body":{"injectables/AuthService.html":{}}}],["tambien",{"_index":290,"title":{},"body":{"components/AdminPage.html":{},"components/NewRetoComponent.html":{}}}],["también",{"_index":581,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistroComponent.html":{}}}],["tap",{"_index":590,"title":{},"body":{"injectables/AuthService.html":{}}}],["tap(loggedin",{"_index":627,"title":{},"body":{"injectables/AuthService.html":{}}}],["task",{"_index":1251,"title":{},"body":{"injectables/MultimediaService.html":{}}}],["task.snapshotchanges().pipe",{"_index":1253,"title":{},"body":{"injectables/MultimediaService.html":{}}}],["te",{"_index":1015,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/PerfilPage.html":{},"components/RetoComponent.html":{}}}],["telescope",{"_index":1035,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["telescopio",{"_index":770,"title":{},"body":{"interfaces/Favorito.html":{},"components/InfoRetoComponent.html":{},"interfaces/MenuOpts.html":{},"components/NewRetoComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["tener",{"_index":690,"title":{},"body":{"interfaces/Error.html":{}}}],["terminal",{"_index":988,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["text",{"_index":117,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{},"components/RetoComponent.html":{}}}],["texto",{"_index":1120,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilPage.html":{}}}],["then((docref",{"_index":598,"title":{},"body":{"injectables/AuthService.html":{}}}],["then((response",{"_index":1658,"title":{},"body":{"components/RegistroComponent.html":{}}}],["this.actionsheet",{"_index":1544,"title":{},"body":{"components/PerfilPage.html":{}}}],["this.actionsheet.present",{"_index":1571,"title":{},"body":{"components/PerfilPage.html":{}}}],["this.actionsheetctrl.create",{"_index":1461,"title":{},"body":{"components/NoticiaComponent.html":{},"components/PerfilPage.html":{}}}],["this.alertctrl.create",{"_index":1573,"title":{},"body":{"components/PerfilPage.html":{}}}],["this.angularfireauth.authstate.pipe",{"_index":623,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.angularfireauth.createuserwithemailandpassword(usuario.email",{"_index":608,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.angularfireauth.currentuser",{"_index":630,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.angularfireauth.onauthstatechanged(user",{"_index":634,"title":{},"body":{"injectables/AuthService.html":{},"components/HomePage.html":{},"injectables/MenuService.html":{},"components/PerfilPage.html":{}}}],["this.angularfireauth.signinwithemailandpassword(value.email",{"_index":617,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.angularfireauth.signout",{"_index":619,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.angularfireauth.user",{"_index":622,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.article.description",{"_index":1475,"title":{},"body":{"components/NoticiaComponent.html":{}}}],["this.article.title",{"_index":1473,"title":{},"body":{"components/NoticiaComponent.html":{}}}],["this.article.url",{"_index":1474,"title":{},"body":{"components/NoticiaComponent.html":{}}}],["this.articles.push(...articles",{"_index":1380,"title":{},"body":{"components/NewsPagePage.html":{}}}],["this.authsrv.signup(value",{"_index":1657,"title":{},"body":{"components/RegistroComponent.html":{}}}],["this.authsvc.getuseremail().then(email",{"_index":335,"title":{},"body":{"components/AdminPage.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/RankingPage.html":{}}}],["this.authsvc.initauthstatelistener",{"_index":1541,"title":{},"body":{"components/PerfilPage.html":{},"components/RetoComponent.html":{}}}],["this.authsvc.passchange(password1",{"_index":1593,"title":{},"body":{"components/PerfilPage.html":{}}}],["this.authsvc.signin(value",{"_index":1140,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authsvc.signout",{"_index":1543,"title":{},"body":{"components/PerfilPage.html":{}}}],["this.authsvc.useremail",{"_index":1542,"title":{},"body":{"components/PerfilPage.html":{},"components/RetoComponent.html":{}}}],["this.avisossvc.presenttoast('cambio",{"_index":350,"title":{},"body":{"components/AdminPage.html":{},"components/MisRetosPage.html":{}}}],["this.avisossvc.presenttoast('contraseña",{"_index":1595,"title":{},"body":{"components/PerfilPage.html":{}}}],["this.avisossvc.presenttoast('debes",{"_index":1708,"title":{},"body":{"components/RetoComponent.html":{}}}],["this.avisossvc.presenttoast('error",{"_index":355,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"components/FavoritosPage.html":{},"components/InfoRetoComponent.html":{},"components/MisRetosPage.html":{},"components/RetoComponent.html":{}}}],["this.avisossvc.presenttoast('favorito",{"_index":858,"title":{},"body":{"components/FavoritosPage.html":{},"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["this.avisossvc.presenttoast('las",{"_index":1591,"title":{},"body":{"components/PerfilPage.html":{}}}],["this.avisossvc.presenttoast('no",{"_index":602,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.avisossvc.presenttoast('reto",{"_index":1065,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/MisRetosPage.html":{},"components/RetoComponent.html":{}}}],["this.avisossvc.presenttoast('usuario",{"_index":359,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{}}}],["this.checklogin",{"_index":631,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.checkretoconseguido(this.reto.id",{"_index":1032,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["this.checkretofavorito(this.reto.id",{"_index":1031,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["this.email",{"_index":1027,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/MisRetosPage.html":{},"components/NewsPagePage.html":{}}}],["this.enablefav",{"_index":1191,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.errormsg",{"_index":1659,"title":{},"body":{"components/RegistroComponent.html":{}}}],["this.esfavorito",{"_index":1051,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["this.esretoconseguido",{"_index":1060,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["this.executequery(`/top",{"_index":1430,"title":{},"body":{"injectables/NewsService.html":{}}}],["this.favoritos",{"_index":842,"title":{},"body":{"components/FavoritosPage.html":{}}}],["this.favoritos[index",{"_index":852,"title":{},"body":{"components/FavoritosPage.html":{}}}],["this.fbuilder.group",{"_index":1131,"title":{},"body":{"components/LoginComponent.html":{},"components/NewRetoComponent.html":{},"components/RegistroComponent.html":{}}}],["this.firestorage.ref(filepath",{"_index":1250,"title":{},"body":{"injectables/MultimediaService.html":{}}}],["this.firestore.collection('retosconseguidos",{"_index":1788,"title":{},"body":{"injectables/UserService.html":{}}}],["this.firestore.collection('usuarios",{"_index":1774,"title":{},"body":{"injectables/UserService.html":{}}}],["this.firestore.collection('usuarios').add",{"_index":595,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.firestore.collection('usuarios').doc(id).delete",{"_index":636,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.firestore.collection('usuarios').doc(id).update",{"_index":1785,"title":{},"body":{"injectables/UserService.html":{}}}],["this.firestore.collection('usuarios').valuechanges",{"_index":1772,"title":{},"body":{"injectables/UserService.html":{}}}],["this.firestore.doc(docref).update",{"_index":599,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getuserbyid(id).subscribe(usuario",{"_index":1782,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get('/assets/data/menu.json",{"_index":1795,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`${apiurl}${endpoint",{"_index":1427,"title":{},"body":{"injectables/NewsService.html":{}}}],["this.iab.create(this.article.url",{"_index":1471,"title":{},"body":{"components/NoticiaComponent.html":{}}}],["this.iab.create(url",{"_index":87,"title":{},"body":{"components/AboutPage.html":{}}}],["this.idfavorito",{"_index":857,"title":{},"body":{"components/FavoritosPage.html":{}}}],["this.iduser",{"_index":844,"title":{},"body":{"components/FavoritosPage.html":{}}}],["this.image",{"_index":1314,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["this.imagensaneada",{"_index":1320,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["this.ionfabvisible",{"_index":907,"title":{},"body":{"components/HomePage.html":{},"injectables/MenuService.html":{}}}],["this.loadnews",{"_index":1377,"title":{},"body":{"components/NewsPagePage.html":{}}}],["this.loginform",{"_index":1130,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value.email",{"_index":1142,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logout",{"_index":1594,"title":{},"body":{"components/PerfilPage.html":{}}}],["this.mensaje",{"_index":1045,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["this.menuopts",{"_index":912,"title":{},"body":{"components/HomePage.html":{},"injectables/MenuService.html":{}}}],["this.menusvc.setmenu",{"_index":334,"title":{},"body":{"components/AdminPage.html":{},"components/FavoritosPage.html":{},"components/MisRetosPage.html":{},"components/NewsPagePage.html":{},"components/RankingPage.html":{}}}],["this.modalctrl.create",{"_index":714,"title":{},"body":{"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/LoginComponent.html":{},"components/MisRetosPage.html":{},"components/RetoComponent.html":{}}}],["this.modalctrl.dismiss",{"_index":1072,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/NewRetoComponent.html":{},"components/RegistroComponent.html":{}}}],["this.multimediasvc.subirimagen(this.imagensaneada",{"_index":1322,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["this.navctrl.navigateroot('/home",{"_index":1141,"title":{},"body":{"components/LoginComponent.html":{},"components/PerfilPage.html":{}}}],["this.newavatar",{"_index":1786,"title":{},"body":{"injectables/UserService.html":{}}}],["this.newretoform",{"_index":1303,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["this.newrol",{"_index":1784,"title":{},"body":{"injectables/UserService.html":{}}}],["this.newssvc.gettopheadlines",{"_index":1378,"title":{},"body":{"components/NewsPagePage.html":{}}}],["this.onsharearticle",{"_index":1465,"title":{},"body":{"components/NoticiaComponent.html":{}}}],["this.page",{"_index":1381,"title":{},"body":{"components/NewsPagePage.html":{}}}],["this.platform.is('android",{"_index":84,"title":{},"body":{"components/AboutPage.html":{},"components/NoticiaComponent.html":{}}}],["this.platform.is('cordova",{"_index":1042,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/NoticiaComponent.html":{},"components/RetoComponent.html":{}}}],["this.registroform",{"_index":1656,"title":{},"body":{"components/RegistroComponent.html":{}}}],["this.reto",{"_index":1029,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/NewRetoComponent.html":{}}}],["this.reto.descripcion",{"_index":1328,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["this.reto.destacado",{"_index":1323,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["this.reto.imagen",{"_index":1325,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["this.reto.retador",{"_index":1324,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["this.reto.titulo",{"_index":1327,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["this.retos",{"_index":341,"title":{},"body":{"components/AdminPage.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/MisRetosPage.html":{}}}],["this.retos[index",{"_index":851,"title":{},"body":{"components/FavoritosPage.html":{}}}],["this.retosvc.addfavorito(retoid",{"_index":1053,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["this.retosvc.addreto(this.reto",{"_index":1329,"title":{},"body":{"components/NewRetoComponent.html":{}}}],["this.retosvc.addretoconseguido(retoid",{"_index":1064,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["this.retosvc.checkfavorito(retoid",{"_index":1049,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["this.retosvc.checkretoconseguido(retoid",{"_index":1059,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["this.retosvc.deletefavorito(fav[0].id_fav",{"_index":1058,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["this.retosvc.deletefavorito(id",{"_index":855,"title":{},"body":{"components/FavoritosPage.html":{}}}],["this.retosvc.deletereto(id",{"_index":362,"title":{},"body":{"components/AdminPage.html":{},"components/MisRetosPage.html":{}}}],["this.retosvc.deleteretoconseguido(retoconseguido[0].id_reto_conseguido",{"_index":1071,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["this.retosvc.getfavorito(retoid",{"_index":1056,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["this.retosvc.getfavoritosbyuser(this.useremail).subscribe(favoritos",{"_index":847,"title":{},"body":{"components/FavoritosPage.html":{}}}],["this.retosvc.getretoconseguido(retoid",{"_index":1069,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["this.retosvc.getretos().subscribe(retos",{"_index":340,"title":{},"body":{"components/AdminPage.html":{}}}],["this.retosvc.getretosactivos().subscribe(retos",{"_index":913,"title":{},"body":{"components/HomePage.html":{}}}],["this.retosvc.getretosbyid(this.id).subscribe(retos",{"_index":1028,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["this.retosvc.getretosbyuser(email).subscribe(retos",{"_index":1219,"title":{},"body":{"components/MisRetosPage.html":{}}}],["this.retosvc.updateestadoreto(id",{"_index":357,"title":{},"body":{"components/AdminPage.html":{},"components/MisRetosPage.html":{}}}],["this.router.navigate(['/login",{"_index":629,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigate([url",{"_index":1171,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.router.navigatebyurl('/home",{"_index":1578,"title":{},"body":{"components/PerfilPage.html":{}}}],["this.router.navigatebyurl('home",{"_index":621,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(foto",{"_index":1315,"title":{},"body":{"components/NewRetoComponent.html":{},"components/PerfilPage.html":{}}}],["this.segmento",{"_index":345,"title":{},"body":{"components/AdminPage.html":{}}}],["this.setavatarcamara",{"_index":1546,"title":{},"body":{"components/PerfilPage.html":{}}}],["this.setavatargallery",{"_index":1547,"title":{},"body":{"components/PerfilPage.html":{}}}],["this.socialsharing.share",{"_index":1472,"title":{},"body":{"components/NoticiaComponent.html":{}}}],["this.socialsharing.share(this.mensaje",{"_index":1043,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["this.successmsg",{"_index":1660,"title":{},"body":{"components/RegistroComponent.html":{}}}],["this.toastctrl.create",{"_index":655,"title":{},"body":{"injectables/AvisosService.html":{}}}],["this.useremail",{"_index":336,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"injectables/MenuService.html":{},"components/NewRetoComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RetoComponent.html":{}}}],["this.useremail.asobservable",{"_index":1771,"title":{},"body":{"injectables/UserService.html":{}}}],["this.useremail.next(email",{"_index":1770,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usersvc.deleteuser(id",{"_index":358,"title":{},"body":{"components/AdminPage.html":{}}}],["this.usersvc.deleteuser(this.usuariologado.id",{"_index":1577,"title":{},"body":{"components/PerfilPage.html":{}}}],["this.usersvc.getmenuopts(['all",{"_index":910,"title":{},"body":{"components/HomePage.html":{},"injectables/MenuService.html":{}}}],["this.usersvc.gettotalpuntosbyuser(this.email).subscribe(totalpuntos",{"_index":1066,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["this.usersvc.gettotalpuntosbyuser(this.useremail).subscribe(totalpuntos",{"_index":1710,"title":{},"body":{"components/RetoComponent.html":{}}}],["this.usersvc.getuserbyemail(email).subscribe(usuario",{"_index":843,"title":{},"body":{"components/FavoritosPage.html":{},"components/HomePage.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"components/NewsPagePage.html":{},"components/PerfilPage.html":{}}}],["this.usersvc.getuserbyemail(this.useremail).subscribe(usuario",{"_index":338,"title":{},"body":{"components/AdminPage.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{}}}],["this.usersvc.getuserbyemail(value.email).subscribe(resultado",{"_index":614,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersvc.getuseremail().subscribe(email",{"_index":1538,"title":{},"body":{"components/PerfilPage.html":{},"components/RetoComponent.html":{}}}],["this.usersvc.getusers().subscribe(users",{"_index":342,"title":{},"body":{"components/AdminPage.html":{}}}],["this.usersvc.getusuariosporpuntos().subscribe(usuarios",{"_index":1627,"title":{},"body":{"components/RankingPage.html":{}}}],["this.usersvc.setuseremail(useremail",{"_index":1143,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.usersvc.updateuseravatar(this.usuariologado.id",{"_index":1604,"title":{},"body":{"components/PerfilPage.html":{}}}],["this.usersvc.updateuserpuntos(this.email",{"_index":1067,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["this.usersvc.updateuserpuntos(this.useremail",{"_index":1711,"title":{},"body":{"components/RetoComponent.html":{}}}],["this.usersvc.updateuserrol(id",{"_index":349,"title":{},"body":{"components/AdminPage.html":{}}}],["this.usuario",{"_index":339,"title":{},"body":{"components/AdminPage.html":{},"components/FavoritosPage.html":{},"components/MisRetosPage.html":{},"components/NewsPagePage.html":{},"components/RankingPage.html":{},"injectables/UserService.html":{}}}],["this.usuario.avatar",{"_index":1787,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usuario.id",{"_index":845,"title":{},"body":{"components/FavoritosPage.html":{}}}],["this.usuario.rol",{"_index":1783,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usuariologado",{"_index":615,"title":{},"body":{"injectables/AuthService.html":{},"components/HomePage.html":{},"injectables/MenuService.html":{},"components/PerfilPage.html":{}}}],["this.usuariologado.email",{"_index":1188,"title":{},"body":{"injectables/MenuService.html":{},"components/PerfilPage.html":{}}}],["this.usuariologado.id",{"_index":1603,"title":{},"body":{"components/PerfilPage.html":{}}}],["this.usuariologado.rol",{"_index":909,"title":{},"body":{"components/HomePage.html":{},"injectables/MenuService.html":{}}}],["this.usuarios",{"_index":343,"title":{},"body":{"components/AdminPage.html":{},"components/RankingPage.html":{}}}],["tiene",{"_index":68,"title":{},"body":{"components/AboutPage.html":{},"injectables/MultimediaService.html":{},"components/RetoComponent.html":{}}}],["tienen",{"_index":804,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["tipo",{"_index":37,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"interfaces/Error.html":{},"components/FabLoginComponent.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"interfaces/NewsResponse.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"components/RetosComponent.html":{},"interfaces/Source.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["title",{"_index":463,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/NewsResponse.html":{},"components/NoticiaComponent.html":{},"interfaces/Source.html":{}}}],["titulo",{"_index":474,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/Favorito.html":{},"components/HeaderComponent.html":{},"components/InfoRetoComponent.html":{},"interfaces/MenuOpts.html":{},"components/NewRetoComponent.html":{},"interfaces/NewsResponse.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Source.html":{},"interfaces/Usuario.html":{}}}],["toast",{"_index":258,"title":{},"body":{"components/AdminPage.html":{},"injectables/AvisosService.html":{},"components/FavoritosPage.html":{},"components/InfoRetoComponent.html":{},"components/MisRetosPage.html":{},"components/PerfilPage.html":{},"components/RetoComponent.html":{}}}],["toast.present",{"_index":659,"title":{},"body":{"injectables/AvisosService.html":{}}}],["toastcontroller",{"_index":641,"title":{},"body":{"injectables/AvisosService.html":{}}}],["toastctrl",{"_index":643,"title":{},"body":{"injectables/AvisosService.html":{}}}],["toasts",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["tocar",{"_index":379,"title":{},"body":{"components/AppComponent.html":{}}}],["toda",{"_index":942,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["todas",{"_index":871,"title":{},"body":{"components/HeaderComponent.html":{}}}],["todavia",{"_index":780,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["todo",{"_index":1178,"title":{},"body":{"injectables/MenuService.html":{}}}],["todos",{"_index":292,"title":{},"body":{"components/AdminPage.html":{},"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{}}}],["toolbar",{"_index":746,"title":{},"body":{"components/FabLoginComponent.html":{}}}],["top",{"_index":919,"title":{},"body":{"components/HomePage.html":{},"components/InfoRetoComponent.html":{}}}],["total",{"_index":1741,"title":{},"body":{"injectables/UserService.html":{}}}],["totales",{"_index":480,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/NewsResponse.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Source.html":{},"interfaces/Usuario.html":{}}}],["totalpuntos",{"_index":1068,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["totalresults",{"_index":481,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/NewsResponse.html":{},"interfaces/Source.html":{}}}],["transform",{"_index":920,"title":{},"body":{"components/HomePage.html":{}}}],["translatey",{"_index":921,"title":{},"body":{"components/HomePage.html":{}}}],["translucent",{"_index":1570,"title":{},"body":{"components/PerfilPage.html":{}}}],["traves",{"_index":50,"title":{},"body":{"components/AboutPage.html":{},"injectables/AuthService.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"injectables/MenuService.html":{},"components/PerfilPage.html":{},"components/RetoComponent.html":{},"injectables/UserService.html":{}}}],["través",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{},"components/InfoRetoComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NoticiaComponent.html":{},"components/RegistroComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["true",{"_index":893,"title":{},"body":{"components/HomePage.html":{},"injectables/MenuService.html":{},"components/NewRetoComponent.html":{},"components/PerfilPage.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":348,"title":{},"body":{"components/AdminPage.html":{},"components/FavoritosPage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/RetoComponent.html":{}}}],["tslib",{"_index":1887,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":1580,"title":{},"body":{"components/PerfilPage.html":{},"modules.html":{}}}],["tura",{"_index":800,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["tutor",{"_index":102,"title":{},"body":{"components/AboutPage.html":{}}}],["twitter",{"_index":128,"title":{},"body":{"components/AboutPage.html":{}}}],["type",{"_index":493,"title":{},"body":{"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/Error.html":{},"components/PerfilPage.html":{}}}],["típicos",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["título",{"_index":878,"title":{},"body":{"components/HeaderComponent.html":{},"components/NewRetoComponent.html":{}}}],["u",{"_index":794,"title":{},"body":{"interfaces/Favorito.html":{},"components/HomePage.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["un",{"_index":271,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"interfaces/Error.html":{},"components/FabLoginComponent.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{},"components/RetoComponent.html":{},"injectables/UserService.html":{}}}],["una",{"_index":484,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/Error.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"injectables/MultimediaService.html":{},"components/NewRetoComponent.html":{},"interfaces/NewsResponse.html":{},"components/PerfilPage.html":{},"interfaces/Source.html":{},"injectables/UserService.html":{}}}],["unas",{"_index":792,"title":{},"body":{"interfaces/Favorito.html":{},"interfaces/MenuOpts.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Usuario.html":{}}}],["unknown",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{},"components/FabLoginComponent.html":{},"components/LoginComponent.html":{}}}],["uno",{"_index":948,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["updateuseravatar",{"_index":1730,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuseravatar(id",{"_index":1757,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserpuntos",{"_index":1731,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserpuntos(user",{"_index":1759,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserrol",{"_index":1732,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserrol(id",{"_index":1761,"title":{},"body":{"injectables/UserService.html":{}}}],["url",{"_index":66,"title":{},"body":{"components/AboutPage.html":{},"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/Favorito.html":{},"components/InfoRetoComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"components/NewRetoComponent.html":{},"interfaces/NewsResponse.html":{},"injectables/NewsService.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Source.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{},"miscellaneous/variables.html":{}}}],["urltoimage",{"_index":464,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/NewsResponse.html":{},"interfaces/Source.html":{}}}],["urltree",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{}}}],["usa",{"_index":488,"title":{},"body":{"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"interfaces/Favorito.html":{},"components/HomePage.html":{},"interfaces/MenuOpts.html":{},"interfaces/NewsResponse.html":{},"interfaces/Reto.html":{},"interfaces/RetoConseguido.html":{},"interfaces/Source.html":{},"interfaces/Usuario.html":{}}}],["usado",{"_index":1360,"title":{},"body":{"components/NewsPagePage.html":{},"components/RetoComponent.html":{},"injectables/UserService.html":{}}}],["usar",{"_index":973,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{}}}],["useclass",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":626,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Favorito.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/PerfilPage.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{}}}],["user).subscribe(existe",{"_index":1050,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["user.email",{"_index":633,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.service",{"_index":592,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MenuService.html":{}}}],["user.updatepassword(nuevacontraseña",{"_index":635,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdetails",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["useremail",{"_index":231,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"injectables/MenuService.html":{},"components/NewRetoComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RetoComponent.html":{},"injectables/UserService.html":{}}}],["users",{"_index":344,"title":{},"body":{"components/AdminPage.html":{}}}],["userservice",{"_index":240,"title":{"injectables/UserService.html":{}},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"components/NewsPagePage.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RetoComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usersvc",{"_index":249,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"components/NewsPagePage.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RetoComponent.html":{}}}],["using",{"_index":1935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uso",{"_index":1667,"title":{},"body":{"components/RetoComponent.html":{}}}],["usuaio",{"_index":280,"title":{},"body":{"components/AdminPage.html":{}}}],["usuario",{"_index":232,"title":{"interfaces/Usuario.html":{}},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"interfaces/Favorito.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"interfaces/MenuOpts.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"interfaces/Reto.html":{},"components/RetoComponent.html":{},"interfaces/RetoConseguido.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{},"coverage.html":{}}}],["usuario.email",{"_index":367,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{}}}],["usuario.nombre",{"_index":365,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"components/RankingPage.html":{}}}],["usuario.password",{"_index":609,"title":{},"body":{"injectables/AuthService.html":{}}}],["usuario.puntos",{"_index":368,"title":{},"body":{"components/AdminPage.html":{},"components/RankingPage.html":{}}}],["usuario.rol",{"_index":366,"title":{},"body":{"components/AdminPage.html":{}}}],["usuariologado",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{},"components/HomePage.html":{},"injectables/MenuService.html":{},"components/PerfilPage.html":{},"components/RetoComponent.html":{}}}],["usuariologado.nombre",{"_index":1607,"title":{},"body":{"components/PerfilPage.html":{}}}],["usuarios",{"_index":233,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"components/HomePage.html":{},"injectables/MenuService.html":{},"components/RankingPage.html":{},"injectables/UserService.html":{},"interfaces/Usuario.html":{}}}],["usuarios[0",{"_index":1779,"title":{},"body":{"injectables/UserService.html":{}}}],["usuarioscollection",{"_index":1722,"title":{},"body":{"injectables/UserService.html":{}}}],["utilizando",{"_index":1556,"title":{},"body":{"components/PerfilPage.html":{}}}],["va",{"_index":1166,"title":{},"body":{"components/MenuComponent.html":{},"injectables/MultimediaService.html":{},"components/PerfilPage.html":{}}}],["validadores",{"_index":1114,"title":{},"body":{"components/LoginComponent.html":{},"components/NewRetoComponent.html":{}}}],["validando",{"_index":1645,"title":{},"body":{"components/RegistroComponent.html":{}}}],["validators",{"_index":1128,"title":{},"body":{"components/LoginComponent.html":{},"components/NewRetoComponent.html":{},"components/RegistroComponent.html":{}}}],["validators.compose",{"_index":1132,"title":{},"body":{"components/LoginComponent.html":{},"components/NewRetoComponent.html":{},"components/RegistroComponent.html":{}}}],["validators.minlength(6",{"_index":1139,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["validators.pattern('^[a",{"_index":1134,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["validators.required",{"_index":1133,"title":{},"body":{"components/LoginComponent.html":{},"components/NewRetoComponent.html":{},"components/RegistroComponent.html":{}}}],["valido",{"_index":687,"title":{},"body":{"interfaces/Error.html":{}}}],["valor",{"_index":313,"title":{},"body":{"components/AdminPage.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"components/NewsPagePage.html":{},"components/NoticiasComponent.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["valores",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NewRetoComponent.html":{},"components/PerfilPage.html":{},"components/RegistroComponent.html":{}}}],["value",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NewRetoComponent.html":{},"components/RegistroComponent.html":{}}}],["value.password",{"_index":618,"title":{},"body":{"injectables/AuthService.html":{}}}],["valuechanges",{"_index":1777,"title":{},"body":{"injectables/UserService.html":{}}}],["var",{"_index":137,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"components/RetosComponent.html":{}}}],["variable",{"_index":306,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"components/FavoritosPage.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiasComponent.html":{},"components/PerfilPage.html":{},"components/RetoComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["variables",{"_index":1414,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/NewsService.html":{},"miscellaneous/variables.html":{}}}],["veces",{"_index":1517,"title":{},"body":{"components/PerfilPage.html":{}}}],["ventana",{"_index":712,"title":{},"body":{"components/FabLoginComponent.html":{}}}],["verde",{"_index":1676,"title":{},"body":{"components/RetoComponent.html":{}}}],["verdetalle",{"_index":811,"title":{},"body":{"components/FavoritosPage.html":{},"components/MisRetosPage.html":{},"components/RetoComponent.html":{}}}],["verdetalle(id",{"_index":826,"title":{},"body":{"components/FavoritosPage.html":{},"components/MisRetosPage.html":{},"components/RetoComponent.html":{}}}],["version",{"_index":1903,"title":{},"body":{"properties.html":{}}}],["vista",{"_index":1118,"title":{},"body":{"components/LoginComponent.html":{}}}],["void",{"_index":61,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"injectables/AuthService.html":{},"components/FabLoginComponent.html":{},"components/FavoritosPage.html":{},"components/HeaderComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"components/NewsPagePage.html":{},"components/NoticiaComponent.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"injectables/UserService.html":{}}}],["volver",{"_index":983,"title":{},"body":{"components/InfoRetoComponent.html":{}}}],["warning",{"_index":1041,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/RetoComponent.html":{}}}],["web",{"_index":971,"title":{},"body":{"components/InfoRetoComponent.html":{},"components/NoticiaComponent.html":{}}}],["white",{"_index":747,"title":{},"body":{"components/FabLoginComponent.html":{}}}],["width",{"_index":123,"title":{},"body":{"components/AboutPage.html":{},"components/InfoRetoComponent.html":{}}}],["y",{"_index":293,"title":{},"body":{"components/AdminPage.html":{},"interfaces/Article.html":{},"interfaces/ArticlesByCategoryAndPage.html":{},"injectables/AuthService.html":{},"injectables/AvisosService.html":{},"components/FabLoginComponent.html":{},"components/HomePage.html":{},"components/InfoRetoComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuService.html":{},"components/MisRetosPage.html":{},"components/NewRetoComponent.html":{},"interfaces/NewsResponse.html":{},"injectables/NewsService.html":{},"components/PerfilPage.html":{},"components/RankingPage.html":{},"components/RegistroComponent.html":{},"components/RetoComponent.html":{},"interfaces/Source.html":{}}}],["ya",{"_index":1353,"title":{},"body":{"components/NewsPagePage.html":{},"components/PerfilPage.html":{}}}],["z0",{"_index":1136,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["za",{"_index":1135,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["zone.js",{"_index":1889,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutPage.html":{"url":"components/AboutPage.html","title":"component - AboutPage","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  AboutPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/pages/about/about.page.ts\n\n\n\n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                ./about.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openURL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(iab: InAppBrowser, platform: Platform)\n                    \n                \n                        \n                            \n                                Definido en src/app/pages/about/about.page.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor de clase\n\n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                                    Descripción\n                                            \n                                        \n                                        \n                                                \n                                                        iab\n                                                  \n                                                        \n                                                                    InAppBrowser\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Componente para mostrar los enlaces a perfiles en el navegador integrado a traves de InAppBrowser\n\n                                                        \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Componente para controlar la plataforma donde se ejecuta la app\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/pages/about/about.page.ts:25\n                \n            \n\n\n            \n                \n                    Metodo de inicio\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openURL\n                        \n                    \n                \n            \n            \n                \nopenURL(url: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/pages/about/about.page.ts:33\n                \n            \n\n\n            \n                \n                    Abre los perfiles\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL que se tiene que abrir\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { InAppBrowser } from '@awesome-cordova-plugins/in-app-browser/ngx';\nimport { Platform } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.page.html',\n  styleUrls: ['./about.page.scss'],\n})\nexport class AboutPage implements OnInit {\n\n/**\n * Constructor de clase\n * @param iab Componente para mostrar los enlaces a perfiles en el navegador integrado a traves de InAppBrowser\n * @param platform Componente para controlar la plataforma donde se ejecuta la app\n */\n  constructor(private iab: InAppBrowser,\n    private platform: Platform) { }\n\n    /**\n     * Metodo de inicio\n     */\n  ngOnInit() {\n  }\n\n  /**\n   * Abre los perfiles \n   * @param url URL que se tiene que abrir\n   * @returns \n   */\n  openURL(url: string) {\n\n    if (this.platform.is('android')) {\n      const browser = this.iab.create(url);\n      browser.show();\n      return;\n    }\n\n  }\n\n\n}\n\n    \n\n    \n        \n\n   \n    \n        \n            \n                \n            \n        \n        \n\n            \n                \n                    Aplicación desarrollada como Proyecto de Fin de Curso.\n                \n                \n                    Curso: 3DAMN\n                \n                \n                    Alumno: Juan Manuel Pérez López\n                \n                \n                    Tutor: Manuel Santa Ana Barry\n                \n                \n                    Enlace proyecto GitHub: AstroRetos\n                \n                \n                    Enlace Documentación:\n                \n\n            \n\n        \n        \n            \n                \n            \n            \n                \n            \n            \n                \n            \n        \n        \n            \n                \n                    Contacto: \n                    elwe.isilra@gmail.com\n                  \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./about.page.scss\n                \n                ion-icon {\n    font-size: 72px;\n    text-align: center;\n    \n}\n\nion-img {\n    height: 150px;\n    width: 150px;\n    margin: 0 auto;\n}\n\n.color-twitter {\n    color: #00acee;\n}\n\n.color-linkedin {\n    color: #0e76a8;\n}\n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                       Aplicación desarrollada como Proyecto de Fin de Curso.                                                    Curso: 3DAMN                                                    Alumno: Juan Manuel Pérez López                                                    Tutor: Manuel Santa Ana Barry                                                    Enlace proyecto GitHub: AstroRetos                                                    Enlace Documentación:                                                                                                                                                                                                                                    Contacto:                     elwe.isilra@gmail.com                                          '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FabLoginComponent', 'selector': 'app-fab-login'},{'name': 'FavoritosPage', 'selector': 'app-favoritos'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InfoRetoComponent', 'selector': 'app-info-reto'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MisRetosPage', 'selector': 'app-mis-retos'},{'name': 'NewRetoComponent', 'selector': 'app-new-reto'},{'name': 'NewsPagePage', 'selector': 'app-news-page'},{'name': 'NoticiaComponent', 'selector': 'app-noticia'},{'name': 'NoticiasComponent', 'selector': 'app-noticias'},{'name': 'PerfilPage', 'selector': 'app-perfil'},{'name': 'RankingPage', 'selector': 'app-ranking'},{'name': 'RegistroComponent', 'selector': 'app-registro'},{'name': 'RetoComponent', 'selector': 'app-reto'},{'name': 'RetosComponent', 'selector': 'app-retos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/AboutPageModule.html":{"url":"modules/AboutPageModule.html","title":"module - AboutPageModule","body":"\n                   \n\n\n\n\n    Módulos\n    AboutPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\ncluster_AboutPageModule_imports\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\nAboutPageRoutingModule\n\nAboutPageRoutingModule\n\nAboutPageModule -->\n\nAboutPageRoutingModule->AboutPageModule\n\n\n\n\n\n\n    \n    \n    \n        Ampliar\n        Restablecer\n        Alejar\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/app/pages/about/about.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declaraciones\n                    \n                        \n                            AboutPage\n                        \n                    \n                \n                \n                    Importa\n                    \n                        \n                            AboutPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AboutPageRoutingModule } from './about-routing.module';\n\nimport { AboutPage } from './about.page';\n\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AboutPageRoutingModule,\n    ComponentsModule\n  ],\n  declarations: [AboutPage]\n})\nexport class AboutPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/AboutPageRoutingModule.html":{"url":"modules/AboutPageRoutingModule.html","title":"module - AboutPageRoutingModule","body":"\n                   \n\n\n\n\n    Módulos\n    AboutPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/app/pages/about/about-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AboutPage } from './about.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AboutPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AboutPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/AdminPage.html":{"url":"components/AdminPage.html","title":"component - AdminPage","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  AdminPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/pages/admin/admin.page.ts\n\n\n\n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n            \n                styleUrls\n                ./admin.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./admin.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                menuSvc\n                            \n                            \n                                puntos\n                            \n                            \n                                retoActivo\n                            \n                            \n                                retos\n                            \n                            \n                                segmento\n                            \n                            \n                                    Public\n                                userEmail\n                            \n                            \n                                usuario\n                            \n                            \n                                usuarios\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                cambiarEstado\n                            \n                            \n                                cambiarRol\n                            \n                            \n                                deleteReto\n                            \n                            \n                                deleteUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                segmentChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userSvc: UserService, menuSvc: MenuService, authSvc: AuthService, avisosSvc: AvisosService, retoSvc: RetoService)\n                    \n                \n                        \n                            \n                                Definido en src/app/pages/admin/admin.page.ts:49\n                            \n                        \n\n                \n                    \n                            Constructor de clase\n\n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                                    Descripción\n                                            \n                                        \n                                        \n                                                \n                                                        userSvc\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para el manejo de datos de usuario\n\n                                                        \n                                                \n                                                \n                                                        menuSvc\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para la personalización del Menu\n\n                                                        \n                                                \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para la gestion de la Autenticacion\n\n                                                        \n                                                \n                                                \n                                                        avisosSvc\n                                                  \n                                                        \n                                                                        AvisosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para controlar avisos con el Toast\n\n                                                        \n                                                \n                                                \n                                                        retoSvc\n                                                  \n                                                        \n                                                                        RetoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para el manejo de los Retos\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        cambiarEstado\n                        \n                    \n                \n            \n            \n                \ncambiarEstado(id: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/pages/admin/admin.page.ts:128\n                \n            \n\n\n            \n                \n                    Metodo que cambia el estado del reto: activoinactivo\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id del Reto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cambiarRol\n                        \n                    \n                \n            \n            \n                \ncambiarRol(id: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/pages/admin/admin.page.ts:112\n                \n            \n\n\n            \n                \n                    Método para cambiar el Rol de un usuario concreto RetadorAdministrador\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id del usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteReto\n                        \n                    \n                \n            \n            \n                \ndeleteReto(id: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/pages/admin/admin.page.ts:160\n                \n            \n\n\n            \n                \n                    Metodo que elimina un reto\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id del Reto a eliminar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(id: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/pages/admin/admin.page.ts:145\n                \n            \n\n\n            \n                \n                    Metodo que elimina un usuaio\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Ide del usuario a borrar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/pages/admin/admin.page.ts:74\n                \n            \n\n\n            \n                \n                    Metodo de inicio\nComprueba el usuario logado para almacenar los datos de su perfil\nObtiene tambien la lista de todos los retos y usuarios para mostrarlos\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        segmentChanged\n                        \n                    \n                \n            \n            \n                \nsegmentChanged(event: Event)\n                \n            \n\n\n            \n                \n                    Definido en src/app/pages/admin/admin.page.ts:98\n                \n            \n\n\n            \n                \n                    Metodo que realiza el cambio de segmento al recibir un evento\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Evento (cambio de segmento)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        menuSvc\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         MenuService\n\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/admin/admin.page.ts:60\n                        \n                    \n\n            \n                \n                    Servicio para la personalización del Menu\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        puntos\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/admin/admin.page.ts:44\n                        \n                    \n\n            \n                \n                    Variable para guardar los puntos de los usuarios\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        retoActivo\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/admin/admin.page.ts:39\n                        \n                    \n\n            \n                \n                    String para guardar si el reto está activo o no\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        retos\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Reto[]\n\n                    \n                \n                \n                    \n                        Valor por defecto : []\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/admin/admin.page.ts:29\n                        \n                    \n\n            \n                \n                    Array de objetos de tipo Reto\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        segmento\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/admin/admin.page.ts:34\n                        \n                    \n\n            \n                \n                    Variable para manejar la pagina, que será por segmentos\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userEmail\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/admin/admin.page.ts:49\n                        \n                    \n\n            \n                \n                    Para guardar el mail del usuario logado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuario\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Usuario\n\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/admin/admin.page.ts:24\n                        \n                    \n\n            \n                \n                    Objeto de tipo Usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuarios\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Usuario[]\n\n                    \n                \n                \n                    \n                        Valor por defecto : []\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/admin/admin.page.ts:19\n                        \n                    \n\n            \n                \n                    Array de objetos de tipo Usuario\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../services/user.service';\nimport { Reto, Usuario } from '../../interfaces/interfaces';\nimport { AvisosService } from '../../services/avisos.service';\nimport { RetoService } from '../../services/reto.service';\nimport { MenuService } from 'src/app/services/menu.service';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.page.html',\n  styleUrls: ['./admin.page.scss'],\n})\nexport class AdminPage implements OnInit {\n\n  /**\n   * Array de objetos de tipo Usuario\n   */\n  usuarios: Usuario[] = [];\n\n  /**\n   * Objeto de tipo Usuario\n   */\n  usuario: Usuario;\n\n  /**\n   * Array de objetos de tipo Reto\n   */\n  retos: Reto[] = [];\n\n  /**\n   * Variable para manejar la pagina, que será por segmentos\n   */\n  segmento: string;\n\n  /**\n   * String para guardar si el reto está activo o no\n   */\n  retoActivo: string;\n\n  /**\n   * Variable para guardar los puntos de los usuarios\n   */\n  puntos: number;\n\n  /**\n   * Para guardar el mail del usuario logado\n   */\n  public userEmail: string;\n\n  /**\n   * Constructor de clase\n   * @param userSvc Servicio para el manejo de datos de usuario\n   * @param menuSvc Servicio para la personalización del Menu\n   * @param authSvc Servicio para la gestion de la Autenticacion\n   * @param avisosSvc Servicio para controlar avisos con el Toast\n   * @param retoSvc Servicio para el manejo de los Retos\n   */\n  constructor(private userSvc: UserService,\n    public menuSvc: MenuService,\n    private authSvc: AuthService,\n    private avisosSvc: AvisosService,\n    private retoSvc: RetoService) {\n\n    this.menuSvc.setMenu();\n\n  }\n\n  /**\n   * Metodo de inicio\n   * Comprueba el usuario logado para almacenar los datos de su perfil\n   * Obtiene tambien la lista de todos los retos y usuarios para mostrarlos\n   */\n  ngOnInit() {\n\n    this.authSvc.getUserEmail().then(email => {\n      this.userEmail = email;\n      this.userSvc.getUserByEmail(this.userEmail).subscribe(usuario => {\n        this.usuario = usuario;\n      });\n\n    });\n\n    this.retoSvc.getRetos().subscribe(retos => {\n      this.retos = retos;\n    });\n\n    this.userSvc.getUsers().subscribe(users => {\n      this.usuarios = users;\n    });\n\n  }\n\n  /**\n   * Metodo que realiza el cambio de segmento al recibir un evento\n   * @param event Evento (cambio de segmento)\n   */\n  segmentChanged(event: Event) {\n\n    this.segmento = (event as CustomEvent).detail.value;\n\n    this.retoSvc.getRetos().subscribe(retos => {\n      this.retos = retos;\n    });\n\n  }\n\n  /**\n   * Método para cambiar el Rol de un usuario concreto RetadorAdministrador\n   * @param id Id del usuario\n   */\n  cambiarRol(id: string) {\n\n    console.log('cambio rol', id);\n    try {\n      this.userSvc.updateUserRol(id);\n      this.avisosSvc.presentToast('Cambio de Rol Correcto', 'success');\n    } catch (error) {\n      this.avisosSvc.presentToast('Error en el cambio de Rol', 'danger');\n    }\n\n  }\n\n  /**\n   * Metodo que cambia el estado del reto: activoinactivo\n   * @param id Id del Reto\n   */\n  cambiarEstado(id: string) {\n\n    console.log('cambio Estado', id);\n    try {\n      this.retoSvc.updateEstadoReto(id);\n\n      this.avisosSvc.presentToast('Cambio de Estado Correcto', 'success');\n    } catch (error) {\n      this.avisosSvc.presentToast('Error en el cambio de Estado', 'danger');\n    }\n\n  }\n\n  /**\n   * Metodo que elimina un usuaio\n   * @param id Ide del usuario a borrar\n   */\n  deleteUser(id: string) {\n\n    try {\n      //   this.userSvc.deleteUser(id);\n      this.avisosSvc.presentToast('Usuario eliminado correctamente', 'success');\n    } catch (error) {\n      this.avisosSvc.presentToast('Error al eliminar el usuario', 'danger');\n    }\n\n  }\n\n  /**\n   * Metodo que elimina un reto\n   * @param id Id del Reto a eliminar\n   */\n  deleteReto(id: string) {\n\n    try {\n      this.retoSvc.deleteReto(id);\n      this.avisosSvc.presentToast('Usuario eliminado correctamente', 'success');\n    } catch (error) {\n      this.avisosSvc.presentToast('Error al eliminar el usuario', 'danger');\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        Retos\n      \n      \n        Usuarios\n      \n    \n  \n\n\n\n  \n    \n\n      \n        \n          \n            \n          \n          \n            {{ reto.TITULO }} ({{reto.ACTIVO}})\n           \n          \n        \n        \n          \n           \n          \n          \n            \n          \n        \n      \n\n    \n  \n  \n    \n\n      \n        \n          \n            \n          \n          \n            {{ usuario.NOMBRE }}  ({{usuario.ROL}}) \n            {{ usuario.EMAIL }}\n          \n          {{ usuario.PUNTOS }}\n        \n        \n          \n            \n          \n          \n            \n          \n        \n      \n\n    \n  \n\n  \n\n    \n\n    \n                \n                    ./admin.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Retos                    Usuarios                                                                                      {{ reto.TITULO }} ({{reto.ACTIVO}})                                                                                                                                                                                                  {{ usuario.NOMBRE }}  ({{usuario.ROL}})             {{ usuario.EMAIL }}                    {{ usuario.PUNTOS }}                                                                                                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FabLoginComponent', 'selector': 'app-fab-login'},{'name': 'FavoritosPage', 'selector': 'app-favoritos'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InfoRetoComponent', 'selector': 'app-info-reto'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MisRetosPage', 'selector': 'app-mis-retos'},{'name': 'NewRetoComponent', 'selector': 'app-new-reto'},{'name': 'NewsPagePage', 'selector': 'app-news-page'},{'name': 'NoticiaComponent', 'selector': 'app-noticia'},{'name': 'NoticiasComponent', 'selector': 'app-noticias'},{'name': 'PerfilPage', 'selector': 'app-perfil'},{'name': 'RankingPage', 'selector': 'app-ranking'},{'name': 'RegistroComponent', 'selector': 'app-registro'},{'name': 'RetoComponent', 'selector': 'app-reto'},{'name': 'RetosComponent', 'selector': 'app-retos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/AdminPageModule.html":{"url":"modules/AdminPageModule.html","title":"module - AdminPageModule","body":"\n                   \n\n\n\n\n    Módulos\n    AdminPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AdminPageModule\n\n\n\ncluster_AdminPageModule_imports\n\n\n\ncluster_AdminPageModule_declarations\n\n\n\n\nAdminPage\n\nAdminPage\n\n\n\nAdminPageModule\n\nAdminPageModule\n\nAdminPageModule -->\n\nAdminPage->AdminPageModule\n\n\n\n\n\nAdminPageRoutingModule\n\nAdminPageRoutingModule\n\nAdminPageModule -->\n\nAdminPageRoutingModule->AdminPageModule\n\n\n\n\n\n\n    \n    \n    \n        Ampliar\n        Restablecer\n        Alejar\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/app/pages/admin/admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declaraciones\n                    \n                        \n                            AdminPage\n                        \n                    \n                \n                \n                    Importa\n                    \n                        \n                            AdminPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AdminPageRoutingModule } from './admin-routing.module';\n\nimport { AdminPage } from './admin.page';\n\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AdminPageRoutingModule,\n    ComponentsModule\n  ],\n  declarations: [AdminPage]\n})\nexport class AdminPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/AdminPageRoutingModule.html":{"url":"modules/AdminPageRoutingModule.html","title":"module - AdminPageRoutingModule","body":"\n                   \n\n\n\n\n    Módulos\n    AdminPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/app/pages/admin/admin-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AdminPage } from './admin.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AdminPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Descripción\n    \n    \n        Componente principal de la aplicación.\nNO TOCAR!!\n\n    \n\n\n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definido en src/app/app.component.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor del componente\nSE RECOMIENDA NO TOCAR\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Componente principal de la aplicación.\n * \n * NO TOCAR!!\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\n\n\nexport class AppComponent {\n  /**\n * Constructor del componente\n * \n * SE RECOMIENDA NO TOCAR \n */\n  constructor() {\n\n \n     }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FabLoginComponent', 'selector': 'app-fab-login'},{'name': 'FavoritosPage', 'selector': 'app-favoritos'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InfoRetoComponent', 'selector': 'app-info-reto'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MisRetosPage', 'selector': 'app-mis-retos'},{'name': 'NewRetoComponent', 'selector': 'app-new-reto'},{'name': 'NewsPagePage', 'selector': 'app-news-page'},{'name': 'NoticiaComponent', 'selector': 'app-noticia'},{'name': 'NoticiasComponent', 'selector': 'app-noticias'},{'name': 'PerfilPage', 'selector': 'app-perfil'},{'name': 'RankingPage', 'selector': 'app-ranking'},{'name': 'RegistroComponent', 'selector': 'app-registro'},{'name': 'RetoComponent', 'selector': 'app-reto'},{'name': 'RetosComponent', 'selector': 'app-retos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Módulos\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Ampliar\n        Restablecer\n        Alejar\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declaraciones\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Importa\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Arranque\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\n\n//Imports de Firestore\nimport { AngularFireModule } from '@angular/fire/compat';\nimport { AngularFireAuthModule } from '@angular/fire/compat/auth';\nimport { environment } from '../environments/environment';\nimport { AngularFireStorageModule } from '@angular/fire/compat/storage';\n\nimport { SocialSharing } from '@awesome-cordova-plugins/social-sharing/ngx';\nimport { InAppBrowser } from '@awesome-cordova-plugins/in-app-browser/ngx';\n\n\n\n\n\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule,\n    IonicModule.forRoot(),\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebase), \n    AngularFireStorageModule,\n    AngularFireAuthModule,\n    HttpClientModule,\n    \n  ],\n  providers: [{ provide: RouteReuseStrategy, useClass: IonicRouteStrategy }, \n    SocialSharing, \n    InAppBrowser\n    ],    \n\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Módulos\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AuthService } from './services/auth.service';\n\nconst routes: Routes = [\n  {\n    path: 'home',\n    loadChildren: () => \"import('./pages/home/home.module').then(m => m.HomePageModule)\"\n  },\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    loadChildren: () => \"import('./pages/home/home.module').then(m => m.HomePageModule)\"\n  },\n  {\n    path: 'perfil',\n    loadChildren: () => \"import('./pages/perfil/perfil.module').then( m => m.PerfilPageModule)\", canActivate: [AuthService]\n  },\n  {\n    path: 'about',\n    loadChildren: () => \"import('./pages/about/about.module').then( m => m.AboutPageModule)\"\n  },\n  {\n    path: 'admin',\n    loadChildren: () => \"import('./pages/admin/admin.module').then( m => m.AdminPageModule)\", canActivate: [AuthService]\n  },\n  {\n    path: 'ranking',\n    loadChildren: () => \"import('./pages/ranking/ranking.module').then( m => m.RankingPageModule)\"\n  },\n  {\n    path: 'mis-retos',\n    loadChildren: () => \"import('./pages/mis-retos/mis-retos.module').then( m => m.MisRetosPageModule)\", canActivate: [AuthService]\n  },\n  {\n    path: 'favoritos',\n    loadChildren: () => \"import('./pages/favoritos/favoritos.module').then( m => m.FavoritosPageModule)\", canActivate: [AuthService]\n  },\n  {\n    path: 'news-page',\n    loadChildren: () => \"import('./pages/news-page/news-page.module').then( m => m.NewsPagePageModule)\"\n  }\n\n\n\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/Article.html":{"url":"interfaces/Article.html","title":"interface - Article","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Article\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/app/interfaces/news.ts\n        \n\n\n            \n                Descripción\n            \n            \n                Interface para el manejo de las noticias\n\n            \n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Opcional\n                                        \n                                            author\n                                        \n                                \n                                \n                                            Opcional\n                                        \n                                            content\n                                        \n                                \n                                \n                                            Opcional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            publishedAt\n                                        \n                                \n                                \n                                        \n                                            source\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                            Opcional\n                                        \n                                            urlToImage\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        author:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Autor de la noticia\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Contenido completo de la noticia\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Descripcion corta de la noticia\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        publishedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        publishedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Fecha de publicacion\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:         Source\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         Source\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Origen de la noticia\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Titulo de la noticia\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    URL a la noticia completa\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        urlToImage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        urlToImage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    URL a la imagen de la noticia\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface NewsResponse {\n  /**\n   * Estado de la peticion\n   */\n  status:       string;\n\n  /**\n   * Resultados totales de la peticion\n   */\n  totalResults: number;\n\n  /**\n   * Objeto tipo Article para manejar las noticias\n   */\n  articles:     Article[];\n}\n\n/**\n * Interface para el manejo de las noticias\n */\nexport interface Article {\n\n  /**\n   * Origen de la noticia\n   */\n  source:       Source;\n\n  /**\n   * Autor de la noticia\n   */\n  author?:      string;\n\n  /**\n   * Titulo de la noticia\n   */\n  title:        string;\n\n  /**\n   * Descripcion corta de la noticia\n   */\n  description?: string;\n\n  /**\n   * URL a la noticia completa\n   */\n  url:          string;\n\n  /**\n   * URL a la imagen de la noticia\n   */\n  urlToImage?:  string;\n\n  /**\n   * Fecha de publicacion\n   */\n  publishedAt:  string;\n\n  /**\n   * Contenido completo de la noticia\n   */\n  content?:     string;\n}\n\n/**\n * Interface para el manejo del Origen de la noticia\n */\nexport interface Source {\n\n  /**\n   * Identificador del origen\n   */\n  id?:  string;\n\n  /**\n   * Nombre del Origen\n   */\n  name: string;\n}\n\n/**\n * Interface para manejar las noticias de una Categoria concreta y por paginas. NO SE USA\n */\nexport interface ArticlesByCategoryAndPage {\n  [key: string] : {\n      page: number,\n      articles: Article[]\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/ArticlesByCategoryAndPage.html":{"url":"interfaces/ArticlesByCategoryAndPage.html","title":"interface - ArticlesByCategoryAndPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ArticlesByCategoryAndPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/app/interfaces/news.ts\n        \n\n\n            \n                Descripción\n            \n            \n                Interface para manejar las noticias de una Categoria concreta y por paginas. NO SE USA\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    literal type\n\n                    \n                \n                        \n                            \n                                Definido en src/app/interfaces/news.ts:86\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface NewsResponse {\n  /**\n   * Estado de la peticion\n   */\n  status:       string;\n\n  /**\n   * Resultados totales de la peticion\n   */\n  totalResults: number;\n\n  /**\n   * Objeto tipo Article para manejar las noticias\n   */\n  articles:     Article[];\n}\n\n/**\n * Interface para el manejo de las noticias\n */\nexport interface Article {\n\n  /**\n   * Origen de la noticia\n   */\n  source:       Source;\n\n  /**\n   * Autor de la noticia\n   */\n  author?:      string;\n\n  /**\n   * Titulo de la noticia\n   */\n  title:        string;\n\n  /**\n   * Descripcion corta de la noticia\n   */\n  description?: string;\n\n  /**\n   * URL a la noticia completa\n   */\n  url:          string;\n\n  /**\n   * URL a la imagen de la noticia\n   */\n  urlToImage?:  string;\n\n  /**\n   * Fecha de publicacion\n   */\n  publishedAt:  string;\n\n  /**\n   * Contenido completo de la noticia\n   */\n  content?:     string;\n}\n\n/**\n * Interface para el manejo del Origen de la noticia\n */\nexport interface Source {\n\n  /**\n   * Identificador del origen\n   */\n  id?:  string;\n\n  /**\n   * Nombre del Origen\n   */\n  name: string;\n}\n\n/**\n * Interface para manejar las noticias de una Categoria concreta y por paginas. NO SE USA\n */\nexport interface ArticlesByCategoryAndPage {\n  [key: string] : {\n      page: number,\n      articles: Article[]\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Inyectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                userEmail\n                            \n                            \n                                usuarioLogado\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                checkLogin\n                            \n                            \n                                deleteUser\n                            \n                            \n                                    Public\n                                    Async\n                                getUserEmail\n                            \n                            \n                                    Public\n                                initAuthStateListener\n                            \n                            \n                                    Async\n                                passChange\n                            \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                signOut\n                            \n                            \n                                signUp\n                            \n                            \n                                userDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(angularFireAuth: AngularFireAuth, userSvc: UserService, firestore: AngularFirestore, router: Router, avisosSvc: AvisosService)\n                    \n                \n                        \n                            \n                                Definido en src/app/services/auth.service.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor de clase\n\n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                                    Descripción\n                                            \n                                        \n                                        \n                                                \n                                                        angularFireAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de Angular Firebase con los metodos típicos de autenticacion\n\n                                                        \n                                                \n                                                \n                                                        userSvc\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio personalizado para operaciones con el usuario\n\n                                                        \n                                                \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de firestore\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de enrutamiento dentro de la aplicación\n\n                                                        \n                                                \n                                                \n                                                        avisosSvc\n                                                  \n                                                        \n                                                                        AvisosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de avisos a través de Toasts\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/auth.service.ts:122\n                \n            \n\n\n            \n                \n                    Método que activa o desactiva rutas en funcion de si existe usuarios logado o no, para personalizar el menú\nSi no estas logado, redireccionaria al Login\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Ruta a la que se intenta acceder\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Estado del enrutador\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkLogin\n                        \n                    \n                \n            \n            \n                \ncheckLogin()\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/auth.service.ts:140\n                \n            \n\n\n            \n                \n                    Comprueba si hay un usuario logado o no\n\n\n                    \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(id: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/auth.service.ts:184\n                \n            \n\n\n            \n                \n                    Metodo para eliminar un usuario concreto\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id del usuario a eliminar pasado por parámetro\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getUserEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserEmail()\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/auth.service.ts:150\n                \n            \n\n\n            \n                \n                    Obtiene el mail del usuario en caso de estar logado\n\n\n                    \n                    \n                    \n                        Devuelve :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initAuthStateListener\n                        \n                    \n                \n            \n            \n                \n                    \n                    initAuthStateListener()\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/auth.service.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        passChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    passChange(nuevaContraseña: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/auth.service.ts:175\n                \n            \n\n\n            \n                \n                    Método para cambiar la contraseña del usuario\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    nuevaContraseña\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String recibido a través del formulario con la nueva contraseña\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(value: any)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/auth.service.ts:82\n                \n            \n\n\n            \n                \n                    Método para hacer el login segun los datos recogidos en el formulario y lo guarda en el objeto tipo Usuario\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Valores recogidos por el formulario de acceso\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/auth.service.ts:98\n                \n            \n\n\n            \n                \n                    Método de deslogado del usuario con retorno al Home\n\n\n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(usuario: Usuario)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/auth.service.ts:49\n                \n            \n\n\n            \n                \n                    Método de creación de usuarios. Primero crea el usuario en Firestore y también lo crea en Auth de Firebase\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    usuario\n                                    \n                                                Usuario\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Datos recogidos por el Formulario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userDetails\n                        \n                    \n                \n            \n            \n                \nuserDetails()\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/auth.service.ts:110\n                \n            \n\n\n            \n                \n                    Obtiene los detalles de usuario a traves del Auth de Firebase\n\n\n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userEmail\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definido en src/app/services/auth.service.ts:27\n                        \n                    \n\n            \n                \n                    Variable para guardar el mail del usuario logado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuarioLogado\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Usuario\n\n                    \n                \n                    \n                        \n                                Definido en src/app/services/auth.service.ts:22\n                        \n                    \n\n            \n                \n                    Objeto de tipo usuario para almacenar los datos del usuario Logado\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { AngularFirestore } from '@angular/fire/compat/firestore/';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\n\nimport { take, map, tap } from 'rxjs/operators';\nimport { Usuario } from '../interfaces/interfaces';\nimport { UserService } from './user.service';\nimport { AvisosService } from './avisos.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  /**\n   * Objeto de tipo usuario para almacenar los datos del usuario Logado\n   */\n  usuarioLogado: Usuario;\n\n  /**\n   * Variable para guardar el mail del usuario logado\n   */\n  public userEmail: string;\n\n  /**\n   * Constructor de clase\n   * @param angularFireAuth Servicio de Angular Firebase con los metodos típicos de autenticacion\n   * @param userSvc Servicio personalizado para operaciones con el usuario\n   * @param firestore Servicio de firestore \n   * @param router Servicio de enrutamiento dentro de la aplicación\n   * @param avisosSvc Servicio de avisos a través de Toasts\n   */\n  constructor(private angularFireAuth: AngularFireAuth,\n    private userSvc: UserService,\n    private firestore: AngularFirestore,\n    private router: Router,\n    private avisosSvc: AvisosService) {\n  }\n\n  /**\n   * Método de creación de usuarios. Primero crea el usuario en Firestore y también lo crea en Auth de Firebase\n   * @param usuario Datos recogidos por el Formulario\n   * @returns \n   */\n  signUp(usuario: Usuario) {\n\n    this.firestore.collection('usuarios').add({\n      EMAIL: usuario.EMAIL,\n      NOMBRE: usuario.NOMBRE,\n      ROL: \"Retador\",\n      AVATAR: \"\",\n      ID: \"\",\n      PUNTOS: 0\n\n    })\n      .then((docRef: any) => {\n        this.firestore.doc(docRef).update({\n          ID: docRef.id\n        });\n      })\n      .catch((error: any) => {\n        this.avisosSvc.presentToast('No se ha podido crear el Usuario', 'danger');\n      });\n\n    return new Promise((resolve, reject) => {\n      this.angularFireAuth.createUserWithEmailAndPassword(usuario.EMAIL, usuario.PASSWORD)\n        .then(\n          res => resolve(res),\n          err => reject(err))\n    })\n  }\n\n  /**\n   * Método para hacer el login segun los datos recogidos en el formulario y lo guarda en el objeto tipo Usuario\n   * @param value Valores recogidos por el formulario de acceso\n   * @returns \n   */\n  async signIn(value: any) {\n\n    this.userSvc.getUserByEmail(value.email).subscribe(resultado => {\n\n      this.usuarioLogado = resultado;\n\n    });\n\n    return this.angularFireAuth.signInWithEmailAndPassword(value.email, value.password);\n\n  }\n\n  /**\n   * Método de deslogado del usuario con retorno al Home\n   * @returns \n   */\n  signOut() {\n    return new Promise((resolve, reject) => {\n      this.angularFireAuth.signOut();\n      this.userEmail = null;\n      this.router.navigateByUrl('home');\n    })\n  }\n\n  /**\n   * Obtiene los detalles de usuario a traves del Auth de Firebase\n   * @returns \n   */\n  userDetails() {\n\n    return this.angularFireAuth.user;\n  }\n\n  /**\n   * Método que activa o desactiva rutas en funcion de si existe usuarios logado o no, para personalizar el menú\n   * Si no estas logado, redireccionaria al Login\n   * @param next Ruta a la que se intenta acceder\n   * @param state Estado del enrutador\n   * @returns \n   */\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n    return this.angularFireAuth.authState.pipe(\n      take(1),\n      map(user => !!user),\n      tap(loggedIn => {\n        if (!loggedIn) {\n          this.router.navigate(['/login']);\n        }\n      })\n    );\n  }\n\n  /**\n   * Comprueba si hay un usuario logado o no\n   * @returns \n   */\n  checkLogin(): boolean {\n\n    return !!this.angularFireAuth.currentUser;\n\n  }\n\n  /**\n   * Obtiene el mail del usuario en caso de estar logado\n   * @returns \n   */\n  public async getUserEmail(): Promise {\n    if (this.checkLogin()) {\n      const user = await this.angularFireAuth.currentUser;\n      if (user) {\n        this.userEmail = user.email;\n        return this.userEmail || null;\n      }\n    }\n    return null;\n  }\n\n  public initAuthStateListener(): void {\n    this.angularFireAuth.onAuthStateChanged(user => {\n      if (user) {\n        this.userEmail = user.email;\n      } else {\n        this.userEmail = null;\n      }\n    });\n  }\n\n  /**\n   * Método para cambiar la contraseña del usuario\n   * @param nuevaContraseña String recibido a través del formulario con la nueva contraseña\n   */\n  async passChange(nuevaContraseña: string) {\n    const user = await this.angularFireAuth.currentUser;\n    await user.updatePassword(nuevaContraseña);\n  }\n\n  /**\n   * Metodo para eliminar un usuario concreto\n   * @param id id del usuario a eliminar pasado por parámetro\n   */\n  deleteUser(id: string) {\n\n    this.firestore.collection('usuarios').doc(id).delete()\n      .then(() => {\n        this.avisosSvc.presentToast('Usuario eliminado correctamente', 'success');\n      })\n      .catch((error) => {\n        this.avisosSvc.presentToast('Error eliminando el Usuario', 'danger');\n      });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"injectables/AvisosService.html":{"url":"injectables/AvisosService.html","title":"injectable - AvisosService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Inyectables\n  AvisosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/app/services/avisos.service.ts\n        \n\n\n\n\n\n            \n    Índice\n    \n        \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                presentToast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(toastCtrl: ToastController)\n                    \n                \n                        \n                            \n                                Definido en src/app/services/avisos.service.ts:8\n                            \n                        \n\n                \n                    \n                            Constructor de clase\n\n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                                    Descripción\n                                            \n                                        \n                                        \n                                                \n                                                        toastCtrl\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                controlador del componente Toast que muestra los avisos\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        presentToast\n                        \n                    \n                \n            \n            \n                \n                    \n                    presentToast(mensaje: string, estado: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/avisos.service.ts:21\n                \n            \n\n\n            \n                \n                    Muestra el toast con el mensaje y color pasado por parámetro\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    mensaje\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String qcon el mensaje a mostrar\n\n                                    \n                                \n                                \n                                    estado\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String con el resultado. Success para correcto y Danger para Error. Se puede indicar cualquier otro color de Ionic\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { ToastController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AvisosService {\n\n  /**\n   * Constructor de clase\n   * @param toastCtrl controlador del componente Toast que muestra los avisos\n   */\n  constructor(private toastCtrl: ToastController) { }\n\n  /**\n   * Muestra el toast con el mensaje y color pasado por parámetro\n   * @param mensaje String qcon el mensaje a mostrar\n   * @param estado String con el resultado. Success para correcto y Danger para Error. Se puede indicar cualquier otro color de Ionic\n   */\n  async presentToast(mensaje: string, estado: string) {\n\n    const toast = await this.toastCtrl.create({\n      message: mensaje,\n      color: estado,\n      duration: 3000,\n     \n    });\n\n    await toast.present();\n  \n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/ComponentsModule.html":{"url":"modules/ComponentsModule.html","title":"module - ComponentsModule","body":"\n                   \n\n\n\n\n    Módulos\n    ComponentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ComponentsModule\n\n\n\ncluster_ComponentsModule_exports\n\n\n\ncluster_ComponentsModule_declarations\n\n\n\n\nFabLoginComponent\n\nFabLoginComponent\n\n\n\nComponentsModule\n\nComponentsModule\n\nComponentsModule -->\n\nFabLoginComponent->ComponentsModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nComponentsModule -->\n\nHeaderComponent->ComponentsModule\n\n\n\n\n\nInfoRetoComponent\n\nInfoRetoComponent\n\nComponentsModule -->\n\nInfoRetoComponent->ComponentsModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nComponentsModule -->\n\nLoginComponent->ComponentsModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nComponentsModule -->\n\nMenuComponent->ComponentsModule\n\n\n\n\n\nNewRetoComponent\n\nNewRetoComponent\n\nComponentsModule -->\n\nNewRetoComponent->ComponentsModule\n\n\n\n\n\nNoticiaComponent\n\nNoticiaComponent\n\nComponentsModule -->\n\nNoticiaComponent->ComponentsModule\n\n\n\n\n\nNoticiasComponent\n\nNoticiasComponent\n\nComponentsModule -->\n\nNoticiasComponent->ComponentsModule\n\n\n\n\n\nRegistroComponent\n\nRegistroComponent\n\nComponentsModule -->\n\nRegistroComponent->ComponentsModule\n\n\n\n\n\nRetoComponent\n\nRetoComponent\n\nComponentsModule -->\n\nRetoComponent->ComponentsModule\n\n\n\n\n\nRetosComponent\n\nRetosComponent\n\nComponentsModule -->\n\nRetosComponent->ComponentsModule\n\n\n\n\n\nFabLoginComponent \n\nFabLoginComponent \n\nFabLoginComponent  -->\n\nComponentsModule->FabLoginComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nComponentsModule->HeaderComponent \n\n\n\n\n\nInfoRetoComponent \n\nInfoRetoComponent \n\nInfoRetoComponent  -->\n\nComponentsModule->InfoRetoComponent \n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nComponentsModule->LoginComponent \n\n\n\n\n\nMenuComponent \n\nMenuComponent \n\nMenuComponent  -->\n\nComponentsModule->MenuComponent \n\n\n\n\n\nNewRetoComponent \n\nNewRetoComponent \n\nNewRetoComponent  -->\n\nComponentsModule->NewRetoComponent \n\n\n\n\n\nNoticiasComponent \n\nNoticiasComponent \n\nNoticiasComponent  -->\n\nComponentsModule->NoticiasComponent \n\n\n\n\n\nRegistroComponent \n\nRegistroComponent \n\nRegistroComponent  -->\n\nComponentsModule->RegistroComponent \n\n\n\n\n\nRetoComponent \n\nRetoComponent \n\nRetoComponent  -->\n\nComponentsModule->RetoComponent \n\n\n\n\n\nRetosComponent \n\nRetosComponent \n\nRetosComponent  -->\n\nComponentsModule->RetosComponent \n\n\n\n\n\n\n    \n    \n    \n        Ampliar\n        Restablecer\n        Alejar\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/app/components/components.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declaraciones\n                    \n                        \n                            FabLoginComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            InfoRetoComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MenuComponent\n                        \n                        \n                            NewRetoComponent\n                        \n                        \n                            NoticiaComponent\n                        \n                        \n                            NoticiasComponent\n                        \n                        \n                            RegistroComponent\n                        \n                        \n                            RetoComponent\n                        \n                        \n                            RetosComponent\n                        \n                    \n                \n                \n                    Exporta\n                    \n                        \n                            FabLoginComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            InfoRetoComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MenuComponent\n                        \n                        \n                            NewRetoComponent\n                        \n                        \n                            NoticiasComponent\n                        \n                        \n                            RegistroComponent\n                        \n                        \n                            RetoComponent\n                        \n                        \n                            RetosComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n//imports de Componentes personalizados\nimport { FabLoginComponent } from './fab-login/fab-login.component';\nimport { RegistroComponent } from './registro/registro.component';\nimport { LoginComponent } from './login/login.component';\nimport { NoticiaComponent } from './noticia/noticia.component';\nimport { NoticiasComponent } from './noticias/noticias.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { HeaderComponent } from './header/header.component';\nimport { RetoComponent } from './reto/reto.component';\nimport { InfoRetoComponent } from './info-reto/info-reto.component';\nimport { NewRetoComponent } from './new-reto/new-reto.component';\nimport { RetosComponent } from './retos/retos.component';\n\n\n\n\n\n@NgModule({\n  declarations: [FabLoginComponent,\n    RegistroComponent,\n    LoginComponent,\n    NoticiaComponent,\n    NoticiasComponent,\n    MenuComponent,\n    HeaderComponent,\n    RetoComponent,\n    RetosComponent,\n    InfoRetoComponent,\n    NewRetoComponent\n  ],\n\n  imports: [\n    CommonModule,\n    IonicModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n  ], exports: [\n    FabLoginComponent,\n    RegistroComponent,\n    LoginComponent,\n    NoticiasComponent,\n    MenuComponent,\n    HeaderComponent,\n    RetoComponent,\n    RetosComponent,\n    InfoRetoComponent,\n    NewRetoComponent\n\n  ]\n\n})\nexport class ComponentsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/Error.html":{"url":"interfaces/Error.html","title":"interface - Error","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Error\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/app/interfaces/errores.ts\n        \n\n\n            \n                Descripción\n            \n            \n                Interface para mostrar mensajes de error\n\n            \n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     [literal type, literal type]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     [literal type, literal type]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:     [literal type, literal type]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     [literal type, literal type]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Error {\n\n    'email': [\n        {\n         \n          type: 'required',\n\n          message: 'Pon un mail.'\n        },\n        {\n          type: 'pattern',\n          message: 'Email no es valido'\n        }\n      ],\n      'password': [\n        {\n          type: 'required',\n          message: 'Pon una contraseña.'\n        },\n        {\n          type: 'minlength',\n          message: 'La contraseña debe tener al menos 6 caracteres'\n        }\n      ]\n    }\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/FabLoginComponent.html":{"url":"components/FabLoginComponent.html","title":"component - FabLoginComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  FabLoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/components/fab-login/fab-login.component.ts\n\n\n\n    \n        Descripción\n    \n    \n        Componente tipo Fab.\nSe encarga de dar acceso al formulario de Login.\nSolo se muestra en las páginas de acceso anónimo y cuando no se estgá logado.\n\n    \n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-fab-login\n            \n\n            \n                styleUrls\n                ./fab-login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./fab-login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                loginModal\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController)\n                    \n                \n                        \n                            \n                                Definido en src/app/components/fab-login/fab-login.component.ts:18\n                            \n                        \n\n                \n                    \n                            Constructor de la clase\nControlador de Modal de Ionic\n\n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                                    Descripción\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controlador de Modal de Ionic\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        loginModal\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginModal()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/fab-login/fab-login.component.ts:40\n                \n            \n\n\n            \n                \n                    Abre la ventana de Login como un Modal\n\n\n                    \n                    \n                    \n                        Devuelve :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/fab-login/fab-login.component.ts:31\n                \n            \n\n\n            \n                \n                    Método de inicio\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { ModalController } from '@ionic/angular';\nimport { LoginComponent } from '../login/login.component';\n\n\n\n/**\n * Componente tipo Fab.\n * Se encarga de dar acceso al formulario de Login.\n * Solo se muestra en las páginas de acceso anónimo y cuando no se estgá logado.\n */\n@Component({\n  selector: 'app-fab-login',\n  templateUrl: './fab-login.component.html',\n  styleUrls: ['./fab-login.component.scss'],\n})\nexport class FabLoginComponent implements OnInit {\n\n  /**\n   * Constructor de la clase\n   * @param modalCtrl \n   * Controlador de Modal de Ionic\n   */\n  constructor(private modalCtrl: ModalController) { }\n\n\n  /**\n   * Método de inicio\n   */\n  ngOnInit() {\n\n\n  }\n  /**\n   * Abre la ventana de Login como un Modal\n   * @returns \n   * \n   */\n  async loginModal() {\n    const modal = await this.modalCtrl.create({\n      component: LoginComponent,\n      cssClass: 'loginRegisterModal'\n    });\n    return await modal.present();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./fab-login.component.scss\n                \n                ion-fab-button {\n  --border-radius: 15px;\n  --box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, .3), 0px 1px 3px 1px rgba(0, 0, 0, .15);\n  --color: black;\n}\n\nion-modal {\n  --height: 50%;\n  --border-radius: 16px;\n  --box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);\n}\n\nion-modal::part(backdrop) {\n  background: rgba(209, 213, 219);\n  opacity: 1;\n}\n\nion-modal ion-toolbar {\n  \n  --color: white;\n}\n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FabLoginComponent', 'selector': 'app-fab-login'},{'name': 'FavoritosPage', 'selector': 'app-favoritos'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InfoRetoComponent', 'selector': 'app-info-reto'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MisRetosPage', 'selector': 'app-mis-retos'},{'name': 'NewRetoComponent', 'selector': 'app-new-reto'},{'name': 'NewsPagePage', 'selector': 'app-news-page'},{'name': 'NoticiaComponent', 'selector': 'app-noticia'},{'name': 'NoticiasComponent', 'selector': 'app-noticias'},{'name': 'PerfilPage', 'selector': 'app-perfil'},{'name': 'RankingPage', 'selector': 'app-ranking'},{'name': 'RegistroComponent', 'selector': 'app-registro'},{'name': 'RetoComponent', 'selector': 'app-reto'},{'name': 'RetosComponent', 'selector': 'app-retos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FabLoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/Favorito.html":{"url":"interfaces/Favorito.html","title":"interface - Favorito","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Favorito\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Descripción\n            \n            \n                Interface para manejar Favoritos. COLECCION: favoritos\n\n            \n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ID_FAV\n                                        \n                                \n                                \n                                        \n                                            ID_RETO\n                                        \n                                \n                                \n                                        \n                                            USER\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        ID_FAV\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ID_FAV:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de Favorito. Se guarda como campo el Identificador autogenerado para que sea más accesible\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ID_RETO\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ID_RETO:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador del Reto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        USER\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        USER:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Email del usuario que marca el Favorito\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Usuario {\n  /**\n   * Identificador del usuario. Es el mismo que el autogenerado por Firebase para facilitar el manejo del objeto\n   */\n  ID: string,\n\n  /**\n   * Nombre del usuario\n   */\n  NOMBRE: string,\n\n  /**\n   * Email del usuario\n   */\n  EMAIL: string,\n\n  /**\n   * Contraseña del usuario. No se envia ni se guarda. Solo se usa para el método de cambio de Password\n   */\n  PASSWORD: string,\n\n  /**\n   * Rol del usuario. Puede ser Anónimo, Retador o Administrador\n   */\n  ROL: string,\n\n  /**\n   * URL de acceso al avatar.\n   */\n  AVATAR: string,\n\n  /**\n   * Puntos totales según el número de retos conseguidos\n   */\n  PUNTOS: number\n}\n\n/**\n * Interface para el manejo de retos. COLECCION: retos\n */\nexport interface Reto {\n\n  /**\n   * Identificador del Reto. Es el mismo que el autogenerado por Firestore.\n   */\n  ID: string,\n\n  /**\n   * Titulo del reto\n   */\n  TITULO: string,\n\n  /**\n   * Descripcion larga del reto\n   */\n  DESCRIPCION: string,\n\n  /**\n   * Tipo de reto. Puede ser ocular, prismaticos o telescopio\n   */\n  TIPO: string,\n\n  /**\n   * Nivel del reto. Puede ser facil, intermedio o dificil\n   */\n  NIVEL: string,\n\n  /**\n   * Indica si el reto esta activo o no. El retador puede manejar los suyos. Los administradores, todos.\n   */\n  ACTIVO: boolean,\n\n  /**\n   * Marca retos destacados. TODAVIA NO ESTA IMPLEMENTADO\n   */\n  DESTACADO: boolean,\n\n  /**\n   * Email del retador.\n   */\n  RETADOR: string,\n\n  /**\n   * Imagen del reto subida por el retador\n   */\n  IMAGEN: string,\n}\n\n/**\n * Interface para manejar Favoritos. COLECCION: favoritos\n */\nexport interface Favorito {\n  /**\n   * Identificador del Reto.\n   */\n  ID_RETO: string;\n\n  /**\n   * Identificador de Favorito. Se guarda como campo el Identificador autogenerado para que sea más accesible \n   */\n  ID_FAV: string;\n\n  /**\n   * Email del usuario que marca el Favorito\n   */\n  USER: string;\n}\n\n/**\n * Interface para el manejo de los retos conseguidos. COLECCION: retosconseguidos\n */\nexport interface RetoConseguido {\n  /**\n   * Identificador del Reto.\n   */\n  ID_RETO: string;\n\n  /**\n   * Identificador del objeto, igual al autogenerado por Firestore\n   */\n  ID_RETO_CONSEGUIDO: string;\n\n  /**\n   * Email dle usuario que ha conseguido el reto\n   */\n  USER: string;\n\n  /**\n   * Puntos conseguidos por ese reto\n   */\n  PUNTOS: number;\n}\n\n/**\n * Interface para el manejo del Menu. Segun el rol del usuario, se cargaran unas opciones u otras.\n */\nexport interface MenuOpts {\n\n  /**\n   * Icono de la opcion de menu\n   */\n  icon: string;\n\n  /**\n   * Nombre a mostrar en el menu\n   */\n  name: string;\n\n  /**\n   * Página o tura a la que nos lleva la opcion\n   */\n  redirectTo: string;\n\n  /**\n   * Roles que tienen acceso: all, retador, administrador\n   */\n  rol: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/FavoritosPage.html":{"url":"components/FavoritosPage.html","title":"component - FavoritosPage","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  FavoritosPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/pages/favoritos/favoritos.page.ts\n\n\n\n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-favoritos\n            \n\n            \n                styleUrls\n                ./favoritos.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./favoritos.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                favoritos\n                            \n                            \n                                idFavorito\n                            \n                            \n                                idUser\n                            \n                            \n                                    Public\n                                menuSvc\n                            \n                            \n                                retos\n                            \n                            \n                                    Public\n                                userEmail\n                            \n                            \n                                usuario\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                quitarFavorito\n                            \n                            \n                                    Async\n                                verDetalle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(menuSvc: MenuService, retoSvc: RetoService, authSvc: AuthService, userSvc: UserService, avisosSvc: AvisosService, modalCtrl: ModalController)\n                    \n                \n                        \n                            \n                                Definido en src/app/pages/favoritos/favoritos.page.ts:49\n                            \n                        \n\n                \n                    \n                            Constructor de clase\nAqui cargamos el menu personalizado\n\n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                                    Descripción\n                                            \n                                        \n                                        \n                                                \n                                                        menuSvc\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para personalizar el menu\n\n                                                        \n                                                \n                                                \n                                                        retoSvc\n                                                  \n                                                        \n                                                                        RetoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para el manejo de los retos\n\n                                                        \n                                                \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para gestionar la Autenticacion\n\n                                                        \n                                                \n                                                \n                                                        userSvc\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para operaciones con el usuario\n\n                                                        \n                                                \n                                                \n                                                        avisosSvc\n                                                  \n                                                        \n                                                                        AvisosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de avisos a traves de toast\n\n                                                        \n                                                \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que controla la carga de modales\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/pages/favoritos/favoritos.page.ts:77\n                \n            \n\n\n            \n                \n                    Metodo de inicio\nComprobamos el mail del usuario logado\nCargamos los favoritos de ese usuario\nAlmacenamos los retos por los ID de los favoritos\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quitarFavorito\n                        \n                    \n                \n            \n            \n                \nquitarFavorito(id: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/pages/favoritos/favoritos.page.ts:129\n                \n            \n\n\n            \n                \n                    Quita el favorito de la lista\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id del favorito\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verDetalle\n                        \n                    \n                \n            \n            \n                \n                    \n                    verDetalle(id: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/pages/favoritos/favoritos.page.ts:111\n                \n            \n\n\n            \n                \n                    Muestra el Modal con los detalles del reto\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id del reto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                        favoritos\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Favorito[]\n\n                    \n                \n                \n                    \n                        Valor por defecto : []\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/favoritos/favoritos.page.ts:44\n                        \n                    \n\n            \n                \n                    Array de objetos de tipo Favorito\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idFavorito\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/favoritos/favoritos.page.ts:34\n                        \n                    \n\n            \n                \n                    Para guardar el Id del Favorito\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idUser\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/favoritos/favoritos.page.ts:29\n                        \n                    \n\n            \n                \n                    Id del usuario logado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        menuSvc\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         MenuService\n\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/favoritos/favoritos.page.ts:61\n                        \n                    \n\n            \n                \n                    Servicio para personalizar el menu\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        retos\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Reto[]\n\n                    \n                \n                \n                    \n                        Valor por defecto : []\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/favoritos/favoritos.page.ts:49\n                        \n                    \n\n            \n                \n                    Array de objetos de tipo Reto\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userEmail\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/favoritos/favoritos.page.ts:24\n                        \n                    \n\n            \n                \n                    Variable para almacenar el mail del usuario logado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuario\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Usuario\n\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/favoritos/favoritos.page.ts:39\n                        \n                    \n\n            \n                \n                    Objeto tipo Usuario para cargar sus datos\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { ModalController } from '@ionic/angular';\nimport { InfoRetoComponent } from 'src/app/components/info-reto/info-reto.component';\n\nimport { Usuario, Reto, Favorito } from 'src/app/interfaces/interfaces';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { AvisosService } from 'src/app/services/avisos.service';\n\nimport { MenuService } from 'src/app/services/menu.service';\nimport { RetoService } from 'src/app/services/reto.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-favoritos',\n  templateUrl: './favoritos.page.html',\n  styleUrls: ['./favoritos.page.scss'],\n})\nexport class FavoritosPage implements OnInit {\n\n  /**\n   * Variable para almacenar el mail del usuario logado\n   */\n  public userEmail: string;\n\n  /**\n   * Id del usuario logado\n   */\n  idUser: string;\n\n  /**\n   * Para guardar el Id del Favorito\n   */\n  idFavorito: string;\n\n  /**\n   * Objeto tipo Usuario para cargar sus datos\n   */\n  usuario: Usuario;\n\n  /**\n   * Array de objetos de tipo Favorito\n   */\n  favoritos: Favorito[] = [];\n\n  /**\n   * Array de objetos de tipo Reto\n   */\n  retos: Reto[] = [];\n\n  /**\n   * Constructor de clase\n   * Aqui cargamos el menu personalizado\n   * @param menuSvc Servicio para personalizar el menu\n   * @param retoSvc Servicio para el manejo de los retos\n   * @param authSvc Servicio para gestionar la Autenticacion\n   * @param userSvc Servicio para operaciones con el usuario\n   * @param avisosSvc Servicio de avisos a traves de toast\n   * @param modalCtrl Servicio que controla la carga de modales\n   */\n  constructor(public menuSvc: MenuService,\n    private retoSvc: RetoService,\n    private authSvc: AuthService,\n    private userSvc: UserService,\n    private avisosSvc: AvisosService,\n    private modalCtrl: ModalController) {\n\n    this.menuSvc.setMenu();\n  }\n\n  /**\n   * Metodo de inicio\n   * Comprobamos el mail del usuario logado\n   * Cargamos los favoritos de ese usuario\n   * Almacenamos los retos por los ID de los favoritos\n   */\n  ngOnInit() {\n\n    this.favoritos = [];\n\n    this.authSvc.getUserEmail().then(email => {\n      this.userEmail = email;\n      this.userSvc.getUserByEmail(email).subscribe(usuario => {\n        this.usuario = usuario;\n        this.idUser = this.usuario.ID;\n        console.log(this.usuario.NOMBRE);\n\n      });\n\n      this.retoSvc.getFavoritosByUser(this.userEmail).subscribe(favoritos => {\n        this.favoritos = favoritos;\n        console.log(this.favoritos.length);\n\n      for (let index = 0; index  {\n            this.retos = [...this.retos, ...reto];\n            console.log('reto', index, this.retos[index], this.favoritos[index]);\n          });\n        }\n\n\n      });\n    });\n\n  }\n\n  /**\n   * Muestra el Modal con los detalles del reto\n   * @param id Id del reto\n   */\n  async verDetalle(id: string) {\n\n    const modal = await this.modalCtrl.create({\n      component: InfoRetoComponent,\n      componentProps: {\n        id\n      },\n      cssClass: 'modalInfo'\n    });\n\n    modal.present();\n\n  }\n\n  /**\n   * Quita el favorito de la lista\n   * @param id Id del favorito\n   */\n  quitarFavorito(id: string) {\n\n    try {\n      this.retoSvc.deleteFavorito(id);\n      console.log('eliminando reto', this.idFavorito, id);\n      this.avisosSvc.presentToast('Favorito eliminado correctamente', 'success');\n    } catch (error) {\n      this.avisosSvc.presentToast('Error al eliminar el Favorito', 'danger');\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n  \n    \n      \n        \n      \n      \n        {{ reto?.TITULO }}\n      \n    \n    \n      \n        \n      \n    \n  \n\n\n  \n\n    \n\n    \n                \n                    ./favoritos.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ reto?.TITULO }}                                          '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FabLoginComponent', 'selector': 'app-fab-login'},{'name': 'FavoritosPage', 'selector': 'app-favoritos'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InfoRetoComponent', 'selector': 'app-info-reto'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MisRetosPage', 'selector': 'app-mis-retos'},{'name': 'NewRetoComponent', 'selector': 'app-new-reto'},{'name': 'NewsPagePage', 'selector': 'app-news-page'},{'name': 'NoticiaComponent', 'selector': 'app-noticia'},{'name': 'NoticiasComponent', 'selector': 'app-noticias'},{'name': 'PerfilPage', 'selector': 'app-perfil'},{'name': 'RankingPage', 'selector': 'app-ranking'},{'name': 'RegistroComponent', 'selector': 'app-registro'},{'name': 'RetoComponent', 'selector': 'app-reto'},{'name': 'RetosComponent', 'selector': 'app-retos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FavoritosPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/FavoritosPageModule.html":{"url":"modules/FavoritosPageModule.html","title":"module - FavoritosPageModule","body":"\n                   \n\n\n\n\n    Módulos\n    FavoritosPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FavoritosPageModule\n\n\n\ncluster_FavoritosPageModule_declarations\n\n\n\ncluster_FavoritosPageModule_imports\n\n\n\n\nFavoritosPage\n\nFavoritosPage\n\n\n\nFavoritosPageModule\n\nFavoritosPageModule\n\nFavoritosPageModule -->\n\nFavoritosPage->FavoritosPageModule\n\n\n\n\n\nFavoritosPageRoutingModule\n\nFavoritosPageRoutingModule\n\nFavoritosPageModule -->\n\nFavoritosPageRoutingModule->FavoritosPageModule\n\n\n\n\n\n\n    \n    \n    \n        Ampliar\n        Restablecer\n        Alejar\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/app/pages/favoritos/favoritos.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declaraciones\n                    \n                        \n                            FavoritosPage\n                        \n                    \n                \n                \n                    Importa\n                    \n                        \n                            FavoritosPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FavoritosPageRoutingModule } from './favoritos-routing.module';\n\nimport { FavoritosPage } from './favoritos.page';\n\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    FavoritosPageRoutingModule,\n    ComponentsModule\n  ],\n  declarations: [FavoritosPage]\n})\nexport class FavoritosPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/FavoritosPageRoutingModule.html":{"url":"modules/FavoritosPageRoutingModule.html","title":"module - FavoritosPageRoutingModule","body":"\n                   \n\n\n\n\n    Módulos\n    FavoritosPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/app/pages/favoritos/favoritos-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FavoritosPage } from './favoritos.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FavoritosPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FavoritosPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/components/header/header.component.ts\n\n\n\n    \n        Descripción\n    \n    \n        Componente que standariza las cabeceras de todas las páginas del proyecto\n\n    \n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Entradas\n                    \n                \n                \n                    \n                        \n                            \n                                titulo\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definido en src/app/components/header/header.component.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor de la clase\n\n                    \n                \n            \n        \n\n\n    \n    Entradas\n        \n            \n                \n                    \n                        \n                        titulo\n                    \n                \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valor por defecto : ''\n                    \n                \n                        \n                            \n                                    Definido en src/app/components/header/header.component.ts:16\n                            \n                        \n                \n                    \n                        Recibe el título como parámetro para personalizar el título.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/header/header.component.ts:26\n                \n            \n\n\n            \n                \n                    Método de inicio\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\n/**\n * Componente que standariza las cabeceras de todas las páginas del proyecto\n */\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit {\n\n  /**\n   * Recibe el título como parámetro para personalizar el título.\n   */\n  @Input() titulo: string = '';\n\n  /**\n   * Constructor de la clase\n   */\n  constructor() { }\n\n  /**\n   * Método de inicio\n   */\n  ngOnInit() { }\n\n}\n\n    \n\n    \n        \n  \n\n    \n      \n    \n\n    {{ titulo }}\n  \n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ titulo }}  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FabLoginComponent', 'selector': 'app-fab-login'},{'name': 'FavoritosPage', 'selector': 'app-favoritos'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InfoRetoComponent', 'selector': 'app-info-reto'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MisRetosPage', 'selector': 'app-mis-retos'},{'name': 'NewRetoComponent', 'selector': 'app-new-reto'},{'name': 'NewsPagePage', 'selector': 'app-news-page'},{'name': 'NoticiaComponent', 'selector': 'app-noticia'},{'name': 'NoticiasComponent', 'selector': 'app-noticias'},{'name': 'PerfilPage', 'selector': 'app-perfil'},{'name': 'RankingPage', 'selector': 'app-ranking'},{'name': 'RegistroComponent', 'selector': 'app-registro'},{'name': 'RetoComponent', 'selector': 'app-reto'},{'name': 'RetosComponent', 'selector': 'app-retos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  HomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/pages/home/home.page.ts\n\n\n\n    \n        Descripción\n    \n    \n        Componente Home. Indica la plantilla HTML que usa y su CSS.\nPágina de inicio que muestra los retos activos.\n\n    \n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.page.scss\n            \n\n\n\n            \n                templateUrl\n                home.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                ionFabVisible\n                            \n                            \n                                menuOpts\n                            \n                            \n                                    Public\n                                retos\n                            \n                            \n                                userEmail\n                            \n                            \n                                usuarioLogado\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authSvc: AuthService, userSvc: UserService, angularFireAuth: AngularFireAuth, retoSvc: RetoService)\n                    \n                \n                        \n                            \n                                Definido en src/app/pages/home/home.page.ts:38\n                            \n                        \n\n                \n                    \n                            Comprobamos si el usuario está logado y así mostrar el menú de una forma u otra\n\n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userSvc\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        angularFireAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        retoSvc\n                                                  \n                                                        \n                                                                        RetoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/pages/home/home.page.ts:102\n                \n            \n\n\n            \n                \n                    Método de inicio. Carga los retos activos\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                        ionFabVisible\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : true\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/home/home.page.ts:26\n                        \n                    \n\n            \n                \n                    Booleano para mostrar/ocultar el FAB de Login\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuOpts\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         MenuOpts[]\n\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/home/home.page.ts:38\n                        \n                    \n\n            \n                \n                    Variable de tipo Array de Opciones de Menu, para almacenar las opciones disponibles según el usuario logado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        retos\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Reto[]\n\n                    \n                \n                \n                    \n                        Valor por defecto : []\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/home/home.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userEmail\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | null\n\n                    \n                \n                \n                    \n                        Valor por defecto : null\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/home/home.page.ts:30\n                        \n                    \n\n            \n                \n                    Variable para guardar el mail del usuario logado a traves del Auth\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuarioLogado\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Usuario\n\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/home/home.page.ts:34\n                        \n                    \n\n            \n                \n                    Variable tipo Usuario para guardar la información del usuario logado\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\n\nimport { AuthService } from '../../services/auth.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { MenuOpts, Reto, Usuario } from 'src/app/interfaces/interfaces';\nimport { RetoService } from 'src/app/services/reto.service';\n\n/**\n * Componente Home. Indica la plantilla HTML que usa y su CSS.\n * Página de inicio que muestra los retos activos.\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage implements OnInit {\n\n  public retos: Reto[] = [];\n\n/**\n * Booleano para mostrar/ocultar el FAB de Login\n */\n  ionFabVisible = true;\n  /**\n   * Variable para guardar el mail del usuario logado a traves del Auth\n   */\n  userEmail: string | null = null;\n  /**\n   * Variable tipo Usuario para guardar la información del usuario logado\n   */\n  usuarioLogado: Usuario;\n  /**\n   * Variable de tipo Array de Opciones de Menu, para almacenar las opciones disponibles según el usuario logado\n   */\n  menuOpts: MenuOpts[];\n  /**\n   * Booleano que habilita/deshabilita el icono de Favoritos. Si no está logado, lo deshabilita\n   */\n \n  \n  /**\n   * Comprobamos si el usuario está logado y así mostrar el menú de una forma u otra\n   * \n   * @param authSvc Servicio para manejar la Autenticacion que conecta con Firebase Auth\n   * @param userSvc Servicio para manejar operaciones con los usuarios\n   * @param angularFireAuth Servicio Firebase auth para comprobar si usuario logado\n   */\n  constructor(private authSvc: AuthService,\n    private userSvc: UserService,\n    private angularFireAuth: AngularFireAuth,\n    private retoSvc: RetoService) {\n\n    this.angularFireAuth.onAuthStateChanged(user => {\n      if (user) {\n        // El usuario está logueado\n\n        this.ionFabVisible = false;\n        this.authSvc.getUserEmail().then(email => {\n          this.userEmail = email;\n          this.userSvc.getUserByEmail(email).subscribe(usuario => {\n            this.usuarioLogado = usuario;\n            \n            if (this.usuarioLogado.ROL === 'admin') {\n              \n              this.userSvc.getMenuOpts(['all', 'retador', 'admin'])\n                .subscribe((menuOpts: MenuOpts[]) => {\n                  \n                  this.menuOpts = menuOpts;\n                });\n             \n            } else {\n              this.userSvc.getMenuOpts(['all', 'retador'])\n                .subscribe((menuOpts: MenuOpts[]) => {\n                  \n                  this.menuOpts = menuOpts;\n                });\n            }\n          });\n\n\n        });\n      } else {\n        // El usuario no está logueado\n        \n        this.ionFabVisible = true;\n        this.userSvc.getMenuOpts(['all'])\n          .subscribe((menuOpts: MenuOpts[]) => {\n            \n            this.menuOpts = menuOpts;\n          });\n      }\n    });\n\n  }\n\n  /**\n   * Método de inicio. Carga los retos activos\n   */\n  ngOnInit() {\n\n    this.retoSvc.getRetosActivos().subscribe(retos => {\n      this.retos = retos;\n    }); \n\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n\n\n\n\n  \n  \n\n    \n\n    \n                \n                    home.page.scss\n                \n                #container {\n  text-align: center;\n\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 50%;\n  transform: translateY(-50%);\n}\n\n#container strong {\n  font-size: 20px;\n  line-height: 26px;\n}\n\n#container p {\n  font-size: 16px;\n  line-height: 22px;\n\n  color: #8c8c8c;\n\n  margin: 0;\n}\n\n#container a {\n  text-decoration: none;\n}\n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FabLoginComponent', 'selector': 'app-fab-login'},{'name': 'FavoritosPage', 'selector': 'app-favoritos'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InfoRetoComponent', 'selector': 'app-info-reto'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MisRetosPage', 'selector': 'app-mis-retos'},{'name': 'NewRetoComponent', 'selector': 'app-new-reto'},{'name': 'NewsPagePage', 'selector': 'app-news-page'},{'name': 'NoticiaComponent', 'selector': 'app-noticia'},{'name': 'NoticiasComponent', 'selector': 'app-noticias'},{'name': 'PerfilPage', 'selector': 'app-perfil'},{'name': 'RankingPage', 'selector': 'app-ranking'},{'name': 'RegistroComponent', 'selector': 'app-registro'},{'name': 'RetoComponent', 'selector': 'app-reto'},{'name': 'RetosComponent', 'selector': 'app-retos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Módulos\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Ampliar\n        Restablecer\n        Alejar\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/app/pages/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declaraciones\n                    \n                        \n                            HomePage\n                        \n                    \n                \n                \n                    Importa\n                    \n                        \n                            HomePageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { HomePage } from './home.page';\n\nimport { HomePageRoutingModule } from './home-routing.module';\n\n//import del módulo de Componentes personalizados\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule, \n    ComponentsModule\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/HomePageRoutingModule.html":{"url":"modules/HomePageRoutingModule.html","title":"module - HomePageRoutingModule","body":"\n                   \n\n\n\n\n    Módulos\n    HomePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/app/pages/home/home-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/InfoRetoComponent.html":{"url":"components/InfoRetoComponent.html","title":"component - InfoRetoComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  InfoRetoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/components/info-reto/info-reto.component.ts\n\n\n\n    \n        Descripción\n    \n    \n        Componente que muestra un ion-card con toda las actividades que sae pueden realizar con cada uno.\n\n    \n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-info-reto\n            \n\n            \n                styleUrls\n                ./info-reto.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-reto.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                esFavorito\n                            \n                            \n                                esRetoConseguido\n                            \n                            \n                                mensaje\n                            \n                            \n                                oculto\n                            \n                            \n                                reto\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                checkRetoConseguido\n                            \n                            \n                                checkRetoFavorito\n                            \n                            \n                                cierreModal\n                            \n                            \n                                compartirReto\n                            \n                            \n                                getColorNivel\n                            \n                            \n                                getIconTipo\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                quitarFavorito\n                            \n                            \n                                removeRetoConseguido\n                            \n                            \n                                setFavorito\n                            \n                            \n                                setRetoConseguido\n                            \n                        \n                    \n                \n\n                \n                    \n                        Entradas\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(retoSvc: RetoService, modalCtrl: ModalController, socialSharing: SocialSharing, avisosSvc: AvisosService, authSvc: AuthService, userSvc: UserService, platform: Platform)\n                    \n                \n                        \n                            \n                                Definido en src/app/components/info-reto/info-reto.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                                    Descripción\n                                            \n                                        \n                                        \n                                                \n                                                        retoSvc\n                                                  \n                                                        \n                                                                        RetoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que maneja la coleccion 'retos' de Firestore\n\n                                                        \n                                                \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controla el modal\n\n                                                        \n                                                \n                                                \n                                                        socialSharing\n                                                  \n                                                        \n                                                                    SocialSharing\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Componente que comparte Retos por RRSS\n\n                                                        \n                                                \n                                                \n                                                        avisosSvc\n                                                  \n                                                        \n                                                                        AvisosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Componente para mostrar avisos success/error\n\n                                                        \n                                                \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Componente para controlar el inicio de sesion\n\n                                                        \n                                                \n                                                \n                                                        userSvc\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controla si abrimos la app por Navegador Web o Movil para así usar correctamente el SocialSharing\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Entradas\n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                        \n                            \n                                    Definido en src/app/components/info-reto/info-reto.component.ts:27\n                            \n                        \n                \n                    \n                        Recibe el id del Reto a través de un Input que se envia desde el Card  *\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        checkRetoConseguido\n                        \n                    \n                \n            \n            \n                \ncheckRetoConseguido(retoId: string, user: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/info-reto/info-reto.component.ts:184\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    retoId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkRetoFavorito\n                        \n                    \n                \n            \n            \n                \ncheckRetoFavorito(retoId: string, user: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/info-reto/info-reto.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    retoId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cierreModal\n                        \n                    \n                \n            \n            \n                \ncierreModal()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/info-reto/info-reto.component.ts:224\n                \n            \n\n\n            \n                \n                    Método que cierra el modal para volver al listado\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        compartirReto\n                        \n                    \n                \n            \n            \n                \ncompartirReto()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/info-reto/info-reto.component.ts:128\n                \n            \n\n\n            \n                \n                    Método para compartir el reto en las aplicaciones disponibles en el terminal (Mail o RRSS)\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColorNivel\n                        \n                    \n                \n            \n            \n                \ngetColorNivel(nivel: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/info-reto/info-reto.component.ts:111\n                \n            \n\n\n            \n                \n                    Método que asigna un color al icono dependiendo del nivel de dificultad del reto\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    nivel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Nivel de dificultad del Reto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         string\n\n                    \n                    \n                        Retorna el color a poner en el icono\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIconTipo\n                        \n                    \n                \n            \n            \n                \ngetIconTipo(tipo: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/info-reto/info-reto.component.ts:92\n                \n            \n\n\n            \n                \n                    Método que asigna un icono dependiendo del tipo de reto pasado por parámetro\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    tipo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tipo de reto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         string\n\n                    \n                    \n                        Retorna el nombre del incono de ionicons.io\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/info-reto/info-reto.component.ts:72\n                \n            \n\n\n            \n                \n                    Método de inicio.\nCarga el reto con un Id pasado por parámetro a través del Input.\nLo guarda en un array de retos, pero solo el de la posición 0.\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quitarFavorito\n                        \n                    \n                \n            \n            \n                \nquitarFavorito(retoId: string, email: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/info-reto/info-reto.component.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    retoId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRetoConseguido\n                        \n                    \n                \n            \n            \n                \nremoveRetoConseguido(retoId: string, email: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/info-reto/info-reto.component.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    retoId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFavorito\n                        \n                    \n                \n            \n            \n                \nsetFavorito(retoId: string, user: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/info-reto/info-reto.component.ts:158\n                \n            \n\n\n            \n                \n                    Método para marcar como Favorito un Reto concreto al usuario logado\nAl finalizar muestra el toast con el mensaje de success o error\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    retoId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ID del reto a marcar como Favorito\n\n                                    \n                                \n                                \n                                    user\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Usuario que marca el Favorito\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRetoConseguido\n                        \n                    \n                \n            \n            \n                \nsetRetoConseguido(retoId: string, user: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/info-reto/info-reto.component.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    retoId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definido en src/app/components/info-reto/info-reto.component.ts:43\n                        \n                    \n\n            \n                \n                    Variable string para almacenar el email del usuario logado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        esFavorito\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definido en src/app/components/info-reto/info-reto.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        esRetoConseguido\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definido en src/app/components/info-reto/info-reto.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mensaje\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valor por defecto : 'Te reto!'\n                    \n                \n                    \n                        \n                                Definido en src/app/components/info-reto/info-reto.component.ts:39\n                        \n                    \n\n            \n                \n                    Mensaje standard para el botón de compartir en RRSS\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oculto\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                \n                    \n                        Valor por defecto : 150\n                    \n                \n                    \n                        \n                                Definido en src/app/components/info-reto/info-reto.component.ts:35\n                        \n                    \n\n            \n                \n                    Esta variable sirve para mostrar una descripcion corta de 150 caracteres, y luego la completa si le damos a Mostrar más\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reto\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Reto\n\n                    \n                \n                    \n                        \n                                Definido en src/app/components/info-reto/info-reto.component.ts:31\n                        \n                    \n\n            \n                \n                    Declaramos un objeto Reto para guardar la información a mostrar.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\nimport { ModalController, Platform } from '@ionic/angular';\nimport { SocialSharing } from '@awesome-cordova-plugins/social-sharing/ngx';\n\nimport { Reto } from 'src/app/interfaces/interfaces';\nimport { RetoService } from 'src/app/services/reto.service';\nimport { AvisosService } from 'src/app/services/avisos.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { UserService } from 'src/app/services/user.service';\n\n/**\n * Componente que muestra un ion-card con toda las actividades que sae pueden realizar con cada uno.\n */\n@Component({\n  selector: 'app-info-reto',\n  templateUrl: './info-reto.component.html',\n  styleUrls: ['./info-reto.component.scss'],\n})\n\nexport class InfoRetoComponent implements OnInit {\n\n  /**\n   * Recibe el id del Reto a través de un Input que se envia desde el Card  * \n   */\n  @Input() id: string;\n  /**\n   * Declaramos un objeto Reto para guardar la información a mostrar.\n   */\n  reto: Reto;\n  /**\n   * Esta variable sirve para mostrar una descripcion corta de 150 caracteres, y luego la completa si le damos a Mostrar más\n   */\n  oculto = 150;\n  /**\n   * Mensaje standard para el botón de compartir en RRSS\n   */\n  mensaje: string = 'Te reto!';\n  /** Variable string para almacenar el email del usuario logado\n   * \n   */\n  email: string;\n\n  esFavorito: boolean;\n\n  esRetoConseguido: boolean;\n\n  /**\n   *  \n   * @param retoSvc Servicio que maneja la coleccion 'retos' de Firestore\n   * @param modalCtrl Controla el modal\n   * @param socialSharing Componente que comparte Retos por RRSS\n   * @param avisosSvc Componente para mostrar avisos success/error\n   * @param authSvc Componente para controlar el inicio de sesion\n   * @param platform Controla si abrimos la app por Navegador Web o Movil para así usar correctamente el SocialSharing\n   */\n  constructor(private retoSvc: RetoService,\n    private modalCtrl: ModalController,\n    private socialSharing: SocialSharing,\n    private avisosSvc: AvisosService,\n    private authSvc: AuthService,\n    private userSvc: UserService,\n    private platform: Platform\n  ) { }\n\n  /**\n   * Método de inicio.\n   * Carga el reto con un Id pasado por parámetro a través del Input. \n   * Lo guarda en un array de retos, pero solo el de la posición 0.\n   */\n  ngOnInit() {\n\n    this.authSvc.getUserEmail().then(email => {\n      this.email = email;\n\n    });\n\n    this.retoSvc.getRetosById(this.id).subscribe(retos => {\n      this.reto = retos[0];\n      this.checkRetoFavorito(this.reto.ID, this.email);\n      this.checkRetoConseguido(this.reto.ID, this.email);\n    });\n    \n  }\n\n  /**\n   * Método que asigna un icono dependiendo del tipo de reto pasado por parámetro\n   * @param tipo Tipo de reto\n   * @returns Retorna el nombre del incono de ionicons.io\n   */\n  getIconTipo(tipo: string): string {\n\n    switch (tipo) {\n      case 'telescopio':\n        return 'telescope-outline';\n      case 'prismaticos':\n        return 'recording-outline';\n      case 'ocular':\n        return 'eye-outline';\n      default:\n        return 'help';\n    }\n  }\n\n  /**\n   * Método que asigna un color al icono dependiendo del nivel de dificultad del reto \n   * @param nivel Nivel de dificultad del Reto\n   * @returns Retorna el color a poner en el icono\n   */\n  getColorNivel(nivel: string): string {\n\n    switch (nivel) {\n      case 'facil':\n        return 'success';\n      case 'intermedio':\n        return 'warning';\n      case 'dificil':\n        return 'danger';\n      default:\n        return 'help';\n    }\n  }\n\n  /**\n   * Método para compartir el reto en las aplicaciones disponibles en el terminal (Mail o RRSS)\n   */\n  compartirReto() {\n    if (this.platform.is('cordova')) {\n      this.socialSharing.share(this.mensaje);\n    } else {\n      if (navigator.share) {\n        navigator.share({\n          text: this.mensaje,\n          url: ''\n        })\n          .then(() => console.log('Compartido!'))\n          .catch((error) => console.log('Error compartiendo', error));\n      }\n    }\n  }\n\n  checkRetoFavorito(retoId: string, user: string) {\n\n    this.retoSvc.checkFavorito(retoId, user).subscribe(existe => {\n      this.esFavorito = existe;\n      console.log(this.esFavorito);\n    });\n  }\n\n\n  /**\n   * Método para marcar como Favorito un Reto concreto al usuario logado\n   * Al finalizar muestra el toast con el mensaje de success o error\n   * @param retoId ID del reto a marcar como Favorito\n   * @param user Usuario que marca el Favorito\n   */\n  setFavorito(retoId: string, user: string) {\n    try {\n\n      this.retoSvc.addFavorito(retoId, user);\n      this.avisosSvc.presentToast('Favorito añadido', 'success');\n\n    } catch (error) {\n      this.avisosSvc.presentToast('Error al añadir Favorito', 'danger');\n    }\n  }\n\n  quitarFavorito(retoId: string, email: string) {\n    try {\n\n      this.retoSvc.getFavorito(retoId, email).subscribe(fav => {\n\n        this.retoSvc.deleteFavorito(fav[0].ID_FAV);\n      })\n\n\n      this.avisosSvc.presentToast('Favorito eliminado correctamente', 'success');\n    } catch (error) {\n      this.avisosSvc.presentToast('Error al eliminar el Favorito', 'danger');\n    }\n  }\n\n  checkRetoConseguido(retoId: string, user: string) {\n\n    this.retoSvc.checkRetoConseguido(retoId, user).subscribe(existe => {\n      this.esRetoConseguido = existe;\n      console.log(this.esRetoConseguido);\n    });\n  }\n\n  setRetoConseguido(retoId: string, user: string) {\n    try {\n      console.log('vamos a conseguir el reto');\n      this.retoSvc.addRetoConseguido(retoId, user);\n      this.avisosSvc.presentToast('Reto conseguido', 'success');\n      this.userSvc.getTotalPuntosByUser(this.email).subscribe(totalPuntos => {\n\n        this.userSvc.updateUserPuntos(this.email, totalPuntos);\n      })\n\n    } catch (error) {\n      this.avisosSvc.presentToast('Error al conseguir Reto', 'danger');\n    }\n  }\n\n  removeRetoConseguido(retoId: string, email: string) {\n    try {\n\n      this.retoSvc.getRetoConseguido(retoId, email).subscribe(retoConseguido => {\n\n        this.retoSvc.deleteRetoConseguido(retoConseguido[0].ID_RETO_CONSEGUIDO);\n        this.avisosSvc.presentToast('Reto Conseguido eliminado', 'success');\n      });\n    } catch (error) {\n      this.avisosSvc.presentToast('Error al eliminar Reto', 'danger');\n    }\n  }\n\n\n  /**\n   * Método que cierra el modal para volver al listado\n   */\n  cierreModal() {\n    this.modalCtrl.dismiss();\n  }\n}\n\n    \n\n    \n        \n \n    \n      {{reto?.TITULO}}\n    \n \n\n\n\n  \n    \n  \n\n  \n    \n      \n        \n          \n          Tipo: \n          {{reto?.TIPO}}\n        \n        \n          \n          Nivel: {{reto?.NIVEL}}\n        \n        \n          \n        \n          \n          \n        \n        \n        \n      \n     \n    \n   \n  \n\n  \n    \n      \n        {{reto?.DESCRIPCION | slice: 0: oculto}}...\n        Leer más!\n      \n    \n  \n\n\n\n\n\n\n  \n    Regresar\n  \n\n    \n\n    \n                \n                    ./info-reto.component.scss\n                \n                .titulo {\n    width: 100%;\n    position: absolute;\n    color: rgb(252, 163, 17);;\n    background-color: black; \n    padding: 5px 5px 40px 5px;\n}\n\n.titulo h1{\n    position: absolute;\n    top: 28px;\n    left: 5px;\n}\n\n\n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           {{reto?.TITULO}}                                                     Tipo:           {{reto?.TIPO}}                                    Nivel: {{reto?.NIVEL}}                                                                                                                      {{reto?.DESCRIPCION | slice: 0: oculto}}...        Leer más!                  Regresar  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FabLoginComponent', 'selector': 'app-fab-login'},{'name': 'FavoritosPage', 'selector': 'app-favoritos'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InfoRetoComponent', 'selector': 'app-info-reto'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MisRetosPage', 'selector': 'app-mis-retos'},{'name': 'NewRetoComponent', 'selector': 'app-new-reto'},{'name': 'NewsPagePage', 'selector': 'app-news-page'},{'name': 'NoticiaComponent', 'selector': 'app-noticia'},{'name': 'NoticiasComponent', 'selector': 'app-noticias'},{'name': 'PerfilPage', 'selector': 'app-perfil'},{'name': 'RankingPage', 'selector': 'app-ranking'},{'name': 'RegistroComponent', 'selector': 'app-registro'},{'name': 'RetoComponent', 'selector': 'app-reto'},{'name': 'RetosComponent', 'selector': 'app-retos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoRetoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                errorMsg\n                            \n                            \n                                loginForm\n                            \n                            \n                                successMsg\n                            \n                            \n                                usuario\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                gAuth\n                            \n                            \n                                    Async\n                                logIn\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                registroModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authSvc: AuthService, userSvc: UserService, fBuilder: FormBuilder, modalCtrl: ModalController, navCtrl: NavController)\n                    \n                \n                        \n                            \n                                Definido en src/app/components/login/login.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                                    Descripción\n                                            \n                                        \n                                        \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para el manejo de la Autenticacion con Firebase Auth\n\n                                                        \n                                                \n                                                \n                                                        userSvc\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        fBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Componente de Formulario cde Login\n\n                                                        \n                                                \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controlador del Modal para mostrarlo/cerrarlo\n\n                                                        \n                                                \n                                                \n                                                        navCtrl\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controlador de navegación por la app\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/login/login.component.ts:110\n                \n            \n\n\n            \n                \n                    Cierra el propio Modal\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gAuth\n                        \n                    \n                \n            \n            \n                \ngAuth()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/login/login.component.ts:91\n                \n            \n\n\n            \n                \n                    Autenticacion de Google (NO IMPLEMENTADO)\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        logIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    logIn(value: any)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/login/login.component.ts:75\n                \n            \n\n\n            \n                \n                    Realiza el Login apoyandose en el Servicio Auth y redirecciona al Home\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Valores pasados por el Formulario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/login/login.component.ts:56\n                \n            \n\n\n            \n                \n                    Creamos el formulario con los validadores necesarios\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        registroModal\n                        \n                    \n                \n            \n            \n                \n                    \n                    registroModal()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/login/login.component.ts:99\n                \n            \n\n\n            \n                \n                    Muestra un Modal para el Registro del usuario\n\n\n                    \n                    \n                    \n                        Devuelve :     unknown\n\n                    \n                    \n                        La vista del Modal\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMsg\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Error[]\n\n                    \n                \n                \n                    \n                        Valor por defecto : []\n                    \n                \n                    \n                        \n                                Definido en src/app/components/login/login.component.ts:32\n                        \n                    \n\n            \n                \n                    Texto a mostrar si el acceso es erroneo\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         FormGroup\n\n                    \n                \n                    \n                        \n                                Definido en src/app/components/login/login.component.ts:24\n                        \n                    \n\n            \n                \n                    Declaración del Formulario de Login\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMsg\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valor por defecto : ''\n                    \n                \n                    \n                        \n                                Definido en src/app/components/login/login.component.ts:28\n                        \n                    \n\n            \n                \n                    Texto a mostrar si el acceso es correcto\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuario\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Usuario\n\n                    \n                \n                    \n                        \n                                Definido en src/app/components/login/login.component.ts:36\n                        \n                    \n\n            \n                \n                    Objeto tipo Usuario para guardar la información que se necesite manejar\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ModalController, NavController } from '@ionic/angular';\n\nimport { AuthService } from 'src/app/services/auth.service';\n\nimport { RegistroComponent } from '../registro/registro.component';\nimport { Error } from 'src/app/interfaces/errores';\nimport { Usuario } from 'src/app/interfaces/interfaces';\nimport { UserService } from 'src/app/services/user.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n\n  /**\n   * Declaración del Formulario de Login\n   */\n  loginForm: FormGroup;\n  /**\n   * Texto a mostrar si el acceso es correcto\n   */\n  successMsg: string = '';\n  /**\n   * Texto a mostrar si el acceso es erroneo\n   */\n  errorMsg: Error[] = [];\n  /**\n   * Objeto tipo Usuario para guardar la información que se necesite manejar\n   */\n  usuario: Usuario;\n\n  /**\n   * \n   * @param authSvc Servicio para el manejo de la Autenticacion con Firebase Auth\n   * @param fBuilder Componente de Formulario cde Login\n   * @param modalCtrl Controlador del Modal para mostrarlo/cerrarlo\n   * @param navCtrl Controlador de navegación por la app\n   */\n  constructor(private authSvc: AuthService,\n    private userSvc: UserService,\n    private fBuilder: FormBuilder,\n    private modalCtrl: ModalController,\n    private navCtrl: NavController) {\n\n  }\n\n  /**\n   * Creamos el formulario con los validadores necesarios\n   */\n  ngOnInit() {\n\n    this.loginForm = this.fBuilder.group({\n      email: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      password: new FormControl('', Validators.compose([\n        Validators.minLength(6),\n        Validators.required\n      ])),\n    });\n\n  }\n\n  /**Realiza el Login apoyandose en el Servicio Auth y redirecciona al Home\n   * \n   * @param value Valores pasados por el Formulario\n   */\n  async logIn(value: any) {\n    try {\n      await this.authSvc.signIn(value);\n      this.navCtrl.navigateRoot('/home');\n      const userEmail = this.loginForm.value.email;\n      this.userSvc.setUserEmail(userEmail);\n      console.log('logado con', userEmail);\n\n    } catch (error) {\n      console.log('Error al iniciar sesión:', error);\n    }\n  }\n\n  /**\n   * Autenticacion de Google (NO IMPLEMENTADO)\n   */\n  gAuth() {\n\n  }\n\n/**\n * Muestra un Modal para el Registro del usuario\n * @returns La vista del Modal\n */\n  async registroModal() {\n    const modal = await this.modalCtrl.create({\n      component: RegistroComponent,\n      cssClass: 'loginRegisterModal'\n    });\n    return await modal.present();\n  }\n\n  /**\n   * Cierra el propio Modal\n   */\n  closeModal() {\n    this.modalCtrl.dismiss();\n  }\n\n}\n\n    \n\n    \n        \n  \n    Login\n  \n\n  \n    \n      Email\n      \n    \n\n \n      \n        {{ error.email[0].message }}\n      \n     -->\n\n    \n      Password\n      \n    \n\n  \n      \n        {{ error.password[1].message }}\n      \n     -->\n\n    Log in\n\n   \n      Login con Google\n     -->\n\n    {{errorMsg}}\n  \n  Aun no registrado?Registrar\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Login              Email                         {{ error.email[0].message }}           -->          Password                          {{ error.password[1].message }}           -->    Log in         Login con Google     -->    {{errorMsg}}    Aun no registrado?Registrar'\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FabLoginComponent', 'selector': 'app-fab-login'},{'name': 'FavoritosPage', 'selector': 'app-favoritos'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InfoRetoComponent', 'selector': 'app-info-reto'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MisRetosPage', 'selector': 'app-mis-retos'},{'name': 'NewRetoComponent', 'selector': 'app-new-reto'},{'name': 'NewsPagePage', 'selector': 'app-news-page'},{'name': 'NoticiaComponent', 'selector': 'app-noticia'},{'name': 'NoticiasComponent', 'selector': 'app-noticias'},{'name': 'PerfilPage', 'selector': 'app-perfil'},{'name': 'RankingPage', 'selector': 'app-ranking'},{'name': 'RegistroComponent', 'selector': 'app-registro'},{'name': 'RetoComponent', 'selector': 'app-reto'},{'name': 'RetosComponent', 'selector': 'app-retos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/MenuComponent.html":{"url":"components/MenuComponent.html","title":"component - MenuComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  MenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/components/menu/menu.component.ts\n\n\n\n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menu\n            \n\n            \n                styleUrls\n                ./menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                navigateToPage\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Entradas\n                    \n                \n                \n                    \n                        \n                            \n                                menuOpts\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Definido en src/app/components/menu/menu.component.ts:15\n                            \n                        \n\n                \n                    \n                            Contructor de clase\n\n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                                    Descripción\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Componente de manejo de rutas del Menu\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Entradas\n        \n            \n                \n                    \n                        \n                        menuOpts\n                    \n                \n                \n                    \n                        Tipo :         MenuOpts[]\n\n                    \n                \n                        \n                            \n                                    Definido en src/app/components/menu/menu.component.ts:15\n                            \n                        \n                \n                    \n                        Recibe como parametro de entrada los elementos de menú disponibles según el rol del usuario\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToPage\n                        \n                    \n                \n            \n            \n                \nnavigateToPage(url: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/menu/menu.component.ts:34\n                \n            \n\n\n            \n                \n                    Navega a la página solicitada\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a la que va navegar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/menu/menu.component.ts:26\n                \n            \n\n\n            \n                \n                    Método de inicio. No hace nada en la carga\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MenuOpts } from '../../interfaces/interfaces';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss'],\n})\nexport class MenuComponent implements OnInit {\n\n  /**\n   * Recibe como parametro de entrada los elementos de menú disponibles según el rol del usuario\n   */\n  @Input()  menuOpts: MenuOpts[];\n\n  /**\n   * Contructor de clase\n   * @param router Componente de manejo de rutas del Menu\n   */\n  constructor(private router: Router) { }\n\n  /**\n   * Método de inicio. No hace nada en la carga\n   */\n  ngOnInit() {\n\n  }\n\n/**\n * Navega a la página solicitada\n * @param url a la que va navegar\n */\n  navigateToPage(url: string) {\n    this.router.navigate([url]);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n           \n    \n  \n\n    \n\n    \n                \n                    ./menu.component.scss\n                \n                ion-fab-button {\n    --border-radius: 15px;\n    --box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, .3), 0px 1px 3px 1px rgba(0, 0, 0, .15);\n    --color: black;\n  }\n  \n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                               '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FabLoginComponent', 'selector': 'app-fab-login'},{'name': 'FavoritosPage', 'selector': 'app-favoritos'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InfoRetoComponent', 'selector': 'app-info-reto'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MisRetosPage', 'selector': 'app-mis-retos'},{'name': 'NewRetoComponent', 'selector': 'app-new-reto'},{'name': 'NewsPagePage', 'selector': 'app-news-page'},{'name': 'NoticiaComponent', 'selector': 'app-noticia'},{'name': 'NoticiasComponent', 'selector': 'app-noticias'},{'name': 'PerfilPage', 'selector': 'app-perfil'},{'name': 'RankingPage', 'selector': 'app-ranking'},{'name': 'RegistroComponent', 'selector': 'app-registro'},{'name': 'RetoComponent', 'selector': 'app-reto'},{'name': 'RetosComponent', 'selector': 'app-retos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/MenuOpts.html":{"url":"interfaces/MenuOpts.html","title":"interface - MenuOpts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuOpts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Descripción\n            \n            \n                Interface para el manejo del Menu. Segun el rol del usuario, se cargaran unas opciones u otras.\n\n            \n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            redirectTo\n                                        \n                                \n                                \n                                        \n                                            rol\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Icono de la opcion de menu\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre a mostrar en el menu\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redirectTo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        redirectTo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Página o tura a la que nos lleva la opcion\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Roles que tienen acceso: all, retador, administrador\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Usuario {\n  /**\n   * Identificador del usuario. Es el mismo que el autogenerado por Firebase para facilitar el manejo del objeto\n   */\n  ID: string,\n\n  /**\n   * Nombre del usuario\n   */\n  NOMBRE: string,\n\n  /**\n   * Email del usuario\n   */\n  EMAIL: string,\n\n  /**\n   * Contraseña del usuario. No se envia ni se guarda. Solo se usa para el método de cambio de Password\n   */\n  PASSWORD: string,\n\n  /**\n   * Rol del usuario. Puede ser Anónimo, Retador o Administrador\n   */\n  ROL: string,\n\n  /**\n   * URL de acceso al avatar.\n   */\n  AVATAR: string,\n\n  /**\n   * Puntos totales según el número de retos conseguidos\n   */\n  PUNTOS: number\n}\n\n/**\n * Interface para el manejo de retos. COLECCION: retos\n */\nexport interface Reto {\n\n  /**\n   * Identificador del Reto. Es el mismo que el autogenerado por Firestore.\n   */\n  ID: string,\n\n  /**\n   * Titulo del reto\n   */\n  TITULO: string,\n\n  /**\n   * Descripcion larga del reto\n   */\n  DESCRIPCION: string,\n\n  /**\n   * Tipo de reto. Puede ser ocular, prismaticos o telescopio\n   */\n  TIPO: string,\n\n  /**\n   * Nivel del reto. Puede ser facil, intermedio o dificil\n   */\n  NIVEL: string,\n\n  /**\n   * Indica si el reto esta activo o no. El retador puede manejar los suyos. Los administradores, todos.\n   */\n  ACTIVO: boolean,\n\n  /**\n   * Marca retos destacados. TODAVIA NO ESTA IMPLEMENTADO\n   */\n  DESTACADO: boolean,\n\n  /**\n   * Email del retador.\n   */\n  RETADOR: string,\n\n  /**\n   * Imagen del reto subida por el retador\n   */\n  IMAGEN: string,\n}\n\n/**\n * Interface para manejar Favoritos. COLECCION: favoritos\n */\nexport interface Favorito {\n  /**\n   * Identificador del Reto.\n   */\n  ID_RETO: string;\n\n  /**\n   * Identificador de Favorito. Se guarda como campo el Identificador autogenerado para que sea más accesible \n   */\n  ID_FAV: string;\n\n  /**\n   * Email del usuario que marca el Favorito\n   */\n  USER: string;\n}\n\n/**\n * Interface para el manejo de los retos conseguidos. COLECCION: retosconseguidos\n */\nexport interface RetoConseguido {\n  /**\n   * Identificador del Reto.\n   */\n  ID_RETO: string;\n\n  /**\n   * Identificador del objeto, igual al autogenerado por Firestore\n   */\n  ID_RETO_CONSEGUIDO: string;\n\n  /**\n   * Email dle usuario que ha conseguido el reto\n   */\n  USER: string;\n\n  /**\n   * Puntos conseguidos por ese reto\n   */\n  PUNTOS: number;\n}\n\n/**\n * Interface para el manejo del Menu. Segun el rol del usuario, se cargaran unas opciones u otras.\n */\nexport interface MenuOpts {\n\n  /**\n   * Icono de la opcion de menu\n   */\n  icon: string;\n\n  /**\n   * Nombre a mostrar en el menu\n   */\n  name: string;\n\n  /**\n   * Página o tura a la que nos lleva la opcion\n   */\n  redirectTo: string;\n\n  /**\n   * Roles que tienen acceso: all, retador, administrador\n   */\n  rol: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"injectables/MenuService.html":{"url":"injectables/MenuService.html","title":"injectable - MenuService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Inyectables\n  MenuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/app/services/menu.service.ts\n        \n\n\n\n\n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                enableFav\n                            \n                            \n                                ionFabVisible\n                            \n                            \n                                menuOpts\n                            \n                            \n                                userEmail\n                            \n                            \n                                usuarioLogado\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                setMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(angularFireAuth: AngularFireAuth, authSvc: AuthService, userSvc: UserService)\n                    \n                \n                        \n                            \n                                Definido en src/app/services/menu.service.ts:32\n                            \n                        \n\n                \n                    \n                            Constructor de clase\n\n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                                    Descripción\n                                            \n                                        \n                                        \n                                                \n                                                        angularFireAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de Angular que gestiona el Auth de Firebase\n\n                                                        \n                                                \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para gestionar los inicios de sesión y su estado\n\n                                                        \n                                                \n                                                \n                                                        userSvc\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que gestiona todo lo relacionado con los usuarios\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        setMenu\n                        \n                    \n                \n            \n            \n                \nsetMenu()\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/menu.service.ts:47\n                \n            \n\n\n            \n                \n                    Metodo que configura el menú dependiendo de si se está logado o no y el rol del usuario.\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                        enableFav\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : false\n                    \n                \n                    \n                        \n                                Definido en src/app/services/menu.service.ts:32\n                        \n                    \n\n            \n                \n                    Booleano que habilita/deshabilita el icono de Favoritos. Si no está logado, lo deshabilita\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ionFabVisible\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : true\n                    \n                \n                    \n                        \n                                Definido en src/app/services/menu.service.ts:16\n                        \n                    \n\n            \n                \n                    Booleano para mostrar/ocultar el FAB de Login\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuOpts\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         MenuOpts[]\n\n                    \n                \n                    \n                        \n                                Definido en src/app/services/menu.service.ts:28\n                        \n                    \n\n            \n                \n                    Variable de tipo Array de Opciones de Menu, para almacenar las opciones disponibles según el usuario logado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userEmail\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     string | null\n\n                    \n                \n                \n                    \n                        Valor por defecto : null\n                    \n                \n                    \n                        \n                                Definido en src/app/services/menu.service.ts:20\n                        \n                    \n\n            \n                \n                    Variable para guardar el mail del usuario logado a traves del Auth\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuarioLogado\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Usuario\n\n                    \n                \n                    \n                        \n                                Definido en src/app/services/menu.service.ts:24\n                        \n                    \n\n            \n                \n                    Variable tipo Usuario para guardar la información del usuario logado\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\n\nimport { MenuOpts, Usuario } from '../interfaces/interfaces';\nimport { AuthService } from './auth.service';\nimport { UserService } from './user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MenuService {\n  \n  /**\n * Booleano para mostrar/ocultar el FAB de Login\n */\n  ionFabVisible = true;\n  /**\n   * Variable para guardar el mail del usuario logado a traves del Auth\n   */\n  userEmail: string | null = null;\n  /**\n   * Variable tipo Usuario para guardar la información del usuario logado\n   */\n  usuarioLogado: Usuario;\n  /**\n   * Variable de tipo Array de Opciones de Menu, para almacenar las opciones disponibles según el usuario logado\n   */\n  menuOpts: MenuOpts[];\n  /**\n   * Booleano que habilita/deshabilita el icono de Favoritos. Si no está logado, lo deshabilita\n   */\n  enableFav = false;\n\n  /**\n   * Constructor de clase\n   * @param angularFireAuth Servicio de Angular que gestiona el Auth de Firebase\n   * @param authSvc Servicio para gestionar los inicios de sesión y su estado\n   * @param userSvc Servicio que gestiona todo lo relacionado con los usuarios\n   */\n  constructor(private angularFireAuth: AngularFireAuth,\n    private authSvc: AuthService,\n    private userSvc: UserService) { }\n\n    /**\n     * Metodo que configura el menú dependiendo de si se está logado o no y el rol del usuario.\n     */\n    setMenu() {\n      this.angularFireAuth.onAuthStateChanged(user => {\n        if (user) {\n\n          // El usuario está logueado\n\n            this.ionFabVisible = false;\n          this.authSvc.getUserEmail().then(email => {\n            this.userEmail = email;\n            this.userSvc.getUserByEmail(email).subscribe(usuario => {\n              this.usuarioLogado = usuario;\n              console.log('El usuario está logueado con ', this.usuarioLogado.EMAIL);\n              if (this.usuarioLogado.ROL === 'admin') {\n                console.log(this.usuarioLogado.ROL);\n                this.userSvc.getMenuOpts(['all', 'retador', 'admin'])\n                  .subscribe((menuOpts: MenuOpts[]) => {\n                    console.log(menuOpts);\n                    this.menuOpts = menuOpts;\n                  });\n                this.enableFav = true;\n              } else {\n                this.userSvc.getMenuOpts(['all', 'retador'])\n                  .subscribe((menuOpts: MenuOpts[]) => {\n                    console.log(menuOpts);\n                    this.menuOpts = menuOpts;\n                  });\n              }\n            });  \n          });\n        } else {\n\n          // El usuario no está logueado\n\n          console.log('El usuario no está logueado');\n          this.ionFabVisible = true;\n          this.userSvc.getMenuOpts(['all'])\n            .subscribe((menuOpts: MenuOpts[]) => {\n              console.log(menuOpts);\n              this.menuOpts = menuOpts;\n            });\n        }\n      });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/MisRetosPage.html":{"url":"components/MisRetosPage.html","title":"component - MisRetosPage","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  MisRetosPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/pages/mis-retos/mis-retos.page.ts\n\n\n\n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-mis-retos\n            \n\n            \n                styleUrls\n                ./mis-retos.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./mis-retos.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Public\n                                menuSvc\n                            \n                            \n                                retos\n                            \n                            \n                                usuario\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                cambiarEstado\n                            \n                            \n                                deleteReto\n                            \n                            \n                                    Async\n                                newReto\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                verDetalle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(menuSvc: MenuService, retoSvc: RetoService, authSvc: AuthService, userSvc: UserService, avisosSvc: AvisosService, modalCtrl: ModalController)\n                    \n                \n                        \n                            \n                                Definido en src/app/pages/mis-retos/mis-retos.page.ts:35\n                            \n                        \n\n                \n                    \n                            Constructor de Clase, asigna el menu correspondiente dependiendo del rol\n\n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                                    Descripción\n                                            \n                                        \n                                        \n                                                \n                                                        menuSvc\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que prepara el menú\n\n                                                        \n                                                \n                                                \n                                                        retoSvc\n                                                  \n                                                        \n                                                                        RetoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para el manejo de los Retos\n\n                                                        \n                                                \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que se encarga de comprobar el usuario logado\n\n                                                        \n                                                \n                                                \n                                                        userSvc\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que maneja al usuario logado para obtener el rol\n\n                                                        \n                                                \n                                                \n                                                        avisosSvc\n                                                  \n                                                        \n                                                                        AvisosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de avisos a través del Toast\n\n                                                        \n                                                \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controlador de carga del Modal de creación de reto.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        cambiarEstado\n                        \n                    \n                \n            \n            \n                \ncambiarEstado(id: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/pages/mis-retos/mis-retos.page.ts:96\n                \n            \n\n\n            \n                \n                    Cambia el reto a activo/inactivo y muestra el aviso con el resultado.\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id del reto a cambiar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteReto\n                        \n                    \n                \n            \n            \n                \ndeleteReto(id: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/pages/mis-retos/mis-retos.page.ts:111\n                \n            \n\n\n            \n                \n                    Elimina el reto seleccionado\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id del reto a eliminar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        newReto\n                        \n                    \n                \n            \n            \n                \n                    \n                    newReto(id: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/pages/mis-retos/mis-retos.page.ts:78\n                \n            \n\n\n            \n                \n                    Carga el Modal con el formulario para crear un nuevo reto\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Pasa como parámetro el id del usuario que creará el reto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/pages/mis-retos/mis-retos.page.ts:61\n                \n            \n\n\n            \n                \n                    Metodo de inicio.\nComprueba el usuario logado para el menú y carga sus retos.\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verDetalle\n                        \n                    \n                \n            \n            \n                \n                    \n                    verDetalle(id: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/pages/mis-retos/mis-retos.page.ts:125\n                \n            \n\n\n            \n                \n                    Carga el modal con la info detallada del reto\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id del reto a mostrar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/mis-retos/mis-retos.page.ts:25\n                        \n                    \n\n            \n                \n                    Variable para guardar el email del usuario logado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        menuSvc\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         MenuService\n\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/mis-retos/mis-retos.page.ts:46\n                        \n                    \n\n            \n                \n                    Servicio que prepara el menú\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        retos\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Reto[]\n\n                    \n                \n                \n                    \n                        Valor por defecto : []\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/mis-retos/mis-retos.page.ts:35\n                        \n                    \n\n            \n                \n                    array de objetos tipo Reto para guardarlos y mostrarlos\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuario\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Usuario\n\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/mis-retos/mis-retos.page.ts:30\n                        \n                    \n\n            \n                \n                    Objeto para almacenar los datos del usuario logado y mostrar sus retos\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { ModalController } from '@ionic/angular';\n\nimport { Reto, Usuario } from 'src/app/interfaces/interfaces';\nimport { AuthService } from '../../services/auth.service';\nimport { UserService } from '../../services/user.service';\nimport { MenuService } from '../../services/menu.service';\nimport { RetoService } from '../../services/reto.service';\nimport { AvisosService } from '../../services/avisos.service';\nimport { NewRetoComponent } from 'src/app/components/new-reto/new-reto.component';\nimport { InfoRetoComponent } from 'src/app/components/info-reto/info-reto.component';\n\n\n@Component({\n  selector: 'app-mis-retos',\n  templateUrl: './mis-retos.page.html',\n  styleUrls: ['./mis-retos.page.scss'],\n})\nexport class MisRetosPage implements OnInit {\n\n  /**\n   * Variable para guardar el email del usuario logado\n   */\n  email: string;\n\n  /**\n   * Objeto para almacenar los datos del usuario logado y mostrar sus retos\n   */\n  usuario: Usuario;\n\n  /**\n   * array de objetos tipo Reto para guardarlos y mostrarlos\n   */\n  retos: Reto[] = [];\n\n  /**\n   * Constructor de Clase, asigna el menu correspondiente dependiendo del rol\n   * @param menuSvc Servicio que prepara el menú\n   * @param retoSvc Servicio para el manejo de los Retos\n   * @param authSvc Servicio que se encarga de comprobar el usuario logado\n   * @param userSvc Servicio que maneja al usuario logado para obtener el rol\n   * @param avisosSvc Servicio de avisos a través del Toast\n   * @param modalCtrl Controlador de carga del Modal de creación de reto.\n   */\n  constructor(public menuSvc: MenuService,\n    private retoSvc: RetoService,\n    private authSvc: AuthService,\n    private userSvc: UserService,\n    private avisosSvc: AvisosService,\n    private modalCtrl: ModalController) {\n\n    this.menuSvc.setMenu();\n\n  }\n\n  /**\n   * Metodo de inicio.\n   * Comprueba el usuario logado para el menú y carga sus retos.\n   */\n  ngOnInit() {\n    this.authSvc.getUserEmail().then(email => {\n      this.email = email;\n      this.userSvc.getUserByEmail(email).subscribe(usuario => {\n        this.usuario = usuario;\n      });\n      this.retoSvc.getRetosByUser(email).subscribe(retos => {\n        this.retos = retos;\n      });\n    });\n\n  }\n\n  /**\n   * Carga el Modal con el formulario para crear un nuevo reto\n   * @param id Pasa como parámetro el id del usuario que creará el reto\n   */\n  async newReto(id: string) {\n\n    const modal = await this.modalCtrl.create({\n      component: NewRetoComponent,\n      componentProps: {\n        id\n      },\n      cssClass: 'modalInfo'\n    });\n\n    modal.present();\n\n  }\n\n  /**\n   * Cambia el reto a activo/inactivo y muestra el aviso con el resultado.\n   * @param id Id del reto a cambiar\n   */\n  cambiarEstado(id: string) {\n    console.log('cambio Estado', id);\n    try {\n      this.retoSvc.updateEstadoReto(id);\n\n      this.avisosSvc.presentToast('Cambio de Estado Correcto', 'success');\n    } catch (error) {\n      this.avisosSvc.presentToast('Error en el cambio de Estado', 'danger');\n    }\n  }\n\n/**\n * Elimina el reto seleccionado\n * @param id Id del reto a eliminar\n */\n  deleteReto(id: string) {\n    try {\n      this.retoSvc.deleteReto(id);\n      this.avisosSvc.presentToast('Reto eliminado correctamente', 'success');\n    } catch (error) {\n      this.avisosSvc.presentToast('Error al eliminar el usuario', 'danger');\n    }\n\n  }\n\n  /**\n   * Carga el modal con la info detallada del reto\n   * @param id Id del reto a mostrar\n   */\n  async verDetalle(id: string) {\n    const modal = await this.modalCtrl.create({\n      component: InfoRetoComponent,\n      componentProps: {\n        id\n      },\n      cssClass: 'modalInfo'\n    });\n\n    modal.present();\n  }\n\n}\n\n    \n\n    \n        \n\n  \n  \n    \n      \n        \n      \n      \n        {{ reto.TITULO }} ({{reto.ACTIVO}})\n       \n      \n    \n    \n      \n       \n      \n      \n        \n      \n    \n  \n\n  \n    \n      \n    \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./mis-retos.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ reto.TITULO }} ({{reto.ACTIVO}})                                                                                        '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FabLoginComponent', 'selector': 'app-fab-login'},{'name': 'FavoritosPage', 'selector': 'app-favoritos'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InfoRetoComponent', 'selector': 'app-info-reto'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MisRetosPage', 'selector': 'app-mis-retos'},{'name': 'NewRetoComponent', 'selector': 'app-new-reto'},{'name': 'NewsPagePage', 'selector': 'app-news-page'},{'name': 'NoticiaComponent', 'selector': 'app-noticia'},{'name': 'NoticiasComponent', 'selector': 'app-noticias'},{'name': 'PerfilPage', 'selector': 'app-perfil'},{'name': 'RankingPage', 'selector': 'app-ranking'},{'name': 'RegistroComponent', 'selector': 'app-registro'},{'name': 'RetoComponent', 'selector': 'app-reto'},{'name': 'RetosComponent', 'selector': 'app-retos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MisRetosPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/MisRetosPageModule.html":{"url":"modules/MisRetosPageModule.html","title":"module - MisRetosPageModule","body":"\n                   \n\n\n\n\n    Módulos\n    MisRetosPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MisRetosPageModule\n\n\n\ncluster_MisRetosPageModule_imports\n\n\n\ncluster_MisRetosPageModule_declarations\n\n\n\n\nMisRetosPage\n\nMisRetosPage\n\n\n\nMisRetosPageModule\n\nMisRetosPageModule\n\nMisRetosPageModule -->\n\nMisRetosPage->MisRetosPageModule\n\n\n\n\n\nMisRetosPageRoutingModule\n\nMisRetosPageRoutingModule\n\nMisRetosPageModule -->\n\nMisRetosPageRoutingModule->MisRetosPageModule\n\n\n\n\n\n\n    \n    \n    \n        Ampliar\n        Restablecer\n        Alejar\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/app/pages/mis-retos/mis-retos.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declaraciones\n                    \n                        \n                            MisRetosPage\n                        \n                    \n                \n                \n                    Importa\n                    \n                        \n                            MisRetosPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MisRetosPageRoutingModule } from './mis-retos-routing.module';\n\nimport { MisRetosPage } from './mis-retos.page';\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MisRetosPageRoutingModule,\n    ComponentsModule\n  ],\n  declarations: [MisRetosPage]\n})\nexport class MisRetosPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/MisRetosPageRoutingModule.html":{"url":"modules/MisRetosPageRoutingModule.html","title":"module - MisRetosPageRoutingModule","body":"\n                   \n\n\n\n\n    Módulos\n    MisRetosPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/app/pages/mis-retos/mis-retos-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MisRetosPage } from './mis-retos.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MisRetosPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MisRetosPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"injectables/MultimediaService.html":{"url":"injectables/MultimediaService.html","title":"injectable - MultimediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Inyectables\n  MultimediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/app/services/multimedia.service.ts\n        \n\n\n\n\n\n            \n    Índice\n    \n        \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                subirImagen\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fireStorage: AngularFireStorage)\n                    \n                \n                        \n                            \n                                Definido en src/app/services/multimedia.service.ts:9\n                            \n                        \n\n                \n                    \n                            Constructor de clase\n\n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                                    Descripción\n                                            \n                                        \n                                        \n                                                \n                                                        fireStorage\n                                                  \n                                                        \n                                                                    AngularFireStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servidcio de almacenamiento de archivos de Firebase\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        subirImagen\n                        \n                    \n                \n            \n            \n                \nsubirImagen(file: any, path: string, nombre: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/multimedia.service.ts:24\n                \n            \n\n\n            \n                \n                    Subida de la imagen a una ruta pasada por parametro\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        archivo saneado que tiene que subir a Firestorage\n\n                                    \n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ruta en la que va a alojar el archivo\n\n                                    \n                                \n                                \n                                    nombre\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        nombre del archivo\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFireStorage } from '@angular/fire/compat/storage';\n\nimport { finalize } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MultimediaService {\n\n/**\n * Constructor de clase\n * @param fireStorage Servidcio de almacenamiento de archivos de Firebase\n */\n  constructor(private fireStorage: AngularFireStorage) { }\n\n  /**\n   * Subida de la imagen a una ruta pasada por parametro\n   * @param file archivo saneado que tiene que subir a Firestorage\n   * @param path ruta en la que va a alojar el archivo\n   * @param nombre nombre del archivo\n   * @returns \n   */\n  subirImagen(file: any, path: string, nombre: string): Promise {\n\n    return new Promise(resolve => {\n      const filePath = path + '/' + nombre + Date.now();\n      const ref = this.fireStorage.ref(filePath);\n      const task = ref.put(file);\n      task.snapshotChanges().pipe(\n        finalize(() => {\n          ref.getDownloadURL().subscribe(res => {\n            const downloadURL = res;\n            resolve(downloadURL);\n            return;\n          });\n        })\n      )\n        .subscribe()\n    });\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/NewRetoComponent.html":{"url":"components/NewRetoComponent.html","title":"component - NewRetoComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  NewRetoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/components/new-reto/new-reto.component.ts\n\n\n\n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-new-reto\n            \n\n            \n                styleUrls\n                ./new-reto.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./new-reto.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                image\n                            \n                            \n                                imagenSaneada\n                            \n                            \n                                newRetoForm\n                            \n                            \n                                reto\n                            \n                            \n                                userEmail\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                    Async\n                                crearReto\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                presentAlert\n                            \n                            \n                                    Async\n                                selectImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, fBuilder: FormBuilder, authSvc: AuthService, sanitizer: DomSanitizer, multimediaSvc: MultimediaService, retoSvc: RetoService, alertCtrl: AlertController)\n                    \n                \n                        \n                            \n                                Definido en src/app/components/new-reto/new-reto.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                                    Descripción\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controlador del Modal\n\n                                                        \n                                                \n                                                \n                                                        fBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Constructor del Formulario\n\n                                                        \n                                                \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para gestionar los inicios de sesión y su estado\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Saneador para la imagen, prepara una URL segura\n\n                                                        \n                                                \n                                                \n                                                        multimediaSvc\n                                                  \n                                                        \n                                                                        MultimediaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de subida de imagen a Firestorage\n\n                                                        \n                                                \n                                                \n                                                        retoSvc\n                                                  \n                                                        \n                                                                        RetoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de manejo de Retos\n\n                                                        \n                                                \n                                                \n                                                        alertCtrl\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controlador de Alertas\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/new-reto/new-reto.component.ts:144\n                \n            \n\n\n            \n                \n                    Cerramos el modal\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        crearReto\n                        \n                    \n                \n            \n            \n                \n                    \n                    crearReto(value: any)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/new-reto/new-reto.component.ts:108\n                \n            \n\n\n            \n                \n                    Metodo que recoge los valores del formulario, los asigna al objeto Reto y lo crea en Firestore a través del Servicio de Retos\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Valores recogidos por el Formulario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/new-reto/new-reto.component.ts:60\n                \n            \n\n\n            \n                \n                    En el inicio cargamos el usuario logado.\nTambien construimos el formulario con sus validadores\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        presentAlert\n                        \n                    \n                \n            \n            \n                \n                    \n                    presentAlert()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/new-reto/new-reto.component.ts:135\n                \n            \n\n\n            \n                \n                    Alerta para pedir confirmación\n\n\n                    \n                        Devuelve :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        selectImage\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectImage()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/new-reto/new-reto.component.ts:88\n                \n            \n\n\n            \n                \n                    Metodo que selecciona una imagen de la galeria y la sanea para luego subirla a Firestorage a través del Servicio\n\n\n                    \n                        Devuelve :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         SafeResourceUrl\n\n                    \n                \n                    \n                        \n                                Definido en src/app/components/new-reto/new-reto.component.ts:28\n                        \n                    \n\n            \n                \n                    Variable que almacena la imagen cogida de la Galeria\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imagenSaneada\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                    \n                        \n                                Definido en src/app/components/new-reto/new-reto.component.ts:32\n                        \n                    \n\n            \n                \n                    Imagen saneada preparada para subir a Firestorage\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newRetoForm\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         FormGroup\n\n                    \n                \n                    \n                        \n                                Definido en src/app/components/new-reto/new-reto.component.ts:20\n                        \n                    \n\n            \n                \n                    Creamos un nuevo FormGroup para crear los Retos\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reto\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Reto\n\n                    \n                \n                    \n                        \n                                Definido en src/app/components/new-reto/new-reto.component.ts:24\n                        \n                    \n\n            \n                \n                    Objeto donde se guardará la información del Reto\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userEmail\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definido en src/app/components/new-reto/new-reto.component.ts:36\n                        \n                    \n\n            \n                \n                    Para almacenar el email del usuario logado\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ModalController, AlertController } from '@ionic/angular';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Reto } from 'src/app/interfaces/interfaces';\nimport { AuthService } from '../../services/auth.service';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { Camera, CameraResultType, CameraSource } from '@capacitor/camera';\nimport { MultimediaService } from '../../services/multimedia.service';\nimport { RetoService } from '../../services/reto.service';\n\n@Component({\n  selector: 'app-new-reto',\n  templateUrl: './new-reto.component.html',\n  styleUrls: ['./new-reto.component.scss'],\n})\nexport class NewRetoComponent implements OnInit {\n  /**\n   * Creamos un nuevo FormGroup para crear los Retos\n   */\n  newRetoForm: FormGroup;\n  /**\n   * Objeto donde se guardará la información del Reto\n   */\n  reto: Reto;\n  /**\n   * Variable que almacena la imagen cogida de la Galeria\n   */\n  image: SafeResourceUrl;\n  /**\n   * Imagen saneada preparada para subir a Firestorage\n   */\n  imagenSaneada: any;\n  /**\n   * Para almacenar el email del usuario logado\n   */\n  userEmail: string;\n\n  /**\n   * \n   * @param modalCtrl Controlador del Modal\n   * @param fBuilder Constructor del Formulario\n   * @param authSvc Servicio para gestionar los inicios de sesión y su estado\n   * @param sanitizer Saneador para la imagen, prepara una URL segura\n   * @param multimediaSvc Servicio de subida de imagen a Firestorage\n   * @param retoSvc Servicio de manejo de Retos\n   * @param alertCtrl Controlador de Alertas\n   */\n  constructor(private modalCtrl: ModalController,\n    private fBuilder: FormBuilder,\n    private authSvc: AuthService,\n    private sanitizer: DomSanitizer,\n    private multimediaSvc: MultimediaService,\n    private retoSvc: RetoService,\n    private alertCtrl: AlertController) { }\n\n    /**\n     * En el inicio cargamos el usuario logado.\n     * Tambien construimos el formulario con sus validadores\n     */\n  ngOnInit() {\n\n    this.authSvc.getUserEmail().then(email => {\n      this.userEmail = email;\n    });\n\n    this.newRetoForm = this.fBuilder.group({\n      TITULO: new FormControl('', Validators.compose([\n        Validators.required\n      ])),\n      DESCRIPCION: new FormControl('', Validators.compose([\n        Validators.required\n      ])),\n      TIPO: new FormControl('', Validators.compose([\n        Validators.required\n      ])),\n      NIVEL: new FormControl('', Validators.compose([\n        Validators.required\n      ])),\n      ACTIVO: new FormControl(true, Validators.compose([\n        Validators.required\n      ])),\n    });\n  }\n\n/**\n * Metodo que selecciona una imagen de la galeria y la sanea para luego subirla a Firestorage a través del Servicio\n */\n  async selectImage() {\n\n    const foto = await Camera.getPhoto({\n      quality: 90,\n      allowEditing: false,\n      resultType: CameraResultType.DataUrl,\n      source: CameraSource.Photos,\n    });\n    //Hay que sanearla\n    this.image = this.sanitizer.bypassSecurityTrustResourceUrl(foto && (foto.dataUrl));\n    let blob = await fetch(foto.dataUrl).then(r => r.blob());\n    this.imagenSaneada = blob;\n    console.log('tenemos imagen', blob);\n\n  }\n\n  /**\n   * Metodo que recoge los valores del formulario, los asigna al objeto Reto y lo crea en Firestore a través del Servicio de Retos\n   * @param value Valores recogidos por el Formulario\n   */\n  async crearReto(value: any) {\n\n    console.log('vamos a crear el reto');\n\n    try {\n\n      const res = await this.multimediaSvc.subirImagen(this.imagenSaneada, 'retos', this.userEmail);\n\n      this.reto = value;\n      this.reto.DESTACADO = true;\n      this.reto.RETADOR = this.userEmail;\n      this.reto.IMAGEN = res;\n\n      console.log('Arriba el reto con', this.reto.TITULO, this.reto.DESCRIPCION);\n\n      this.retoSvc.addReto(this.reto);\n\n\n    } catch (error) {\n      console.log('Error creando el Reto:', error);\n    }\n\n  }\n\n/**\n * Alerta para pedir confirmación\n */\n  async presentAlert() {\n\n    console.log(this.newRetoForm.value)\n\n  }\n\n  /**\n   * Cerramos el modal\n   */\n  closeModal() {\n    this.modalCtrl.dismiss();\n  }\n\n\n\n}\n\n    \n\n    \n        \n  \n    Nuevo Reto\n  \n\n\n\n\n  \n    \n      Título *\n      \n    \n    \n      Descripción *\n      \n    \n    \n      \n        \n          \n            Tipo\n            \n              Ocular\n              Prismaticos\n              Telescopio\n            \n          \n        \n        \n          \n            Nivel\n            \n              Facil\n              Intermedio\n              Dificil\n            \n          \n        \n      \n    \n    \n      Seleccionar imagen\n    \n    \n      \n    \n    \n      \n      Marcar Reto como Activo\n    \n    Crear Reto\n  \n\n\n\n\n\n\n  Cancelar\n\n    \n\n    \n                \n                    ./new-reto.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Nuevo Reto              Título *                    Descripción *                                                  Tipo                          Ocular              Prismaticos              Telescopio                                                            Nivel                          Facil              Intermedio              Dificil                                                  Seleccionar imagen                                  Marcar Reto como Activo        Crear Reto    Cancelar'\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FabLoginComponent', 'selector': 'app-fab-login'},{'name': 'FavoritosPage', 'selector': 'app-favoritos'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InfoRetoComponent', 'selector': 'app-info-reto'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MisRetosPage', 'selector': 'app-mis-retos'},{'name': 'NewRetoComponent', 'selector': 'app-new-reto'},{'name': 'NewsPagePage', 'selector': 'app-news-page'},{'name': 'NoticiaComponent', 'selector': 'app-noticia'},{'name': 'NoticiasComponent', 'selector': 'app-noticias'},{'name': 'PerfilPage', 'selector': 'app-perfil'},{'name': 'RankingPage', 'selector': 'app-ranking'},{'name': 'RegistroComponent', 'selector': 'app-registro'},{'name': 'RetoComponent', 'selector': 'app-reto'},{'name': 'RetosComponent', 'selector': 'app-retos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NewRetoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/NewsPagePage.html":{"url":"components/NewsPagePage.html","title":"component - NewsPagePage","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  NewsPagePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/pages/news-page/news-page.page.ts\n\n\n\n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-news-page\n            \n\n            \n                styleUrls\n                ./news-page.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./news-page.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                articles\n                            \n                            \n                                    Public\n                                authSvc\n                            \n                            \n                                email\n                            \n                            \n                                    Public\n                                menuSvc\n                            \n                            \n                                page\n                            \n                            \n                                pageSize\n                            \n                            \n                                    Public\n                                userSvc\n                            \n                            \n                                usuario\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                loadMore\n                            \n                            \n                                loadNews\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onScroll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(menuSvc: MenuService, authSvc: AuthService, userSvc: UserService, newsSvc: NewsService)\n                    \n                \n                        \n                            \n                                Definido en src/app/pages/news-page/news-page.page.ts:38\n                            \n                        \n\n                \n                    \n                            Contructor de clase\n\n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                                    Descripción\n                                            \n                                        \n                                        \n                                                \n                                                        menuSvc\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que controla los elementos a mostrar en el menú\n\n                                                        \n                                                \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para comprobar el usuario logado\n\n                                                        \n                                                \n                                                \n                                                        userSvc\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para manejar los datos del usuario\n\n                                                        \n                                                \n                                                \n                                                        newsSvc\n                                                  \n                                                        \n                                                                        NewsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de carga de noticias\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        loadMore\n                        \n                    \n                \n            \n            \n                \nloadMore(event)\n                \n            \n\n\n            \n                \n                    Definido en src/app/pages/news-page/news-page.page.ts:86\n                \n            \n\n\n            \n                \n                    Carga más noticias pasando de pagina\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Evento que desencadena la carga de mas noticias: llegar casi al final de las ya cargadas\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadNews\n                        \n                    \n                \n            \n            \n                \nloadNews()\n                \n            \n\n\n            \n                \n                    Definido en src/app/pages/news-page/news-page.page.ts:77\n                \n            \n\n\n            \n                \n                    Carga las cabeceras de las noticias\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/pages/news-page/news-page.page.ts:61\n                \n            \n\n\n            \n                \n                    Metodo de inicio\nComprueba el usuario logado para posteriormente cargar su menu\nCarga las noticias\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onScroll\n                        \n                    \n                \n            \n            \n                \nonScroll(event)\n                \n            \n\n\n            \n                \n                    Definido en src/app/pages/news-page/news-page.page.ts:96\n                \n            \n\n\n            \n                \n                    Usado para desencadenar la carga de noticias\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Evento desencadenador\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        articles\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Article[]\n\n                    \n                \n                \n                    \n                        Valor por defecto : []\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/news-page/news-page.page.ts:20\n                        \n                    \n\n            \n                \n                    Variable pública para manejo de los artículos\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authSvc\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         AuthService\n\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/news-page/news-page.page.ts:48\n                        \n                    \n\n            \n                \n                    Servicio para comprobar el usuario logado\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/news-page/news-page.page.ts:25\n                        \n                    \n\n            \n                \n                    email del usuario logado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        menuSvc\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         MenuService\n\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/news-page/news-page.page.ts:47\n                        \n                    \n\n            \n                \n                    Servicio que controla los elementos a mostrar en el menú\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                \n                    \n                        Valor por defecto : 1\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/news-page/news-page.page.ts:34\n                        \n                    \n\n            \n                \n                    Variable para guardar la pagina cargada\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                \n                    \n                        Valor por defecto : 10\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/news-page/news-page.page.ts:38\n                        \n                    \n\n            \n                \n                    Numero de noticias por pagina\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userSvc\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         UserService\n\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/news-page/news-page.page.ts:49\n                        \n                    \n\n            \n                \n                    Servicio para manejar los datos del usuario\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuario\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Usuario\n\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/news-page/news-page.page.ts:30\n                        \n                    \n\n            \n                \n                    Objeto del usuario logado\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { NewsService } from '../../services/news.service';\nimport { MenuService } from 'src/app/services/menu.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { Usuario } from 'src/app/interfaces/interfaces';\nimport { Article } from 'src/app/interfaces/news';\n\n@Component({\n  selector: 'app-news-page',\n  templateUrl: './news-page.page.html',\n  styleUrls: ['./news-page.page.scss'],\n})\nexport class NewsPagePage implements OnInit {\n\n  /**\n   * Variable pública para manejo de los artículos\n   */\n  public articles: Article[] = [];\n\n  /**\n   * email del usuario logado\n   */\n  email: string;\n\n  /**\n   * Objeto del usuario logado\n   */\n  usuario: Usuario;\n  /**\n   * Variable para guardar la pagina cargada\n   */\n  page = 1;\n  /**\n   * Numero de noticias por pagina\n   */\n  pageSize = 10;\n\n  /**\n   * Contructor de clase\n   * @param menuSvc Servicio que controla los elementos a mostrar en el menú\n   * @param authSvc Servicio para comprobar el usuario logado\n   * @param userSvc Servicio para manejar los datos del usuario\n   * @param newsSvc Servicio de carga de noticias\n   */\n  constructor(public menuSvc: MenuService,\n    public authSvc: AuthService,\n    public userSvc: UserService,\n    private newsSvc: NewsService) { \n\n      this.menuSvc.setMenu();\n\n    }\n\n    /**\n     * Metodo de inicio\n     * Comprueba el usuario logado para posteriormente cargar su menu\n     * Carga las noticias\n     */\n  ngOnInit() {\n\n    this.authSvc.getUserEmail().then(email => {\n      this.email = email;\n      this.userSvc.getUserByEmail(email).subscribe(usuario => {\n        this.usuario = usuario;\n      });\n    });\n\n    this.loadNews();\n\n  }\n\n  /**\n   * Carga las cabeceras de las noticias\n   */\n  loadNews() {\n    this.newsSvc.getTopHeadLines()\n      .subscribe(articles => this.articles.push(...articles));\n  }\n\n  /**\n   * Carga más noticias pasando de pagina\n   * @param event Evento que desencadena la carga de mas noticias: llegar casi al final de las ya cargadas\n   */\n  loadMore(event) {\n    this.page++;\n    this.loadNews();\n    event.target.complete();\n  }\n\n  /**\n   * Usado para desencadenar la carga de noticias\n   * @param event Evento desencadenador\n   */\n  onScroll(event) {\n    const scrollElement = event.target;\n    const scrollHeight = scrollElement.scrollHeight;\n\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n  \n\n  \n    \n  \n\n  \n\n\n\n\n    \n\n    \n                \n                    ./news-page.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FabLoginComponent', 'selector': 'app-fab-login'},{'name': 'FavoritosPage', 'selector': 'app-favoritos'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InfoRetoComponent', 'selector': 'app-info-reto'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MisRetosPage', 'selector': 'app-mis-retos'},{'name': 'NewRetoComponent', 'selector': 'app-new-reto'},{'name': 'NewsPagePage', 'selector': 'app-news-page'},{'name': 'NoticiaComponent', 'selector': 'app-noticia'},{'name': 'NoticiasComponent', 'selector': 'app-noticias'},{'name': 'PerfilPage', 'selector': 'app-perfil'},{'name': 'RankingPage', 'selector': 'app-ranking'},{'name': 'RegistroComponent', 'selector': 'app-registro'},{'name': 'RetoComponent', 'selector': 'app-reto'},{'name': 'RetosComponent', 'selector': 'app-retos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NewsPagePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/NewsPagePageModule.html":{"url":"modules/NewsPagePageModule.html","title":"module - NewsPagePageModule","body":"\n                   \n\n\n\n\n    Módulos\n    NewsPagePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NewsPagePageModule\n\n\n\ncluster_NewsPagePageModule_imports\n\n\n\ncluster_NewsPagePageModule_declarations\n\n\n\n\nNewsPagePage\n\nNewsPagePage\n\n\n\nNewsPagePageModule\n\nNewsPagePageModule\n\nNewsPagePageModule -->\n\nNewsPagePage->NewsPagePageModule\n\n\n\n\n\nNewsPagePageRoutingModule\n\nNewsPagePageRoutingModule\n\nNewsPagePageModule -->\n\nNewsPagePageRoutingModule->NewsPagePageModule\n\n\n\n\n\n\n    \n    \n    \n        Ampliar\n        Restablecer\n        Alejar\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/app/pages/news-page/news-page.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declaraciones\n                    \n                        \n                            NewsPagePage\n                        \n                    \n                \n                \n                    Importa\n                    \n                        \n                            NewsPagePageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NewsPagePageRoutingModule } from './news-page-routing.module';\n\nimport { NewsPagePage } from './news-page.page';\n\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NewsPagePageRoutingModule,\n    ComponentsModule\n  ],\n  declarations: [NewsPagePage]\n})\nexport class NewsPagePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/NewsPagePageRoutingModule.html":{"url":"modules/NewsPagePageRoutingModule.html","title":"module - NewsPagePageRoutingModule","body":"\n                   \n\n\n\n\n    Módulos\n    NewsPagePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/app/pages/news-page/news-page-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NewsPagePage } from './news-page.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewsPagePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NewsPagePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/NewsResponse.html":{"url":"interfaces/NewsResponse.html","title":"interface - NewsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NewsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/app/interfaces/news.ts\n        \n\n\n            \n                Descripción\n            \n            \n                Interface que maneja las peticiones de noticias. API de NEWSAPI: https://newsapi.org/v2\n\n            \n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            articles\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            totalResults\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        articles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        articles:         Article[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         Article[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Objeto tipo Article para manejar las noticias\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Estado de la peticion\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalResults\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalResults:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Resultados totales de la peticion\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface NewsResponse {\n  /**\n   * Estado de la peticion\n   */\n  status:       string;\n\n  /**\n   * Resultados totales de la peticion\n   */\n  totalResults: number;\n\n  /**\n   * Objeto tipo Article para manejar las noticias\n   */\n  articles:     Article[];\n}\n\n/**\n * Interface para el manejo de las noticias\n */\nexport interface Article {\n\n  /**\n   * Origen de la noticia\n   */\n  source:       Source;\n\n  /**\n   * Autor de la noticia\n   */\n  author?:      string;\n\n  /**\n   * Titulo de la noticia\n   */\n  title:        string;\n\n  /**\n   * Descripcion corta de la noticia\n   */\n  description?: string;\n\n  /**\n   * URL a la noticia completa\n   */\n  url:          string;\n\n  /**\n   * URL a la imagen de la noticia\n   */\n  urlToImage?:  string;\n\n  /**\n   * Fecha de publicacion\n   */\n  publishedAt:  string;\n\n  /**\n   * Contenido completo de la noticia\n   */\n  content?:     string;\n}\n\n/**\n * Interface para el manejo del Origen de la noticia\n */\nexport interface Source {\n\n  /**\n   * Identificador del origen\n   */\n  id?:  string;\n\n  /**\n   * Nombre del Origen\n   */\n  name: string;\n}\n\n/**\n * Interface para manejar las noticias de una Categoria concreta y por paginas. NO SE USA\n */\nexport interface ArticlesByCategoryAndPage {\n  [key: string] : {\n      page: number,\n      articles: Article[]\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"injectables/NewsService.html":{"url":"injectables/NewsService.html","title":"injectable - NewsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Inyectables\n  NewsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/app/services/news.service.ts\n        \n\n\n\n\n\n            \n    Índice\n    \n        \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                executeQuery\n                            \n                            \n                                getTopHeadLines\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Definido en src/app/services/news.service.ts:24\n                            \n                        \n\n                \n                    \n                            Constructor de clase\n\n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                                    Descripción\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio http para solicitar la llamada a la api\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        executeQuery\n                        \n                    \n                \n            \n            \n                \n                    \n                    executeQuery(endpoint: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/news.service.ts:37\n                \n            \n\n            \n                \n                    Parámetros de tipo :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Ejecuta la consulta a la API con los filtros pasados por el endpoint\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    endpoint\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        cadena pasada con las variables que necesita la solicitud a la api\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTopHeadLines\n                        \n                    \n                \n            \n            \n                \ngetTopHeadLines()\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/news.service.ts:53\n                \n            \n\n\n            \n                \n                    Devuelve un observable con las cabeceras de las noticias a mostrar.\nAqui pasa por parametro la categoria ciencia y espacio\n\n\n                    \n                    \n                    \n                        Devuelve :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\nimport { NewsResponse, Article } from '../interfaces/news';\n\n/**\n * API del servicio de noticias apinews\n */\nconst apiKey = environment.news.apiKey;\n\n/**\n * URL del servicio\n */\nconst apiUrl = environment.news.apiUrl;\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewsService {\n\n  /**\n   * Constructor de clase\n   * @param http Servicio http para solicitar la llamada a la api\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Ejecuta la consulta a la API con los filtros pasados por el endpoint\n   * @param endpoint cadena pasada con las variables que necesita la solicitud a la api\n   * @returns \n   */\n  private executeQuery(endpoint: string) {\n\n    return this.http.get(`${apiUrl}${endpoint}`, {\n      params: {\n        apiKey,\n        country: 'us',\n      }\n    });\n\n  }\n\n  /**\n   * Devuelve un observable con las cabeceras de las noticias a mostrar.\n   * Aqui pasa por parametro la categoria ciencia y espacio\n   * @returns \n   */\n  getTopHeadLines(): Observable {\n\n    return this.executeQuery(`/top-headlines?category=science&q=space`)\n      .pipe(\n        map(({ articles }) => articles)\n      );\n      \n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/NoticiaComponent.html":{"url":"components/NoticiaComponent.html","title":"component - NoticiaComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  NoticiaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/components/noticia/noticia.component.ts\n\n\n\n\n\n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-noticia\n            \n\n            \n                styleUrls\n                ./noticia.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./noticia.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onOpenMenu\n                            \n                            \n                                onShareArticle\n                            \n                            \n                                openArticle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Entradas\n                    \n                \n                \n                    \n                        \n                            \n                                article\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(iab: InAppBrowser, platform: Platform, actionSheetCtrl: ActionSheetController, socialSharing: SocialSharing)\n                    \n                \n                        \n                            \n                                Definido en src/app/components/noticia/noticia.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                                    Descripción\n                                            \n                                        \n                                        \n                                                \n                                                        iab\n                                                  \n                                                        \n                                                                    InAppBrowser\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Componente de InAppBrowser para mostrar las noticias sin salir de la aplicación\n\n                                                        \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Componente para controlar la plataforma dónde se ejecuta la aplicación. si es Android, se usará el IAB\n\n                                                        \n                                                \n                                                \n                                                        actionSheetCtrl\n                                                  \n                                                        \n                                                                    ActionSheetController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Componente personalizado para mostrar la opcion de compartir\n\n                                                        \n                                                \n                                                \n                                                        socialSharing\n                                                  \n                                                        \n                                                                    SocialSharing\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Componente para compartir la noticia a través de las aplicaciones instaladas\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Entradas\n        \n            \n                \n                    \n                        \n                        article\n                    \n                \n                \n                    \n                        Tipo :         Article\n\n                    \n                \n                        \n                            \n                                    Definido en src/app/components/noticia/noticia.component.ts:19\n                            \n                        \n                \n                    \n                        Parámetro recibido de tipo Artículo para crear un objeto para manejarlo\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                        \n                            \n                                    Definido en src/app/components/noticia/noticia.component.ts:24\n                            \n                        \n                \n                    \n                        Indice del arfticulo recibido\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onOpenMenu\n                        \n                    \n                \n            \n            \n                \n                    \n                    onOpenMenu()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/noticia/noticia.component.ts:41\n                \n            \n\n\n            \n                \n                    Método que muestra el ActinioSheet con la opcion de compartir la noticia\n\n\n                    \n                        Devuelve :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onShareArticle\n                        \n                    \n                \n            \n            \n                \nonShareArticle()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/noticia/noticia.component.ts:80\n                \n            \n\n\n            \n                \n                    Método para compartir la noticia a través de las aplicaciones instalas en el dispositivo\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openArticle\n                        \n                    \n                \n            \n            \n                \nopenArticle()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/noticia/noticia.component.ts:67\n                \n            \n\n\n            \n                \n                    Abre el articulo en el navegador. Si es Android lo muestra en el navegador dentro de la App, si es en Web, lo muestra en otra pestaña\n\n\n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { InAppBrowser } from '@awesome-cordova-plugins/in-app-browser/ngx';\nimport { SocialSharing } from '@awesome-cordova-plugins/social-sharing/ngx';\nimport { ActionSheetController, Platform } from '@ionic/angular';\n\nimport { Article } from 'src/app/interfaces/news';\n\n@Component({\n  selector: 'app-noticia',\n  templateUrl: './noticia.component.html',\n  styleUrls: ['./noticia.component.scss'],\n})\nexport class NoticiaComponent {\n\n  /**\n   * Parámetro recibido de tipo Artículo para crear un objeto para manejarlo\n   */\n  @Input() article!: Article;\n\n  /**\n   * Indice del arfticulo recibido\n   */\n  @Input() index!: number;\n\n  /**\n   * \n   * @param iab Componente de InAppBrowser para mostrar las noticias sin salir de la aplicación\n   * @param platform Componente para controlar la plataforma dónde se ejecuta la aplicación. si es Android, se usará el IAB\n   * @param actionSheetCtrl Componente personalizado para mostrar la opcion de compartir\n   * @param socialSharing Componente para compartir la noticia a través de las aplicaciones instaladas\n   */\n  constructor(private iab: InAppBrowser,\n    private platform: Platform,\n    private actionSheetCtrl: ActionSheetController,\n    private socialSharing: SocialSharing) { }\n\n  /**\n   * Método que muestra el ActinioSheet con la opcion de compartir la noticia\n   */\n  async onOpenMenu() {\n\n    const actionSheet = await this.actionSheetCtrl.create({\n      header: 'Opciones',\n      buttons: [{\n        text: 'Compartir',\n        icon: 'share-outline',\n        handler: () => {\n\n          this.onShareArticle();\n        }\n      }, {\n        text: 'Cancelar',\n        icon: 'close-outline',\n        role: 'cancel',\n        cssClass: 'secondary'\n      }]\n    });\n\n    await actionSheet.present();\n  }\n\n  /**\n   * Abre el articulo en el navegador. Si es Android lo muestra en el navegador dentro de la App, si es en Web, lo muestra en otra pestaña\n   * @returns \n   */\n  openArticle() {\n\n    if (this.platform.is('android')) {\n      const browser = this.iab.create(this.article.url);\n      browser.show();\n      return;\n    }\n\n  }\n\n  /**\n   * Método para compartir la noticia a través de las aplicaciones instalas en el dispositivo\n   */\n  onShareArticle() {\n\n    if (this.platform.is('cordova')) {\n\n      this.socialSharing.share(\n        this.article.title,\n        this.article.url\n      );\n    } else {\n      if (navigator.share) {\n        navigator.share({\n          title: this.article.title,\n          text: this.article.description,\n          url: this.article.url,\n        })\n          .then(() => console.log('Compartido!'))\n          .catch((error) => console.log('Error compartiendo', error));\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n\n    \n\n      \n        {{ article.source.name }}\n      \n      \n        \n          \n        \n      \n    \n\n  \n\n  \n\n    {{ article.title }}\n  \n\n  \n\n  \n     {{ article.description }}\n  \n\n\n    \n\n    \n                \n                    ./noticia.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ article.source.name }}                                                        {{ article.title }}           {{ article.description }}  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FabLoginComponent', 'selector': 'app-fab-login'},{'name': 'FavoritosPage', 'selector': 'app-favoritos'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InfoRetoComponent', 'selector': 'app-info-reto'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MisRetosPage', 'selector': 'app-mis-retos'},{'name': 'NewRetoComponent', 'selector': 'app-new-reto'},{'name': 'NewsPagePage', 'selector': 'app-news-page'},{'name': 'NoticiaComponent', 'selector': 'app-noticia'},{'name': 'NoticiasComponent', 'selector': 'app-noticias'},{'name': 'PerfilPage', 'selector': 'app-perfil'},{'name': 'RankingPage', 'selector': 'app-ranking'},{'name': 'RegistroComponent', 'selector': 'app-registro'},{'name': 'RetoComponent', 'selector': 'app-reto'},{'name': 'RetosComponent', 'selector': 'app-retos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NoticiaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/NoticiasComponent.html":{"url":"components/NoticiasComponent.html","title":"component - NoticiasComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  NoticiasComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/components/noticias/noticias.component.ts\n\n\n\n\n\n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-noticias\n            \n\n            \n                styleUrls\n                ./noticias.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./noticias.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                article\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Entradas\n                    \n                \n                \n                    \n                        \n                            \n                                articles\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definido en src/app/components/noticias/noticias.component.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor de Clase. Este Componente solo se encarga de cargar el Componente Artículo, para adaptarlo según dispositivo.\n\n                    \n                \n            \n        \n\n\n    \n    Entradas\n        \n            \n                \n                    \n                        \n                        articles\n                    \n                \n                \n                    \n                        Tipo :         Article[]\n\n                    \n                \n                \n                    \n                        Valor por defecto : []\n                    \n                \n                        \n                            \n                                    Definido en src/app/components/noticias/noticias.component.ts:20\n                            \n                        \n                \n                    \n                        Recibe los articulos\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        article\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Article[]\n\n                    \n                \n                \n                    \n                        Valor por defecto : []\n                    \n                \n                    \n                        \n                                Definido en src/app/components/noticias/noticias.component.ts:15\n                        \n                    \n\n            \n                \n                    Variable tipo Articulo para la carga de Articulos. Publica\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { Article } from 'src/app/interfaces/news';\n\n@Component({\n  selector: 'app-noticias',\n  templateUrl: './noticias.component.html',\n  styleUrls: ['./noticias.component.scss'],\n})\nexport class NoticiasComponent {\n\n  /**\n   * Variable tipo Articulo para la carga de Articulos. Publica\n   */\n  public article: Article[] = [];\n\n  /**\n   * Recibe los articulos\n   */\n  @Input() articles: Article[] = [];\n\n  /**\n   * Constructor de Clase. Este Componente solo se encarga de cargar el Componente Artículo, para adaptarlo según dispositivo.\n   */\n  constructor() { }\n\n}\n\n    \n\n    \n        \n\n  \n    \n     \n     \n    \n  \n\n    \n\n    \n                \n                    ./noticias.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FabLoginComponent', 'selector': 'app-fab-login'},{'name': 'FavoritosPage', 'selector': 'app-favoritos'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InfoRetoComponent', 'selector': 'app-info-reto'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MisRetosPage', 'selector': 'app-mis-retos'},{'name': 'NewRetoComponent', 'selector': 'app-new-reto'},{'name': 'NewsPagePage', 'selector': 'app-news-page'},{'name': 'NoticiaComponent', 'selector': 'app-noticia'},{'name': 'NoticiasComponent', 'selector': 'app-noticias'},{'name': 'PerfilPage', 'selector': 'app-perfil'},{'name': 'RankingPage', 'selector': 'app-ranking'},{'name': 'RegistroComponent', 'selector': 'app-registro'},{'name': 'RetoComponent', 'selector': 'app-reto'},{'name': 'RetosComponent', 'selector': 'app-retos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NoticiasComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/PerfilPage.html":{"url":"components/PerfilPage.html","title":"component - PerfilPage","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  PerfilPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/pages/perfil/perfil.page.ts\n\n\n\n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-perfil\n            \n\n            \n                styleUrls\n                ./perfil.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./perfil.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                actionSheet\n                            \n                            \n                                image\n                            \n                            \n                                imagenSaneada\n                            \n                            \n                                userEmail\n                            \n                            \n                                usuarioLogado\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                alertDelete\n                            \n                            \n                                    Async\n                                alertPassChange\n                            \n                            \n                                    Async\n                                avatarActionSheet\n                            \n                            \n                                logOut\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                setAvatarCamara\n                            \n                            \n                                    Async\n                                setAvatarGallery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authSvc: AuthService, actionSheetCtrl: ActionSheetController, alertCtrl: AlertController, userSvc: UserService, router: Router, navCtrl: NavController, avisosSvc: AvisosService, multimediaSvc: MultimediaService, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Definido en src/app/pages/perfil/perfil.page.ts:49\n                            \n                        \n\n                \n                    \n                            Constructor de clase.\nRevisa el estado de la sesión, recoge el mail y busca su perfil para cargar los datos.\n\n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                                    Descripción\n                                            \n                                        \n                                        \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de autenticación para el manejo del cambio de contraseña\n\n                                                        \n                                                \n                                                \n                                                        actionSheetCtrl\n                                                  \n                                                        \n                                                                    ActionSheetController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controlador del ActionSheet que mostrará los accesos a la Camara o Galeria\n\n                                                        \n                                                \n                                                \n                                                        alertCtrl\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controlador de las Alertas\n\n                                                        \n                                                \n                                                \n                                                        userSvc\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de manejo del Usuario\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controlador de rutas de accceso\n\n                                                        \n                                                \n                                                \n                                                        navCtrl\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controlador para redirigir a determinadas rutas\n\n                                                        \n                                                \n                                                \n                                                        avisosSvc\n                                                  \n                                                        \n                                                                        AvisosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de avisos a traves de Toast\n\n                                                        \n                                                \n                                                \n                                                        multimediaSvc\n                                                  \n                                                        \n                                                                        MultimediaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de manejo de las imagenes\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Libreria que 'sanea' la imagen para hacer una subida segura a Firestorage\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        alertDelete\n                        \n                    \n                \n            \n            \n                \n                    \n                    alertDelete(documentId: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/pages/perfil/perfil.page.ts:181\n                \n            \n\n\n            \n                \n                    Metodo que muestra una Alerta al eliminar el Usuario y si aceptamos, lo ELIMINA. NO IMPLEMENTADO\nAl eliminarlo de devuelve al Home\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    documentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ID del usuario a eliminar (el mismo que ha iniciado sesión)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        alertPassChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    alertPassChange()\n                \n            \n\n\n            \n                \n                    Definido en src/app/pages/perfil/perfil.page.ts:209\n                \n            \n\n\n            \n                \n                    Muestra una Alerta para cambiar la contraseña. Se especifica 2 veces la contraseña,\ny si coinciden lanza el servicio de cambio de contraseña y te desloga para que entres\ncon la contraseña nueva\n\n\n                    \n                        Devuelve :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        avatarActionSheet\n                        \n                    \n                \n            \n            \n                \n                    \n                    avatarActionSheet()\n                \n            \n\n\n            \n                \n                    Definido en src/app/pages/perfil/perfil.page.ts:132\n                \n            \n\n\n            \n                \n                    Método que muestra un ActionSheet con los iconos de Camara y Galeria para seleccionar la imagen del Avatar\n\n\n                    \n                        Devuelve :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Definido en src/app/pages/perfil/perfil.page.ts:122\n                \n            \n\n\n            \n                \n                    Metodo para deslogarse. Llama al servicio de Autenticacion, desloga, y te envia al Home.\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/pages/perfil/perfil.page.ts:109\n                \n            \n\n\n            \n                \n                    Metodo de inicio\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setAvatarCamara\n                        \n                    \n                \n            \n            \n                \n                    \n                    setAvatarCamara()\n                \n            \n\n\n            \n                \n                    Definido en src/app/pages/perfil/perfil.page.ts:296\n                \n            \n\n\n            \n                \n                    Metodo para aplicar un Avatar al Usuario desde la Camara\nSe selecciona la imagen de la galeria, la sanea para que sea segura y lanza el servicio de subida de la imagen\na Firestorage y posteriormente el servicio de actualizacion del usuario pasando el ID del usuario y la URL de acceso\n\n\n                    \n                        Devuelve :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setAvatarGallery\n                        \n                    \n                \n            \n            \n                \n                    \n                    setAvatarGallery()\n                \n            \n\n\n            \n                \n                    Definido en src/app/pages/perfil/perfil.page.ts:273\n                \n            \n\n\n            \n                \n                    Metodo para aplicar un Avatar al Usuario desde la Galeria\nSe selecciona la imagen de la galeria, la sanea para que sea segura y lanza el servicio de subida de la imagen\na Firestorage y posteriormente el servicio de actualizacion del usuario pasando el ID del usuario y la URL de acceso\n\n\n                    \n                        Devuelve :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                        actionSheet\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :     HTMLIonActionSheetElement\n\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/perfil/perfil.page.ts:49\n                        \n                    \n\n            \n                \n                    ActionSheet que se va a usar para mostrar la galeria o la camara\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/perfil/perfil.page.ts:39\n                        \n                    \n\n            \n                \n                    Variable donde se almacena la imagen obtenida de la camara o de la galeria\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imagenSaneada\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         any\n\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/perfil/perfil.page.ts:44\n                        \n                    \n\n            \n                \n                    Variable que almacena la imagen ya lista para ser subida de forma segura\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userEmail\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/perfil/perfil.page.ts:29\n                        \n                    \n\n            \n                \n                    Email del usuario logado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuarioLogado\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Usuario\n\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/perfil/perfil.page.ts:34\n                        \n                    \n\n            \n                \n                    Objeto que guarda los datos del usuario logado\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { NavController } from '@ionic/angular';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Camera, CameraResultType, CameraSource } from '@capacitor/camera';\nimport { ActionSheetController, AlertController } from '@ionic/angular';\n\nimport { Usuario } from 'src/app/interfaces/interfaces';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { UserService } from '../../services/user.service';\nimport { AvisosService } from 'src/app/services/avisos.service';\nimport { MultimediaService } from '../../services/multimedia.service';\n\n\n\n\n@Component({\n  selector: 'app-perfil',\n  templateUrl: './perfil.page.html',\n  styleUrls: ['./perfil.page.scss'],\n})\nexport class PerfilPage implements OnInit {\n\n  /**\n   * Email del usuario logado\n   */\n  userEmail: string;\n\n  /**\n   * Objeto que guarda los datos del usuario logado\n   */\n  usuarioLogado: Usuario;\n\n  /**\n   * Variable donde se almacena la imagen obtenida de la camara o de la galeria\n   */\n  image: any;\n\n  /**\n   * Variable que almacena la imagen ya lista para ser subida de forma segura\n   */\n  imagenSaneada: any;\n\n  /**\n   * ActionSheet que se va a usar para mostrar la galeria o la camara\n   */\n  actionSheet: HTMLIonActionSheetElement;\n\n  /**\n   * Constructor de clase.\n   * Revisa el estado de la sesión, recoge el mail y busca su perfil para cargar los datos.\n   * @param authSvc Servicio de autenticación para el manejo del cambio de contraseña\n   * @param actionSheetCtrl Controlador del ActionSheet que mostrará los accesos a la Camara o Galeria\n   * @param alertCtrl Controlador de las Alertas\n   * @param userSvc Servicio de manejo del Usuario\n   * @param router Controlador de rutas de accceso\n   * @param navCtrl Controlador para redirigir a determinadas rutas\n   * @param avisosSvc Servicio de avisos a traves de Toast\n   * @param multimediaSvc Servicio de manejo de las imagenes\n   * @param sanitizer Libreria que 'sanea' la imagen para hacer una subida segura a Firestorage\n   */\n  constructor(private authSvc: AuthService,\n    private actionSheetCtrl: ActionSheetController,\n    private alertCtrl: AlertController,\n    private userSvc: UserService,\n    private router: Router,\n    private navCtrl: NavController,\n    private avisosSvc: AvisosService,\n    private multimediaSvc: MultimediaService,   \n    private sanitizer: DomSanitizer,\n\n\n  ) {\n\n    /*   this.angularFireAuth.onAuthStateChanged(user => {\n\n      if (user) {\n        // El usuario está logueado\n        this.userSvc.getUserEmail().subscribe(email => {\n          this.userEmail = email;\n   \n\n          this.userSvc.getUserByEmail(email).subscribe(usuario => {\n\n            this.usuarioLogado = usuario;\n          });\n\n        });\n\n      } else {\n        // El usuario no está logueado\n        console.log('no deberias estar aqui');\n\n      }\n\n    });        */\n\n    this.authSvc.initAuthStateListener();\n    this.userEmail = this.authSvc.userEmail;\n\n\n  }\n\n  /**\n   * Metodo de inicio\n   */\n  ngOnInit() {\n \n      this.userSvc.getUserByEmail(this.userEmail).subscribe(usuario => {\n\n        this.usuarioLogado = usuario;\n      });\n   \n  \n  }\n\n  /**\n   * Metodo para deslogarse. Llama al servicio de Autenticacion, desloga, y te envia al Home.\n   */\n  logOut() {\n\n    this.authSvc.signOut();\n    this.navCtrl.navigateRoot('/home');\n\n  }\n\n  /**\n   * Método que muestra un ActionSheet con los iconos de Camara y Galeria para seleccionar la imagen del Avatar\n   */\n  async avatarActionSheet() {\n\n    this.actionSheet = await this.actionSheetCtrl.create({\n\n      cssClass: 'multimedia-class',\n      buttons: [\n        {\n          icon: 'camera-outline',\n          handler: () => {\n            this.setAvatarCamara();\n          }\n        },\n        {\n          icon: 'image-outline',\n          handler: () => {\n            this.setAvatarGallery();\n          }\n        },\n        {\n          text: 'Cancel',\n          icon: 'close',\n          role: 'cancel'\n        }\n      ],\n\n      /** Template personalizado para mostrar los botones a la izquierda y derecha\n       * Los botones se ajustarán a los lados opuestos de la hoja de acción\n       * utilizando la clase CSS \"ion-action-sheet-buttons-start\" e \"ion-action-sheet-buttons-end\"\n       * y se alinearán al centro de la hoja de acción utilizando la clase CSS \"ion-justify-content-center\"\n       */\n      backdropDismiss: true,\n      animated: true,\n      keyboardClose: true,\n      mode: 'ios',\n\n      translucent: true,\n      id: 'my-action-sheet'\n\n    });\n\n    await this.actionSheet.present();\n\n  }\n\n  /**\n   * Metodo que muestra una Alerta al eliminar el Usuario y si aceptamos, lo ELIMINA. NO IMPLEMENTADO\n   * Al eliminarlo de devuelve al Home\n   * @param documentId ID del usuario a eliminar (el mismo que ha iniciado sesión)\n   */\n  async alertDelete(documentId: string) {\n\n    const alert = await this.alertCtrl.create({\n      header: 'Eliminar usuario',\n      message: '¿Estás seguro de que quieres eliminar este usuario?',\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary'\n        }, {\n          text: 'Eliminar',\n          handler: () => {\n            //  this.userSvc.deleteUser(this.usuarioLogado.ID);\n            this.router.navigateByUrl('/home');\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  /**\n   * Muestra una Alerta para cambiar la contraseña. Se especifica 2 veces la contraseña,\n   * y si coinciden lanza el servicio de cambio de contraseña y te desloga para que entres\n   * con la contraseña nueva\n   */\n  async alertPassChange() {\n    const alert = await this.alertCtrl.create({\n      header: 'Pon tu nueva contraseña',\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          handler: () => {\n\n          }\n        },\n        {\n          text: 'Aceptar',\n          handler: (data) => {\n            // Obtener los valores de los campos de texto\n            const password1 = data.password1;\n            const password2 = data.password2;\n            console.log(password1, password2);\n\n            // Comparar los valores de las contraseñas y mostrar un mensaje de error si no coinciden\n            if (password1 != password2) {\n              this.avisosSvc.presentToast('Las contraseñas no coinciden', 'danger');\n            } else {\n              // Las contraseñas coinciden, realizar la acción deseada\n              this.authSvc.passChange(password1);\n              this.logOut();\n\n              this.avisosSvc.presentToast('Contraseña cambiada correctamente', 'success');\n\n            }\n          }\n        }\n      ],\n\n      inputs: [\n\n        {\n          name: 'password1',\n          type: 'password',\n          placeholder: 'Pon tu nueva contraseña',\n          attributes: {\n            minlength: 6,\n          },\n        },\n        {\n          name: 'password2',\n          type: 'password',\n          placeholder: 'Repite la contraseña',\n          attributes: {\n            minlength: 6,\n          },\n        }\n      ],\n    });\n\n    await alert.present();\n\n  }\n\n  /**\n   * Metodo para aplicar un Avatar al Usuario desde la Galeria\n   * Se selecciona la imagen de la galeria, la sanea para que sea segura y lanza el servicio de subida de la imagen\n   * a Firestorage y posteriormente el servicio de actualizacion del usuario pasando el ID del usuario y la URL de acceso\n   */\n  async setAvatarGallery() {\n    const foto = await Camera.getPhoto({\n      quality: 90,\n      allowEditing: false,\n      resultType: CameraResultType.DataUrl,\n      source: CameraSource.Photos,\n    });\n    //hay que sanearla\n    this.image = this.sanitizer.bypassSecurityTrustResourceUrl(foto && (foto.dataUrl));\n    let blob = await fetch(foto.dataUrl).then(r => r.blob());\n    this.imagenSaneada = blob;\n\n    const res = await this.multimediaSvc.subirImagen(this.imagenSaneada, 'avatar', this.usuarioLogado.EMAIL);\n    console.log('ruta', res);\n    console.log('id', this.usuarioLogado.ID);\n    this.userSvc.updateUserAvatar(this.usuarioLogado.ID, res);\n  }\n\n  /**\n  * Metodo para aplicar un Avatar al Usuario desde la Camara\n  * Se selecciona la imagen de la galeria, la sanea para que sea segura y lanza el servicio de subida de la imagen\n  * a Firestorage y posteriormente el servicio de actualizacion del usuario pasando el ID del usuario y la URL de acceso\n  */\n  async setAvatarCamara() {\n\n    const foto = await Camera.getPhoto({\n      quality: 90,\n      allowEditing: false,\n      resultType: CameraResultType.DataUrl,\n      source: CameraSource.Camera,\n    });\n    //hay que sanearla\n    this.image = this.sanitizer.bypassSecurityTrustResourceUrl(foto && (foto.dataUrl));\n    let blob = await fetch(foto.dataUrl).then(r => r.blob());\n    this.imagenSaneada = blob;\n\n    const res = await this.multimediaSvc.subirImagen(this.imagenSaneada, 'avatar', this.usuarioLogado.EMAIL);\n    console.log('ruta', res);\n    console.log('id', this.usuarioLogado.ID);\n    this.userSvc.updateUserAvatar(this.usuarioLogado.ID, res);\n\n  }\n\n}\n\n    \n\n    \n        \n  \n\n    \n      \n    \n\n    Hola {{usuarioLogado.NOMBRE}} !!\n  \n\n\n\n\n  \n    \n      \n    \n    Cambiar Avatar\n  \n\n\n  \n    Cambiar Contraseña\n  \n\n  \n    Puntos\n  \n\n  \n    Cerrar sesión\n  \n\n  \n    Eliminar Cuenta\n  \n\n\n\n    \n\n    \n                \n                    ./perfil.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Hola {{usuarioLogado.NOMBRE}} !!                      Cambiar Avatar        Cambiar Contraseña        Puntos        Cerrar sesión        Eliminar Cuenta  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FabLoginComponent', 'selector': 'app-fab-login'},{'name': 'FavoritosPage', 'selector': 'app-favoritos'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InfoRetoComponent', 'selector': 'app-info-reto'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MisRetosPage', 'selector': 'app-mis-retos'},{'name': 'NewRetoComponent', 'selector': 'app-new-reto'},{'name': 'NewsPagePage', 'selector': 'app-news-page'},{'name': 'NoticiaComponent', 'selector': 'app-noticia'},{'name': 'NoticiasComponent', 'selector': 'app-noticias'},{'name': 'PerfilPage', 'selector': 'app-perfil'},{'name': 'RankingPage', 'selector': 'app-ranking'},{'name': 'RegistroComponent', 'selector': 'app-registro'},{'name': 'RetoComponent', 'selector': 'app-reto'},{'name': 'RetosComponent', 'selector': 'app-retos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PerfilPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/PerfilPageModule.html":{"url":"modules/PerfilPageModule.html","title":"module - PerfilPageModule","body":"\n                   \n\n\n\n\n    Módulos\n    PerfilPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PerfilPageModule\n\n\n\ncluster_PerfilPageModule_imports\n\n\n\ncluster_PerfilPageModule_declarations\n\n\n\n\nPerfilPage\n\nPerfilPage\n\n\n\nPerfilPageModule\n\nPerfilPageModule\n\nPerfilPageModule -->\n\nPerfilPage->PerfilPageModule\n\n\n\n\n\nPerfilPageRoutingModule\n\nPerfilPageRoutingModule\n\nPerfilPageModule -->\n\nPerfilPageRoutingModule->PerfilPageModule\n\n\n\n\n\n\n    \n    \n    \n        Ampliar\n        Restablecer\n        Alejar\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/app/pages/perfil/perfil.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declaraciones\n                    \n                        \n                            PerfilPage\n                        \n                    \n                \n                \n                    Importa\n                    \n                        \n                            PerfilPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PerfilPageRoutingModule } from './perfil-routing.module';\n\nimport { PerfilPage } from './perfil.page';\n\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PerfilPageRoutingModule,\n    ComponentsModule\n  ],\n  declarations: [PerfilPage]\n})\nexport class PerfilPageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/PerfilPageRoutingModule.html":{"url":"modules/PerfilPageRoutingModule.html","title":"module - PerfilPageRoutingModule","body":"\n                   \n\n\n\n\n    Módulos\n    PerfilPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/app/pages/perfil/perfil-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PerfilPage } from './perfil.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PerfilPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PerfilPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/RankingPage.html":{"url":"components/RankingPage.html","title":"component - RankingPage","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  RankingPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/pages/ranking/ranking.page.ts\n\n\n\n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ranking\n            \n\n            \n                styleUrls\n                ./ranking.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./ranking.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                menuSvc\n                            \n                            \n                                    Public\n                                userEmail\n                            \n                            \n                                usuario\n                            \n                            \n                                usuarios\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userSvc: UserService, menuSvc: MenuService, authSvc: AuthService)\n                    \n                \n                        \n                            \n                                Definido en src/app/pages/ranking/ranking.page.ts:27\n                            \n                        \n\n                \n                    \n                            constructor de clase\n\n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                                    Descripción\n                                            \n                                        \n                                        \n                                                \n                                                        userSvc\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio personalizado para manejo de Usuarios\n\n                                                        \n                                                \n                                                \n                                                        menuSvc\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para controlar el menu\n\n                                                        \n                                                \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para gestionar la Autenticación\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/pages/ranking/ranking.page.ts:48\n                \n            \n\n\n            \n                \n                    Metodos de carga al inicio\nComprobamos si está logado y guardamos la info del usuario logado\nCarga los puntos de cada usuario\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        menuSvc\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         MenuService\n\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/ranking/ranking.page.ts:36\n                        \n                    \n\n            \n                \n                    Servicio para controlar el menu\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userEmail\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/ranking/ranking.page.ts:17\n                        \n                    \n\n            \n                \n                    Guarda el email del usuario logado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuario\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Usuario\n\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/ranking/ranking.page.ts:22\n                        \n                    \n\n            \n                \n                    Objeto de tipo usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuarios\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Usuario[]\n\n                    \n                \n                \n                    \n                        Valor por defecto : []\n                    \n                \n                    \n                        \n                                Definido en src/app/pages/ranking/ranking.page.ts:27\n                        \n                    \n\n            \n                \n                    Array de objetos de Usuario\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Usuario } from 'src/app/interfaces/interfaces';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { MenuService } from 'src/app/services/menu.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-ranking',\n  templateUrl: './ranking.page.html',\n  styleUrls: ['./ranking.page.scss'],\n})\nexport class RankingPage implements OnInit {\n\n  /**\n   * Guarda el email del usuario logado\n   */\n  public userEmail: string;\n\n  /**\n   * Objeto de tipo usuario\n   */\n  usuario: Usuario;\n\n  /**\n   * Array de objetos de Usuario\n   */\n  usuarios: Usuario[] = [];\n\n  /**\n   * constructor de clase\n   * @param userSvc Servicio personalizado para manejo de Usuarios\n   * @param menuSvc Servicio para controlar el menu\n   * @param authSvc Servicio para gestionar la Autenticación\n   */\n  constructor(private userSvc: UserService,\n    public menuSvc: MenuService,\n    private authSvc: AuthService) {\n\n      //Cargamos opciones de Menu\n    this.menuSvc.setMenu();\n\n  }\n\n  /**Metodos de carga al inicio\n   * Comprobamos si está logado y guardamos la info del usuario logado\n   * Carga los puntos de cada usuario\n   */\n  ngOnInit() {\n\n    this.authSvc.getUserEmail().then(email => {\n      this.userEmail = email;\n      this.userSvc.getUserByEmail(this.userEmail).subscribe(usuario => {\n        this.usuario = usuario;\n      });\n\n    });\n\n    this.userSvc.getUsuariosPorPuntos().subscribe(usuarios => {\n      this.usuarios = usuarios;\n    });\n\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n    \n        {{usuario.NOMBRE}}\n        {{usuario.PUNTOS}}\n    \n\n\n\n\n\n    \n\n    \n                \n                    ./ranking.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{usuario.NOMBRE}}        {{usuario.PUNTOS}}    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FabLoginComponent', 'selector': 'app-fab-login'},{'name': 'FavoritosPage', 'selector': 'app-favoritos'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InfoRetoComponent', 'selector': 'app-info-reto'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MisRetosPage', 'selector': 'app-mis-retos'},{'name': 'NewRetoComponent', 'selector': 'app-new-reto'},{'name': 'NewsPagePage', 'selector': 'app-news-page'},{'name': 'NoticiaComponent', 'selector': 'app-noticia'},{'name': 'NoticiasComponent', 'selector': 'app-noticias'},{'name': 'PerfilPage', 'selector': 'app-perfil'},{'name': 'RankingPage', 'selector': 'app-ranking'},{'name': 'RegistroComponent', 'selector': 'app-registro'},{'name': 'RetoComponent', 'selector': 'app-reto'},{'name': 'RetosComponent', 'selector': 'app-retos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RankingPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/RankingPageModule.html":{"url":"modules/RankingPageModule.html","title":"module - RankingPageModule","body":"\n                   \n\n\n\n\n    Módulos\n    RankingPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RankingPageModule\n\n\n\ncluster_RankingPageModule_declarations\n\n\n\ncluster_RankingPageModule_imports\n\n\n\n\nRankingPage\n\nRankingPage\n\n\n\nRankingPageModule\n\nRankingPageModule\n\nRankingPageModule -->\n\nRankingPage->RankingPageModule\n\n\n\n\n\nRankingPageRoutingModule\n\nRankingPageRoutingModule\n\nRankingPageModule -->\n\nRankingPageRoutingModule->RankingPageModule\n\n\n\n\n\n\n    \n    \n    \n        Ampliar\n        Restablecer\n        Alejar\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/app/pages/ranking/ranking.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declaraciones\n                    \n                        \n                            RankingPage\n                        \n                    \n                \n                \n                    Importa\n                    \n                        \n                            RankingPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RankingPageRoutingModule } from './ranking-routing.module';\n\nimport { RankingPage } from './ranking.page';\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RankingPageRoutingModule,\n    ComponentsModule\n  ],\n  declarations: [RankingPage]\n})\nexport class RankingPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/RankingPageRoutingModule.html":{"url":"modules/RankingPageRoutingModule.html","title":"module - RankingPageRoutingModule","body":"\n                   \n\n\n\n\n    Módulos\n    RankingPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/app/pages/ranking/ranking-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RankingPage } from './ranking.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RankingPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RankingPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/RegistroComponent.html":{"url":"components/RegistroComponent.html","title":"component - RegistroComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  RegistroComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/components/registro/registro.component.ts\n\n\n\n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registro\n            \n\n            \n                styleUrls\n                ./registro.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./registro.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                errorMsg\n                            \n                            \n                                registroForm\n                            \n                            \n                                successMsg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registro\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authSrv: AuthService, fBuilder: FormBuilder, modalCtrl: ModalController)\n                    \n                \n                        \n                            \n                                Definido en src/app/components/registro/registro.component.ts:29\n                            \n                        \n\n                \n                    \n                            Constructor de clase\n\n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                                    Descripción\n                                            \n                                        \n                                        \n                                                \n                                                        authSrv\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de Autenticación personalizado\n\n                                                        \n                                                \n                                                \n                                                        fBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Componente de manejo de Formulario\n\n                                                        \n                                                \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Componente de manejo del Modal\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/registro/registro.component.ts:45\n                \n            \n\n\n            \n                \n                    Construimos el Formulario de registro asignando los valores y validando patrones de email y contraseña.\nTambién marcamos los campos obligatorios.\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registro\n                        \n                    \n                \n            \n            \n                \nregistro(value: any)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/registro/registro.component.ts:65\n                \n            \n\n\n            \n                \n                    Este método envia al Servicio de Autenticacion los valores del Formulario y muestra mensaje según resultado.\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Valor recibido a través del formulario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMsg\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Error[]\n\n                    \n                \n                \n                    \n                        Valor por defecto : []\n                    \n                \n                    \n                        \n                                Definido en src/app/components/registro/registro.component.ts:29\n                        \n                    \n\n            \n                \n                    Mensajes de Error declarados en Interfaces\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registroForm\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         FormGroup\n\n                    \n                \n                    \n                        \n                                Definido en src/app/components/registro/registro.component.ts:19\n                        \n                    \n\n            \n                \n                    Declaracion del Formulario de Registro\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMsg\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valor por defecto : ''\n                    \n                \n                    \n                        \n                                Definido en src/app/components/registro/registro.component.ts:24\n                        \n                    \n\n            \n                \n                    Mensajes de proceso correcto\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\n\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Error } from 'src/app/interfaces/errores';\n\n@Component({\n  selector: 'app-registro',\n  templateUrl: './registro.component.html',\n  styleUrls: ['./registro.component.scss'],\n})\nexport class RegistroComponent implements OnInit {\n\n  /**\n   * Declaracion del Formulario de Registro\n   */\n  registroForm: FormGroup;\n\n  /**\n   * Mensajes de proceso correcto\n   */\n  successMsg: string = '';\n\n  /**\n   * Mensajes de Error declarados en Interfaces\n   */\n  errorMsg: Error[] = [];\n\n  /**\n   * Constructor de clase\n   * @param authSrv Servicio de Autenticación personalizado\n   * @param fBuilder Componente de manejo de Formulario\n   * @param modalCtrl Componente de manejo del Modal\n   */\n  constructor(private authSrv: AuthService,\n    private fBuilder: FormBuilder,\n    private modalCtrl: ModalController) { }\n\n    /**\n     * Construimos el Formulario de registro asignando los valores y validando patrones de email y contraseña.\n     * También marcamos los campos obligatorios.\n     */\n  ngOnInit() {\n    this.registroForm = this.fBuilder.group({\n      NOMBRE: new FormControl('', Validators.compose([\n        Validators.required\n      ])),\n      EMAIL: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      PASSWORD: new FormControl('', Validators.compose([\n        Validators.minLength(6),\n        Validators.required\n      ])),\n    });\n  }\n\n  /**\n   * Este método envia al Servicio de Autenticacion los valores del Formulario y muestra mensaje según resultado.\n   * @param value Valor recibido a través del formulario\n   */\n  registro(value: any) {\n    this.authSrv.signUp(value)\n      .then((response) => {\n        this.errorMsg = [];\n        this.successMsg = \"Usuario Creado.\";\n        this.modalCtrl.dismiss();\n      }, error => {\n        this.errorMsg = error.message;\n        this.successMsg = \"\";\n      })\n  }\n\n}\n\n    \n\n    \n        \n  \n    Registro\n  \n\n\n\n  \n\n    \n      Nombre\n      \n    \n\n    \n      Email\n      \n    \n    \n    \n      \n        {{  error.email[0].message }}\n      \n    \n\n    \n      Password\n      \n    \n    \n    \n        \n          {{ error.password[1].message }}\n        \n    \n\n    Registrar\n    \n    {{errorMsg}}\n    {{successMsg}}\n  \n  \n\n    \n\n    \n                \n                    ./registro.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Registro              Nombre                    Email                                {{  error.email[0].message }}                    Password                                    {{ error.password[1].message }}                Registrar        {{errorMsg}}    {{successMsg}}    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FabLoginComponent', 'selector': 'app-fab-login'},{'name': 'FavoritosPage', 'selector': 'app-favoritos'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InfoRetoComponent', 'selector': 'app-info-reto'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MisRetosPage', 'selector': 'app-mis-retos'},{'name': 'NewRetoComponent', 'selector': 'app-new-reto'},{'name': 'NewsPagePage', 'selector': 'app-news-page'},{'name': 'NoticiaComponent', 'selector': 'app-noticia'},{'name': 'NoticiasComponent', 'selector': 'app-noticias'},{'name': 'PerfilPage', 'selector': 'app-perfil'},{'name': 'RankingPage', 'selector': 'app-ranking'},{'name': 'RegistroComponent', 'selector': 'app-registro'},{'name': 'RetoComponent', 'selector': 'app-reto'},{'name': 'RetosComponent', 'selector': 'app-retos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistroComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/Reto.html":{"url":"interfaces/Reto.html","title":"interface - Reto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Reto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Descripción\n            \n            \n                Interface para el manejo de retos. COLECCION: retos\n\n            \n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ACTIVO\n                                        \n                                \n                                \n                                        \n                                            DESCRIPCION\n                                        \n                                \n                                \n                                        \n                                            DESTACADO\n                                        \n                                \n                                \n                                        \n                                            ID\n                                        \n                                \n                                \n                                        \n                                            IMAGEN\n                                        \n                                \n                                \n                                        \n                                            NIVEL\n                                        \n                                \n                                \n                                        \n                                            RETADOR\n                                        \n                                \n                                \n                                        \n                                            TIPO\n                                        \n                                \n                                \n                                        \n                                            TITULO\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        ACTIVO\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ACTIVO:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indica si el reto esta activo o no. El retador puede manejar los suyos. Los administradores, todos.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DESCRIPCION\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DESCRIPCION:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Descripcion larga del reto\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DESTACADO\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DESTACADO:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Marca retos destacados. TODAVIA NO ESTA IMPLEMENTADO\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador del Reto. Es el mismo que el autogenerado por Firestore.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IMAGEN\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        IMAGEN:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Imagen del reto subida por el retador\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NIVEL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        NIVEL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nivel del reto. Puede ser facil, intermedio o dificil\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        RETADOR\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        RETADOR:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Email del retador.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TIPO\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TIPO:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tipo de reto. Puede ser ocular, prismaticos o telescopio\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TITULO\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TITULO:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Titulo del reto\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Usuario {\n  /**\n   * Identificador del usuario. Es el mismo que el autogenerado por Firebase para facilitar el manejo del objeto\n   */\n  ID: string,\n\n  /**\n   * Nombre del usuario\n   */\n  NOMBRE: string,\n\n  /**\n   * Email del usuario\n   */\n  EMAIL: string,\n\n  /**\n   * Contraseña del usuario. No se envia ni se guarda. Solo se usa para el método de cambio de Password\n   */\n  PASSWORD: string,\n\n  /**\n   * Rol del usuario. Puede ser Anónimo, Retador o Administrador\n   */\n  ROL: string,\n\n  /**\n   * URL de acceso al avatar.\n   */\n  AVATAR: string,\n\n  /**\n   * Puntos totales según el número de retos conseguidos\n   */\n  PUNTOS: number\n}\n\n/**\n * Interface para el manejo de retos. COLECCION: retos\n */\nexport interface Reto {\n\n  /**\n   * Identificador del Reto. Es el mismo que el autogenerado por Firestore.\n   */\n  ID: string,\n\n  /**\n   * Titulo del reto\n   */\n  TITULO: string,\n\n  /**\n   * Descripcion larga del reto\n   */\n  DESCRIPCION: string,\n\n  /**\n   * Tipo de reto. Puede ser ocular, prismaticos o telescopio\n   */\n  TIPO: string,\n\n  /**\n   * Nivel del reto. Puede ser facil, intermedio o dificil\n   */\n  NIVEL: string,\n\n  /**\n   * Indica si el reto esta activo o no. El retador puede manejar los suyos. Los administradores, todos.\n   */\n  ACTIVO: boolean,\n\n  /**\n   * Marca retos destacados. TODAVIA NO ESTA IMPLEMENTADO\n   */\n  DESTACADO: boolean,\n\n  /**\n   * Email del retador.\n   */\n  RETADOR: string,\n\n  /**\n   * Imagen del reto subida por el retador\n   */\n  IMAGEN: string,\n}\n\n/**\n * Interface para manejar Favoritos. COLECCION: favoritos\n */\nexport interface Favorito {\n  /**\n   * Identificador del Reto.\n   */\n  ID_RETO: string;\n\n  /**\n   * Identificador de Favorito. Se guarda como campo el Identificador autogenerado para que sea más accesible \n   */\n  ID_FAV: string;\n\n  /**\n   * Email del usuario que marca el Favorito\n   */\n  USER: string;\n}\n\n/**\n * Interface para el manejo de los retos conseguidos. COLECCION: retosconseguidos\n */\nexport interface RetoConseguido {\n  /**\n   * Identificador del Reto.\n   */\n  ID_RETO: string;\n\n  /**\n   * Identificador del objeto, igual al autogenerado por Firestore\n   */\n  ID_RETO_CONSEGUIDO: string;\n\n  /**\n   * Email dle usuario que ha conseguido el reto\n   */\n  USER: string;\n\n  /**\n   * Puntos conseguidos por ese reto\n   */\n  PUNTOS: number;\n}\n\n/**\n * Interface para el manejo del Menu. Segun el rol del usuario, se cargaran unas opciones u otras.\n */\nexport interface MenuOpts {\n\n  /**\n   * Icono de la opcion de menu\n   */\n  icon: string;\n\n  /**\n   * Nombre a mostrar en el menu\n   */\n  name: string;\n\n  /**\n   * Página o tura a la que nos lleva la opcion\n   */\n  redirectTo: string;\n\n  /**\n   * Roles que tienen acceso: all, retador, administrador\n   */\n  rol: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/RetoComponent.html":{"url":"components/RetoComponent.html","title":"component - RetoComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  RetoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/components/reto/reto.component.ts\n\n\n\n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reto\n            \n\n            \n                styleUrls\n                ./reto.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./reto.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                esFavorito\n                            \n                            \n                                esRetoConseguido\n                            \n                            \n                                favorito\n                            \n                            \n                                favoritos\n                            \n                            \n                                iconTipo\n                            \n                            \n                                mensaje\n                            \n                            \n                                puntos\n                            \n                            \n                                retos\n                            \n                            \n                                    Public\n                                userEmail\n                            \n                            \n                                usuarioLogado\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                checkRetoConseguido\n                            \n                            \n                                checkRetoFavorito\n                            \n                            \n                                compartirReto\n                            \n                            \n                                getColorNivel\n                            \n                            \n                                getIconTipo\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                quitarFavorito\n                            \n                            \n                                removeRetoConseguido\n                            \n                            \n                                setFavorito\n                            \n                            \n                                    Async\n                                setRetoConseguido\n                            \n                            \n                                    Async\n                                verDetalle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Entradas\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                            \n                                reto\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(retoSvc: RetoService, modalCtrl: ModalController, socialSharing: SocialSharing, platform: Platform, userSvc: UserService, authSvc: AuthService, avisosSvc: AvisosService)\n                    \n                \n                        \n                            \n                                Definido en src/app/components/reto/reto.component.ts:78\n                            \n                        \n\n                \n                    \n                            constructor de clase\n\n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                                    Descripción\n                                            \n                                        \n                                        \n                                                \n                                                        retoSvc\n                                                  \n                                                        \n                                                                        RetoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para el manejo de los retos\n\n                                                        \n                                                \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controlador de uso de modales\n\n                                                        \n                                                \n                                                \n                                                        socialSharing\n                                                  \n                                                        \n                                                                    SocialSharing\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Componente usado para compartir retos en aplicaciones\n\n                                                        \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Componente para comprobar la plataforma de ejecucion\n\n                                                        \n                                                \n                                                \n                                                        userSvc\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de manejo del usuario\n\n                                                        \n                                                \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para controlar la autenticacion\n\n                                                        \n                                                \n                                                \n                                                        avisosSvc\n                                                  \n                                                        \n                                                                        AvisosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de avisos a traves dded toast\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Entradas\n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                        \n                            \n                                    Definido en src/app/components/reto/reto.component.ts:33\n                            \n                        \n                \n                    \n                        recibe un numero de indice para la carga\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        reto\n                    \n                \n                \n                    \n                        Tipo :         Reto\n\n                    \n                \n                        \n                            \n                                    Definido en src/app/components/reto/reto.component.ts:28\n                            \n                        \n                \n                    \n                        Recibe el objeto reto a cargar\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        checkRetoConseguido\n                        \n                    \n                \n            \n            \n                \ncheckRetoConseguido(retoId: string, user: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/reto/reto.component.ts:253\n                \n            \n\n\n            \n                \n                    Gestiona si el reto esta esta conseguido por el usuario o no para mostrar el icono correspondiente\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    retoId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkRetoFavorito\n                        \n                    \n                \n            \n            \n                \ncheckRetoFavorito(retoId: string, user: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/reto/reto.component.ts:195\n                \n            \n\n\n            \n                \n                    Gestiona si el reto esta en Favorito o no para mostrar el icono correspondiente\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    retoId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        compartirReto\n                        \n                    \n                \n            \n            \n                \ncompartirReto()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/reto/reto.component.ts:175\n                \n            \n\n\n            \n                \n                    Método para compartir el reto en las aplicaciones disponibles en el terminal (Mail o RRSS)\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColorNivel\n                        \n                    \n                \n            \n            \n                \ngetColorNivel(nivel: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/reto/reto.component.ts:159\n                \n            \n\n\n            \n                \n                    Cambia el color del icono segun el nivel de dificultad del Reto\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    nivel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Nivel del Reto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         string\n\n                    \n                    \n                        El color del icono (verde, amarillo, rojo)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIconTipo\n                        \n                    \n                \n            \n            \n                \ngetIconTipo(tipo: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/reto/reto.component.ts:141\n                \n            \n\n\n            \n                \n                    CAmbia el Icono del reto según el tipo (ocular, telescopio, prismaticos)\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    tipo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tipo de Reto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         string\n\n                    \n                    \n                        el nombre del icono de ionicons.io\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/reto/reto.component.ts:112\n                \n            \n\n\n            \n                \n                    Método de inicio\nCheckeamos si el usuario logado tiene el reto en favorito o conseguido para mostrar los iconos correspondientes\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quitarFavorito\n                        \n                    \n                \n            \n            \n                \nquitarFavorito(retoId: string, email: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/reto/reto.component.ts:233\n                \n            \n\n\n            \n                \n                    Metodo para desmarcar un reto como favorito\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    retoId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id del reto a marcar\n\n                                    \n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRetoConseguido\n                        \n                    \n                \n            \n            \n                \nremoveRetoConseguido(retoId: string, email: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/reto/reto.component.ts:289\n                \n            \n\n\n            \n                \n                    Metodo para desmarcar el reto conseguido\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    retoId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id del reto a marcar\n\n                                    \n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFavorito\n                        \n                    \n                \n            \n            \n                \nsetFavorito(retoId: string, user: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/reto/reto.component.ts:209\n                \n            \n\n\n            \n                \n                    Metodo para marcar un reto como favorito\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    retoId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id del reto a marcar\n\n                                    \n                                \n                                \n                                    user\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Email del usuario logado\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setRetoConseguido\n                        \n                    \n                \n            \n            \n                \n                    \n                    setRetoConseguido(retoId: string, user: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/reto/reto.component.ts:267\n                \n            \n\n\n            \n                \n                    Metodo para marcar un reto como conseguido\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    retoId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id del reto a marcar\n\n                                    \n                                \n                                \n                                    user\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Email del usuario logado\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verDetalle\n                        \n                    \n                \n            \n            \n                \n                    \n                    verDetalle(id: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/reto/reto.component.ts:124\n                \n            \n\n\n            \n                \n                    Carga un modal para mostar la info detallada de un reto\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id del Reto a mostrar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                        esFavorito\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definido en src/app/components/reto/reto.component.ts:60\n                        \n                    \n\n            \n                \n                    Para comprobar si el reto esta en favoritos del usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        esRetoConseguido\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         boolean\n\n                    \n                \n                    \n                        \n                                Definido en src/app/components/reto/reto.component.ts:65\n                        \n                    \n\n            \n                \n                    Para comprobar si el resto está conseguido por el usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        favorito\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Favorito\n\n                    \n                \n                    \n                        \n                                Definido en src/app/components/reto/reto.component.ts:55\n                        \n                    \n\n            \n                \n                    Objeto de tipo Favorito para almacenar la informacion\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        favoritos\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Favorito[]\n\n                    \n                \n                \n                    \n                        Valor por defecto : []\n                    \n                \n                    \n                        \n                                Definido en src/app/components/reto/reto.component.ts:50\n                        \n                    \n\n            \n                \n                    Declaramos Array de Favoritos para guardar la info para mostrar.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconTipo\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definido en src/app/components/reto/reto.component.ts:69\n                        \n                    \n\n            \n                \n                    Declara el tipo de icono para cambiarlo según el tipo de reto.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mensaje\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valor por defecto : 'Te reto!'\n                    \n                \n                    \n                        \n                                Definido en src/app/components/reto/reto.component.ts:73\n                        \n                    \n\n            \n                \n                    Mensaje para compartir por RRSS.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        puntos\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         number\n\n                    \n                \n                    \n                        \n                                Definido en src/app/components/reto/reto.component.ts:78\n                        \n                    \n\n            \n                \n                    Numero de puntos obtenidos al conseguir el reto\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        retos\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Reto[]\n\n                    \n                \n                \n                    \n                        Valor por defecto : []\n                    \n                \n                    \n                        \n                                Definido en src/app/components/reto/reto.component.ts:46\n                        \n                    \n\n            \n                \n                    Declaramos Array de Retos para guardar la info para mostrar.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userEmail\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definido en src/app/components/reto/reto.component.ts:42\n                        \n                    \n\n            \n                \n                    Variable para guardar el email del usuario logado y así personalizar los iconos del reto\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuarioLogado\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : false\n                    \n                \n                    \n                        \n                                Definido en src/app/components/reto/reto.component.ts:38\n                        \n                    \n\n            \n                \n                    Comprueba si el usuario está logado o no para habilitar el icono de favoritos y de Realizado.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\nimport { ModalController, Platform } from '@ionic/angular';\nimport { SocialSharing } from '@awesome-cordova-plugins/social-sharing/ngx';\n\nimport { Favorito, Reto } from 'src/app/interfaces/interfaces';\nimport { RetoService } from 'src/app/services/reto.service';\nimport { InfoRetoComponent } from '../info-reto/info-reto.component';\nimport { AuthService } from 'src/app/services/auth.service';\n\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\n\nimport { AvisosService } from 'src/app/services/avisos.service';\nimport { UserService } from 'src/app/services/user.service';\n\n\n\n@Component({\n  selector: 'app-reto',\n  templateUrl: './reto.component.html',\n  styleUrls: ['./reto.component.scss'],\n})\nexport class RetoComponent implements OnInit {\n\n/**\n * Recibe el objeto reto a cargar\n */\n  @Input() reto!: Reto;\n\n/**\n *recibe un numero de indice para la carga \n */\n  @Input() index!: number;\n\n  /**\n   * Comprueba si el usuario está logado o no para habilitar el icono de favoritos y de Realizado.\n   */\n  usuarioLogado = false;\n  /**\n   * Variable para guardar el email del usuario logado y así personalizar los iconos del reto\n   */\n  public userEmail: string;\n  /**\n   * Declaramos Array de Retos para guardar la info para mostrar.\n   */\n  retos: Reto[] = [];\n  /**\n    * Declaramos Array de Favoritos para guardar la info para mostrar.\n    */\n  favoritos: Favorito[] = [];\n\n  /**\n   * Objeto de tipo Favorito para almacenar la informacion\n   */\n  favorito: Favorito;\n\n  /**\n   * Para comprobar si el reto esta en favoritos del usuario\n   */\n  esFavorito: boolean;\n\n  /**\n   * Para comprobar si el resto está conseguido por el usuario\n   */\n  esRetoConseguido: boolean;\n  /**\n   * Declara el tipo de icono para cambiarlo según el tipo de reto.\n   */\n  iconTipo: string;\n  /**\n   * Mensaje para compartir por RRSS.\n   */\n  mensaje: string = 'Te reto!';\n\n  /**\n   * Numero de puntos obtenidos al conseguir el reto\n   */\n  puntos: number;\n\n/**\n * constructor de clase\n * @param retoSvc Servicio para el manejo de los retos\n * @param modalCtrl Controlador de uso de modales\n * @param socialSharing Componente usado para compartir retos en aplicaciones\n * @param platform Componente para comprobar la plataforma de ejecucion\n * @param userSvc Servicio de manejo del usuario\n * @param authSvc Servicio para controlar la autenticacion\n * @param avisosSvc Servicio de avisos a traves dded toast\n */\n  constructor(private retoSvc: RetoService,\n    private modalCtrl: ModalController,\n    private socialSharing: SocialSharing,\n    private platform: Platform,\n    private userSvc: UserService,\n    private authSvc: AuthService,\n    private avisosSvc: AvisosService) {\n\n   /*  this.userSvc.getUserEmail().subscribe(email => {\n      this.userEmail = email;\n      console.log('email', this.userEmail);\n    }); */\n\n    this.authSvc.initAuthStateListener();\n    this.userEmail = this.authSvc.userEmail;\n\n  }\n\n  /**\n   * Método de inicio\n   * Checkeamos si el usuario logado tiene el reto en favorito o conseguido para mostrar los iconos correspondientes\n   */\n  ngOnInit() {\n\n    console.log(this.reto.ID, this.userEmail);\n    this.checkRetoFavorito(this.reto.ID, this.userEmail);\n    this.checkRetoConseguido(this.reto.ID, this.userEmail);\n\n  }\n\n  /**\n   * Carga un modal para mostar la info detallada de un reto\n   * @param id Id del Reto a mostrar\n   */\n  async verDetalle(id: string) {\n    const modal = await this.modalCtrl.create({\n      component: InfoRetoComponent,\n      componentProps: {\n        id\n      },\n      cssClass: 'modalInfo'\n    });\n\n    modal.present();\n  }\n\n  /**\n   * CAmbia el Icono del reto según el tipo (ocular, telescopio, prismaticos)\n   * @param tipo Tipo de Reto\n   * @returns el nombre del icono de ionicons.io\n   */\n  getIconTipo(tipo: string): string {\n    switch (tipo) {\n      case 'telescopio':\n        return 'telescope-outline';\n      case 'prismaticos':\n        return 'recording-outline';\n      case 'ocular':\n        return 'eye-outline';\n      default:\n        return 'help';\n    }\n  }\n\n  /**\n   * Cambia el color del icono segun el nivel de dificultad del Reto\n   * @param nivel Nivel del Reto\n   * @returns El color del icono (verde, amarillo, rojo)\n   */\n  getColorNivel(nivel: string): string {\n    switch (nivel) {\n      case 'facil':\n        return 'success';\n      case 'intermedio':\n        return 'warning';\n      case 'dificil':\n        return 'danger';\n      default:\n        return 'help';\n    }\n  }\n\n  /**\n   * Método para compartir el reto en las aplicaciones disponibles en el terminal (Mail o RRSS)\n   */\n  compartirReto() {\n\n    if (this.platform.is('cordova')) {\n      this.socialSharing.share(this.mensaje);\n    } else {\n      if (navigator.share) {\n        navigator.share({\n          text: this.mensaje,\n          url: ''\n        })\n          .then(() => console.log('Compartido!'))\n          .catch((error) => console.log('Error compartiendo', error));\n      }\n    }\n\n  }\n\n  /**\n   * Gestiona si el reto esta en Favorito o no para mostrar el icono correspondiente\n   */\n  checkRetoFavorito(retoId: string, user: string) {\n\n    this.retoSvc.checkFavorito(retoId, user).subscribe(existe => {\n      this.esFavorito = existe;\n      console.log(this.esFavorito);\n    });\n\n  }\n\n/**\n * Metodo para marcar un reto como favorito\n * @param retoId Id del reto a marcar\n * @param user Email del usuario logado\n */\n  setFavorito(retoId: string, user: string) {\n\n    try {\n\n      if (user !== '') {\n        this.retoSvc.addFavorito(retoId, user);\n        this.avisosSvc.presentToast('Favorito añadido', 'success');\n\n      } else {\n        this.avisosSvc.presentToast('Debes estar logado para hacer esto', 'warning');\n      }\n\n\n    } catch (error) {\n      this.avisosSvc.presentToast('Error al añadir Favorito', 'danger');\n    }\n\n  }\n\n  /**\n * Metodo para desmarcar un reto como favorito\n * @param retoId Id del reto a marcar\n * @param user Email del usuario logado\n */\n  quitarFavorito(retoId: string, email: string) {\n\n    try {\n\n      this.retoSvc.getFavorito(retoId, email).subscribe(fav => {\n\n        this.retoSvc.deleteFavorito(fav[0].ID_FAV);\n      })\n\n\n      this.avisosSvc.presentToast('Favorito eliminado correctamente', 'success');\n    } catch (error) {\n      this.avisosSvc.presentToast('Error al eliminar el Favorito', 'danger');\n    }\n\n  }\n\n  /**\n   * Gestiona si el reto esta esta conseguido por el usuario o no para mostrar el icono correspondiente\n   */\n  checkRetoConseguido(retoId: string, user: string) {\n\n    this.retoSvc.checkRetoConseguido(retoId, user).subscribe(existe => {\n      this.esRetoConseguido = existe;\n      console.log(this.esRetoConseguido);\n    });\n\n  }\n\n  /**\n * Metodo para marcar un reto como conseguido\n * @param retoId Id del reto a marcar\n * @param user Email del usuario logado\n */\n  async setRetoConseguido(retoId: string, user: string) {\n\n    try {\n\n      await this.retoSvc.addRetoConseguido(retoId, user);\n      this.avisosSvc.presentToast('Reto conseguido', 'success');\n      this.userSvc.getTotalPuntosByUser(this.userEmail).subscribe(totalPuntos => {\n\n        this.userSvc.updateUserPuntos(this.userEmail, totalPuntos);\n      });\n\n    } catch (error) {\n      this.avisosSvc.presentToast('Error al conseguir Reto', 'danger');\n    }\n\n  }\n\n  /**\n * Metodo para desmarcar el reto conseguido\n * @param retoId Id del reto a marcar\n * @param user Email del usuario logado\n */\n  removeRetoConseguido(retoId: string, email:string) {\n\n    try {\n\n      this.retoSvc.getRetoConseguido(retoId, email).subscribe(retoConseguido => {\n\n        this.retoSvc.deleteRetoConseguido(retoConseguido[0].ID_RETO_CONSEGUIDO);\n        this.avisosSvc.presentToast('Reto Conseguido eliminado', 'success');\n      });\n    } catch (error) {\n      this.avisosSvc.presentToast('Error al eliminar Reto', 'danger');\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n  \n\n    \n       {{reto.TITULO}} \n      \n    \n\n  \n\n  \n    \n      \n    \n    \n\n      \n      \n\n\n\n\n    \n    \n\n      \n        \n          \n        \n      \n\n    \n  \n\n    \n\n    \n                \n                    ./reto.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             {{reto.TITULO}}                                                                                                 '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FabLoginComponent', 'selector': 'app-fab-login'},{'name': 'FavoritosPage', 'selector': 'app-favoritos'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InfoRetoComponent', 'selector': 'app-info-reto'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MisRetosPage', 'selector': 'app-mis-retos'},{'name': 'NewRetoComponent', 'selector': 'app-new-reto'},{'name': 'NewsPagePage', 'selector': 'app-news-page'},{'name': 'NoticiaComponent', 'selector': 'app-noticia'},{'name': 'NoticiasComponent', 'selector': 'app-noticias'},{'name': 'PerfilPage', 'selector': 'app-perfil'},{'name': 'RankingPage', 'selector': 'app-ranking'},{'name': 'RegistroComponent', 'selector': 'app-registro'},{'name': 'RetoComponent', 'selector': 'app-reto'},{'name': 'RetosComponent', 'selector': 'app-retos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RetoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/RetoConseguido.html":{"url":"interfaces/RetoConseguido.html","title":"interface - RetoConseguido","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RetoConseguido\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Descripción\n            \n            \n                Interface para el manejo de los retos conseguidos. COLECCION: retosconseguidos\n\n            \n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ID_RETO\n                                        \n                                \n                                \n                                        \n                                            ID_RETO_CONSEGUIDO\n                                        \n                                \n                                \n                                        \n                                            PUNTOS\n                                        \n                                \n                                \n                                        \n                                            USER\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        ID_RETO\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ID_RETO:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador del Reto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ID_RETO_CONSEGUIDO\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ID_RETO_CONSEGUIDO:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador del objeto, igual al autogenerado por Firestore\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PUNTOS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        PUNTOS:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Puntos conseguidos por ese reto\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        USER\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        USER:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Email dle usuario que ha conseguido el reto\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Usuario {\n  /**\n   * Identificador del usuario. Es el mismo que el autogenerado por Firebase para facilitar el manejo del objeto\n   */\n  ID: string,\n\n  /**\n   * Nombre del usuario\n   */\n  NOMBRE: string,\n\n  /**\n   * Email del usuario\n   */\n  EMAIL: string,\n\n  /**\n   * Contraseña del usuario. No se envia ni se guarda. Solo se usa para el método de cambio de Password\n   */\n  PASSWORD: string,\n\n  /**\n   * Rol del usuario. Puede ser Anónimo, Retador o Administrador\n   */\n  ROL: string,\n\n  /**\n   * URL de acceso al avatar.\n   */\n  AVATAR: string,\n\n  /**\n   * Puntos totales según el número de retos conseguidos\n   */\n  PUNTOS: number\n}\n\n/**\n * Interface para el manejo de retos. COLECCION: retos\n */\nexport interface Reto {\n\n  /**\n   * Identificador del Reto. Es el mismo que el autogenerado por Firestore.\n   */\n  ID: string,\n\n  /**\n   * Titulo del reto\n   */\n  TITULO: string,\n\n  /**\n   * Descripcion larga del reto\n   */\n  DESCRIPCION: string,\n\n  /**\n   * Tipo de reto. Puede ser ocular, prismaticos o telescopio\n   */\n  TIPO: string,\n\n  /**\n   * Nivel del reto. Puede ser facil, intermedio o dificil\n   */\n  NIVEL: string,\n\n  /**\n   * Indica si el reto esta activo o no. El retador puede manejar los suyos. Los administradores, todos.\n   */\n  ACTIVO: boolean,\n\n  /**\n   * Marca retos destacados. TODAVIA NO ESTA IMPLEMENTADO\n   */\n  DESTACADO: boolean,\n\n  /**\n   * Email del retador.\n   */\n  RETADOR: string,\n\n  /**\n   * Imagen del reto subida por el retador\n   */\n  IMAGEN: string,\n}\n\n/**\n * Interface para manejar Favoritos. COLECCION: favoritos\n */\nexport interface Favorito {\n  /**\n   * Identificador del Reto.\n   */\n  ID_RETO: string;\n\n  /**\n   * Identificador de Favorito. Se guarda como campo el Identificador autogenerado para que sea más accesible \n   */\n  ID_FAV: string;\n\n  /**\n   * Email del usuario que marca el Favorito\n   */\n  USER: string;\n}\n\n/**\n * Interface para el manejo de los retos conseguidos. COLECCION: retosconseguidos\n */\nexport interface RetoConseguido {\n  /**\n   * Identificador del Reto.\n   */\n  ID_RETO: string;\n\n  /**\n   * Identificador del objeto, igual al autogenerado por Firestore\n   */\n  ID_RETO_CONSEGUIDO: string;\n\n  /**\n   * Email dle usuario que ha conseguido el reto\n   */\n  USER: string;\n\n  /**\n   * Puntos conseguidos por ese reto\n   */\n  PUNTOS: number;\n}\n\n/**\n * Interface para el manejo del Menu. Segun el rol del usuario, se cargaran unas opciones u otras.\n */\nexport interface MenuOpts {\n\n  /**\n   * Icono de la opcion de menu\n   */\n  icon: string;\n\n  /**\n   * Nombre a mostrar en el menu\n   */\n  name: string;\n\n  /**\n   * Página o tura a la que nos lleva la opcion\n   */\n  redirectTo: string;\n\n  /**\n   * Roles que tienen acceso: all, retador, administrador\n   */\n  rol: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/RetosComponent.html":{"url":"components/RetosComponent.html","title":"component - RetosComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  \n  RetosComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/components/retos/retos.component.ts\n\n\n\n\n\n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-retos\n            \n\n            \n                styleUrls\n                ./retos.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./retos.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                reto\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Entradas\n                    \n                \n                \n                    \n                        \n                            \n                                retos\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definido en src/app/components/retos/retos.component.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor de clase\n\n                    \n                \n            \n        \n\n\n    \n    Entradas\n        \n            \n                \n                    \n                        \n                        retos\n                    \n                \n                \n                    \n                        Tipo :         Reto[]\n\n                    \n                \n                \n                    \n                        Valor por defecto : []\n                    \n                \n                        \n                            \n                                    Definido en src/app/components/retos/retos.component.ts:20\n                            \n                        \n                \n                    \n                        Recie retos como parámetro\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        reto\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Reto[]\n\n                    \n                \n                \n                    \n                        Valor por defecto : []\n                    \n                \n                    \n                        \n                                Definido en src/app/components/retos/retos.component.ts:15\n                        \n                    \n\n            \n                \n                    Array de Retos\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { Reto } from 'src/app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-retos',\n  templateUrl: './retos.component.html',\n  styleUrls: ['./retos.component.scss'],\n})\nexport class RetosComponent {\n\n  /**\n   * Array de Retos\n   */\n  public reto: Reto[] = [];\n\n  /**\n   * Recie retos como parámetro\n   */\n  @Input() retos: Reto[] = []\n\n  /**\n   * Constructor de clase\n   */\n  constructor() { }\n\n}\n\n    \n\n    \n        \n  \n    \n     \n     \n    \n\n  \n\n    \n\n    \n                \n                    ./retos.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FabLoginComponent', 'selector': 'app-fab-login'},{'name': 'FavoritosPage', 'selector': 'app-favoritos'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InfoRetoComponent', 'selector': 'app-info-reto'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MisRetosPage', 'selector': 'app-mis-retos'},{'name': 'NewRetoComponent', 'selector': 'app-new-reto'},{'name': 'NewsPagePage', 'selector': 'app-news-page'},{'name': 'NoticiaComponent', 'selector': 'app-noticia'},{'name': 'NoticiasComponent', 'selector': 'app-noticias'},{'name': 'PerfilPage', 'selector': 'app-perfil'},{'name': 'RankingPage', 'selector': 'app-ranking'},{'name': 'RegistroComponent', 'selector': 'app-registro'},{'name': 'RetoComponent', 'selector': 'app-reto'},{'name': 'RetosComponent', 'selector': 'app-retos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RetosComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/Source.html":{"url":"interfaces/Source.html","title":"interface - Source","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Source\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/app/interfaces/news.ts\n        \n\n\n            \n                Descripción\n            \n            \n                Interface para el manejo del Origen de la noticia\n\n            \n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Opcional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Identificador del origen\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del Origen\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface NewsResponse {\n  /**\n   * Estado de la peticion\n   */\n  status:       string;\n\n  /**\n   * Resultados totales de la peticion\n   */\n  totalResults: number;\n\n  /**\n   * Objeto tipo Article para manejar las noticias\n   */\n  articles:     Article[];\n}\n\n/**\n * Interface para el manejo de las noticias\n */\nexport interface Article {\n\n  /**\n   * Origen de la noticia\n   */\n  source:       Source;\n\n  /**\n   * Autor de la noticia\n   */\n  author?:      string;\n\n  /**\n   * Titulo de la noticia\n   */\n  title:        string;\n\n  /**\n   * Descripcion corta de la noticia\n   */\n  description?: string;\n\n  /**\n   * URL a la noticia completa\n   */\n  url:          string;\n\n  /**\n   * URL a la imagen de la noticia\n   */\n  urlToImage?:  string;\n\n  /**\n   * Fecha de publicacion\n   */\n  publishedAt:  string;\n\n  /**\n   * Contenido completo de la noticia\n   */\n  content?:     string;\n}\n\n/**\n * Interface para el manejo del Origen de la noticia\n */\nexport interface Source {\n\n  /**\n   * Identificador del origen\n   */\n  id?:  string;\n\n  /**\n   * Nombre del Origen\n   */\n  name: string;\n}\n\n/**\n * Interface para manejar las noticias de una Categoria concreta y por paginas. NO SE USA\n */\nexport interface ArticlesByCategoryAndPage {\n  [key: string] : {\n      page: number,\n      articles: Article[]\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Inyectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                newAvatar\n                            \n                            \n                                newRol\n                            \n                            \n                                    Private\n                                userEmail\n                            \n                            \n                                usuario\n                            \n                            \n                                usuariosCollection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                getMenuOpts\n                            \n                            \n                                getTotalPuntosByUser\n                            \n                            \n                                    Public\n                                getUserByEmail\n                            \n                            \n                                    Public\n                                getUserById\n                            \n                            \n                                getUserEmail\n                            \n                            \n                                getUsers\n                            \n                            \n                                getUsuariosPorPuntos\n                            \n                            \n                                setUserEmail\n                            \n                            \n                                updateUserAvatar\n                            \n                            \n                                updateUserPuntos\n                            \n                            \n                                updateUserRol\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firestore: AngularFirestore, http: HttpClient)\n                    \n                \n                        \n                            \n                                Definido en src/app/services/user.service.ts:39\n                            \n                        \n\n                \n                    \n                            Constructor de clase\n\n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                                    Descripción\n                                            \n                                        \n                                        \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de Firestore\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de http usado para peticiones json a los datos del menu\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        getMenuOpts\n                        \n                    \n                \n            \n            \n                \ngetMenuOpts(roles: string[])\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/user.service.ts:172\n                \n            \n\n\n            \n                \n                    Obtiene del JSON de roles las opciones adecuadas dependiendo del rol del usuario logado\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    roles\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        roles del usuario logado\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalPuntosByUser\n                        \n                    \n                \n            \n            \n                \ngetTotalPuntosByUser(user: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/user.service.ts:146\n                \n            \n\n\n            \n                \n                    Obtiene el total de puntos de un usuario concreto\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Usuario del que obtener los puntos\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getUserByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/user.service.ts:73\n                \n            \n\n\n            \n                \n                    Obtiene un Observable del usuario a traves de su email\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parametro pasado para buscar al usuario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserById(id: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/user.service.ts:88\n                \n            \n\n\n            \n                \n                    Devuelve un observable con el usuario buscado por Id\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id del usuario a buscar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserEmail\n                        \n                    \n                \n            \n            \n                \ngetUserEmail()\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/user.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/user.service.ts:62\n                \n            \n\n\n            \n                \n                    Obtiene un observable con todos los usuarios\n\n\n                    \n                    \n                    \n                        Devuelve :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsuariosPorPuntos\n                        \n                    \n                \n            \n            \n                \ngetUsuariosPorPuntos()\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/user.service.ts:160\n                \n            \n\n\n            \n                \n                    Obtiene una lista ordenada de los usuarios con más puntos. El de mayor puntuacion, arriba\n\n\n                    \n                    \n                    \n                        Devuelve :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUserEmail\n                        \n                    \n                \n            \n            \n                \nsetUserEmail(email: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/user.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserAvatar\n                        \n                    \n                \n            \n            \n                \nupdateUserAvatar(id: string, avatar: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/user.service.ts:129\n                \n            \n\n\n            \n                \n                    Metodo para cambiar el Avatar de un usuario\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id del usuario al que cambiar el Avatar\n\n                                    \n                                \n                                \n                                    avatar\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Imagen nueva del avatar (string saneado)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserPuntos\n                        \n                    \n                \n            \n            \n                \nupdateUserPuntos(user: string, puntos: number)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/user.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    puntos\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserRol\n                        \n                    \n                \n            \n            \n                \nupdateUserRol(id: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/user.service.ts:105\n                \n            \n\n\n            \n                \n                    Metodo para cambiar de rol al usuario: Retador  Administrador\n\n\n                    \n                        Parámetros :\n                        \n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id del usuario al que cambiar el Rol\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Propiedades\n    \n    \n        \n            \n                \n                    \n                    \n                        newAvatar\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                \n                    \n                        Valor por defecto : ''\n                    \n                \n                    \n                        \n                                Definido en src/app/services/user.service.ts:34\n                        \n                    \n\n            \n                \n                    variable que almacena la URL del nuevo avatar para cambiarlo\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newRol\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         string\n\n                    \n                \n                    \n                        \n                                Definido en src/app/services/user.service.ts:29\n                        \n                    \n\n            \n                \n                    variable para guardar el nuevo rol del usuario a cambiar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userEmail\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Definido en src/app/services/user.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuario\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         Usuario\n\n                    \n                \n                    \n                        \n                                Definido en src/app/services/user.service.ts:24\n                        \n                    \n\n            \n                \n                    Objeto tipo Usuario para manejar su informacion\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuariosCollection\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         AngularFirestoreCollection\n\n                    \n                \n                    \n                        \n                                Definido en src/app/services/user.service.ts:39\n                        \n                    \n\n            \n                \n                    almacena una coleccion de Usuarios para su colsulta\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/compat/firestore/';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { MenuOpts, Usuario } from '../interfaces/interfaces';\nimport { AuthService } from './auth.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private userEmail = new BehaviorSubject('');\n\n  /**\n   * Objeto tipo Usuario para manejar su informacion\n   */\n  usuario: Usuario;\n\n  /**\n   * variable para guardar el nuevo rol del usuario a cambiar\n   */\n  newRol: string;\n\n  /**\n   * variable que almacena la URL del nuevo avatar para cambiarlo\n   */\n  newAvatar: string = '';\n\n  /**\n   * almacena una coleccion de Usuarios para su colsulta\n   */\n  usuariosCollection: AngularFirestoreCollection;\n\n  /**\n   * Constructor de clase\n   * @param firestore Servicio de Firestore\n   * @param http Servicio de http usado para peticiones json a los datos del menu\n   */\n  constructor(private firestore: AngularFirestore,\n    private http: HttpClient\n  ) { }\n\n  setUserEmail(email: string) {\n    this.userEmail.next(email);\n  }\n\n  getUserEmail() {\n    return this.userEmail.asObservable();\n  }\n\n  /**\n   * Obtiene un observable con todos los usuarios\n   * @returns \n   */\n  getUsers(): Observable {\n\n    return this.firestore.collection('usuarios').valueChanges({ idField: 'id' });\n\n  }\n\n  /**\n   * Obtiene un Observable del usuario a traves de su email\n   * @param email Parametro pasado para buscar al usuario\n   * @returns \n   */\n  public getUserByEmail(email: string): Observable {\n\n    return this.firestore.collection('usuarios', ref => ref.where('EMAIL', '==', email).limit(1))\n      .valueChanges({ idField: 'id' })\n      .pipe(\n        map(usuarios => usuarios[0])\n      );\n\n  }\n\n  /**\n   * Devuelve un observable con el usuario buscado por Id\n   * @param id Id del usuario a buscar\n   * @returns \n   */\n  public getUserById(id: string): Observable {\n    return this.firestore.collection('usuarios', ref => ref.where('ID', '==', id).limit(1))\n      .valueChanges({ idField: 'id' })\n      .pipe(\n        map(usuarios => usuarios[0])\n      );\n  }\n\n  updateUserPuntos(user: string, puntos: number) {\n    \n  }\n\n  /**\n   * Metodo para cambiar de rol al usuario: Retador  Administrador\n   * @param id Id del usuario al que cambiar el Rol\n   * @returns \n   */\n  updateUserRol(id: string) {\n    this.getUserById(id).subscribe(usuario => {\n      this.usuario = usuario;\n    });\n\n    if (this.usuario.ROL == 'retador') {\n      this.newRol = 'admin';\n      console.log('cambio a', this.newRol);\n    } else {\n      this.newRol = 'retador';\n      console.log('cambio a', this.newRol);\n    }\n\n    return this.firestore.collection('usuarios').doc(id).update({\n      ROL: this.newRol\n    });\n  }\n\n  /**\n   * Metodo para cambiar el Avatar de un usuario\n   * @param id Id del usuario al que cambiar el Avatar\n   * @param avatar Imagen nueva del avatar (string saneado)\n   * @returns \n   */\n  updateUserAvatar(id: string, avatar: string) {\n\n    this.getUserById(id).subscribe(usuario => {\n      this.usuario = usuario;\n      this.newAvatar = this.usuario.AVATAR;\n      this.newAvatar = avatar;\n    });\n    return this.firestore.collection('usuarios').doc(id).update({\n      AVATAR: avatar\n    });\n\n  }\n  /**\n   * Obtiene el total de puntos de un usuario concreto\n   * @param user Usuario del que obtener los puntos\n   * @returns \n   */\n  getTotalPuntosByUser(user: string): Observable {\n\n    return this.firestore.collection('retosconseguidos', ref => ref.where('USER', '==', user))\n      .valueChanges({ idField: 'ID' })\n      .pipe(\n        map(retos => retos.reduce((total, reto) => total + reto.PUNTOS, 0))\n      );\n\n  }\n\n  /**\n   * Obtiene una lista ordenada de los usuarios con más puntos. El de mayor puntuacion, arriba\n   * @returns \n   */\n  getUsuariosPorPuntos(): Observable {\n\n    return this.firestore.collection('usuarios', ref => ref.orderBy('PUNTOS', 'desc'))\n      .valueChanges({ idField: 'ID' });\n\n  }\n\n  /**\n   * Obtiene del JSON de roles las opciones adecuadas dependiendo del rol del usuario logado\n   * @param roles roles del usuario logado\n   * @returns \n   */\n  getMenuOpts(roles: string[]) {\n\n    return this.http.get('/assets/data/menu.json')\n      .pipe(\n        map((menuOpts: MenuOpts[]) => {\n          return menuOpts.filter((menuOpt: MenuOpts) => {\n            return roles.includes(menuOpt.rol);\n          });\n        })\n      );\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/Usuario.html":{"url":"interfaces/Usuario.html","title":"interface - Usuario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Usuario\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Descripción\n            \n            \n                Interface para el manejo del Usuario. COLECCION: usuarios\n\n            \n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AVATAR\n                                        \n                                \n                                \n                                        \n                                            EMAIL\n                                        \n                                \n                                \n                                        \n                                            ID\n                                        \n                                \n                                \n                                        \n                                            NOMBRE\n                                        \n                                \n                                \n                                        \n                                            PASSWORD\n                                        \n                                \n                                \n                                        \n                                            PUNTOS\n                                        \n                                \n                                \n                                        \n                                            ROL\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        AVATAR\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AVATAR:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    URL de acceso al avatar.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EMAIL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        EMAIL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Email del usuario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador del usuario. Es el mismo que el autogenerado por Firebase para facilitar el manejo del objeto\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NOMBRE\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        NOMBRE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del usuario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PASSWORD\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        PASSWORD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Contraseña del usuario. No se envia ni se guarda. Solo se usa para el método de cambio de Password\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PUNTOS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        PUNTOS:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Puntos totales según el número de retos conseguidos\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ROL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ROL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rol del usuario. Puede ser Anónimo, Retador o Administrador\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Usuario {\n  /**\n   * Identificador del usuario. Es el mismo que el autogenerado por Firebase para facilitar el manejo del objeto\n   */\n  ID: string,\n\n  /**\n   * Nombre del usuario\n   */\n  NOMBRE: string,\n\n  /**\n   * Email del usuario\n   */\n  EMAIL: string,\n\n  /**\n   * Contraseña del usuario. No se envia ni se guarda. Solo se usa para el método de cambio de Password\n   */\n  PASSWORD: string,\n\n  /**\n   * Rol del usuario. Puede ser Anónimo, Retador o Administrador\n   */\n  ROL: string,\n\n  /**\n   * URL de acceso al avatar.\n   */\n  AVATAR: string,\n\n  /**\n   * Puntos totales según el número de retos conseguidos\n   */\n  PUNTOS: number\n}\n\n/**\n * Interface para el manejo de retos. COLECCION: retos\n */\nexport interface Reto {\n\n  /**\n   * Identificador del Reto. Es el mismo que el autogenerado por Firestore.\n   */\n  ID: string,\n\n  /**\n   * Titulo del reto\n   */\n  TITULO: string,\n\n  /**\n   * Descripcion larga del reto\n   */\n  DESCRIPCION: string,\n\n  /**\n   * Tipo de reto. Puede ser ocular, prismaticos o telescopio\n   */\n  TIPO: string,\n\n  /**\n   * Nivel del reto. Puede ser facil, intermedio o dificil\n   */\n  NIVEL: string,\n\n  /**\n   * Indica si el reto esta activo o no. El retador puede manejar los suyos. Los administradores, todos.\n   */\n  ACTIVO: boolean,\n\n  /**\n   * Marca retos destacados. TODAVIA NO ESTA IMPLEMENTADO\n   */\n  DESTACADO: boolean,\n\n  /**\n   * Email del retador.\n   */\n  RETADOR: string,\n\n  /**\n   * Imagen del reto subida por el retador\n   */\n  IMAGEN: string,\n}\n\n/**\n * Interface para manejar Favoritos. COLECCION: favoritos\n */\nexport interface Favorito {\n  /**\n   * Identificador del Reto.\n   */\n  ID_RETO: string;\n\n  /**\n   * Identificador de Favorito. Se guarda como campo el Identificador autogenerado para que sea más accesible \n   */\n  ID_FAV: string;\n\n  /**\n   * Email del usuario que marca el Favorito\n   */\n  USER: string;\n}\n\n/**\n * Interface para el manejo de los retos conseguidos. COLECCION: retosconseguidos\n */\nexport interface RetoConseguido {\n  /**\n   * Identificador del Reto.\n   */\n  ID_RETO: string;\n\n  /**\n   * Identificador del objeto, igual al autogenerado por Firestore\n   */\n  ID_RETO_CONSEGUIDO: string;\n\n  /**\n   * Email dle usuario que ha conseguido el reto\n   */\n  USER: string;\n\n  /**\n   * Puntos conseguidos por ese reto\n   */\n  PUNTOS: number;\n}\n\n/**\n * Interface para el manejo del Menu. Segun el rol del usuario, se cargaran unas opciones u otras.\n */\nexport interface MenuOpts {\n\n  /**\n   * Icono de la opcion de menu\n   */\n  icon: string;\n\n  /**\n   * Nombre a mostrar en el menu\n   */\n  name: string;\n\n  /**\n   * Página o tura a la que nos lleva la opcion\n   */\n  redirectTo: string;\n\n  /**\n   * Roles que tienen acceso: all, retador, administrador\n   */\n  rol: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Cobertura de la documentación\n\n\n\n    \n\n\n\n    \n        \n            Fichero\n            Tipo\n            Identificador\n            Declaraciones\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/components/fab-login/fab-login.component.ts\n            \n            component\n            FabLoginComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/info-reto/info-reto.component.ts\n            \n            component\n            InfoRetoComponent\n            \n                60 %\n                (12/20)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                \n                src/app/components/menu/menu.component.ts\n            \n            component\n            MenuComponent\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/components/new-reto/new-reto.component.ts\n            \n            component\n            NewRetoComponent\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                src/app/components/noticia/noticia.component.ts\n            \n            component\n            NoticiaComponent\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/components/noticias/noticias.component.ts\n            \n            component\n            NoticiasComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/components/registro/registro.component.ts\n            \n            component\n            RegistroComponent\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/components/reto/reto.component.ts\n            \n            component\n            RetoComponent\n            \n                96 %\n                (24/25)\n            \n        \n        \n            \n                \n                src/app/components/retos/retos.component.ts\n            \n            component\n            RetosComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/errores.ts\n            \n            interface\n            Error\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Favorito\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            MenuOpts\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Reto\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            RetoConseguido\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Usuario\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/interfaces/news.ts\n            \n            interface\n            Article\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/interfaces/news.ts\n            \n            interface\n            ArticlesByCategoryAndPage\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/news.ts\n            \n            interface\n            NewsResponse\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/news.ts\n            \n            interface\n            Source\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/pages/about/about.page.ts\n            \n            component\n            AboutPage\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/pages/admin/admin.page.ts\n            \n            component\n            AdminPage\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                src/app/pages/favoritos/favoritos.page.ts\n            \n            component\n            FavoritosPage\n            \n                91 %\n                (11/12)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.page.ts\n            \n            component\n            HomePage\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/pages/mis-retos/mis-retos.page.ts\n            \n            component\n            MisRetosPage\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/app/pages/news-page/news-page.page.ts\n            \n            component\n            NewsPagePage\n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                src/app/pages/perfil/perfil.page.ts\n            \n            component\n            PerfilPage\n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                src/app/pages/ranking/ranking.page.ts\n            \n            component\n            RankingPage\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                src/app/services/avisos.service.ts\n            \n            injectable\n            AvisosService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/services/menu.service.ts\n            \n            injectable\n            MenuService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/services/multimedia.service.ts\n            \n            injectable\n            MultimediaService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/services/news.service.ts\n            \n            injectable\n            NewsService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/services/news.service.ts\n            \n            variable\n            apiKey\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/news.service.ts\n            \n            variable\n            apiUrl\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/reto.service.ts\n            \n            injectable\n            RetoService\n            \n                97 %\n                (33/34)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                72 %\n                (13/18)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencias\n    \n    \n        \n            @angular/common : ^14.0.0\n        \n            @angular/core : ^14.0.0\n        \n            @angular/fire : ^7.5.0\n        \n            @angular/forms : ^14.0.0\n        \n            @angular/platform-browser : ^14.0.0\n        \n            @angular/platform-browser-dynamic : ^14.0.0\n        \n            @angular/router : ^14.0.0\n        \n            @awesome-cordova-plugins/http : ^6.3.0\n        \n            @awesome-cordova-plugins/in-app-browser : ^6.3.0\n        \n            @awesome-cordova-plugins/social-sharing : ^6.3.0\n        \n            @awesome-cordova-plugins/splash-screen : ^6.3.0\n        \n            @capacitor/app : 4.1.0\n        \n            @capacitor/camera : ^4.1.4\n        \n            @capacitor/core : 4.4.0\n        \n            @capacitor/filesystem : ^4.1.4\n        \n            @capacitor/haptics : 4.0.1\n        \n            @capacitor/keyboard : 4.0.1\n        \n            @capacitor/preferences : ^4.0.2\n        \n            @capacitor/status-bar : 4.0.1\n        \n            @ionic/angular : ^6.1.9\n        \n            @ionic/pwa-elements : ^3.1.1\n        \n            @ionic/storage : ^3.0.6\n        \n            @ionic/storage-angular : ^3.0.6\n        \n            cordova-plugin-advanced-http : ^3.3.1\n        \n            cordova-plugin-inappbrowser : ^5.0.0\n        \n            cordova-plugin-splashscreen : ^6.0.2\n        \n            ionicons : ^6.0.3\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.2.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Descripción general\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\ncluster_AboutPageModule_imports\n\n\n\ncluster_AdminPageModule\n\n\n\ncluster_AdminPageModule_declarations\n\n\n\ncluster_AdminPageModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ComponentsModule\n\n\n\ncluster_ComponentsModule_declarations\n\n\n\ncluster_ComponentsModule_exports\n\n\n\ncluster_FavoritosPageModule\n\n\n\ncluster_FavoritosPageModule_declarations\n\n\n\ncluster_FavoritosPageModule_imports\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_MisRetosPageModule\n\n\n\ncluster_MisRetosPageModule_declarations\n\n\n\ncluster_MisRetosPageModule_imports\n\n\n\ncluster_NewsPagePageModule\n\n\n\ncluster_NewsPagePageModule_declarations\n\n\n\ncluster_NewsPagePageModule_imports\n\n\n\ncluster_PerfilPageModule\n\n\n\ncluster_PerfilPageModule_declarations\n\n\n\ncluster_PerfilPageModule_imports\n\n\n\ncluster_RankingPageModule\n\n\n\ncluster_RankingPageModule_declarations\n\n\n\ncluster_RankingPageModule_imports\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\nAboutPageRoutingModule\n\nAboutPageRoutingModule\n\nAboutPageModule -->\n\nAboutPageRoutingModule->AboutPageModule\n\n\n\n\n\nAdminPage\n\nAdminPage\n\n\n\nAdminPageModule\n\nAdminPageModule\n\nAdminPageModule -->\n\nAdminPage->AdminPageModule\n\n\n\n\n\nAdminPageRoutingModule\n\nAdminPageRoutingModule\n\nAdminPageModule -->\n\nAdminPageRoutingModule->AdminPageModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nFabLoginComponent\n\nFabLoginComponent\n\n\n\nComponentsModule\n\nComponentsModule\n\nComponentsModule -->\n\nFabLoginComponent->ComponentsModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nComponentsModule -->\n\nHeaderComponent->ComponentsModule\n\n\n\n\n\nInfoRetoComponent\n\nInfoRetoComponent\n\nComponentsModule -->\n\nInfoRetoComponent->ComponentsModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nComponentsModule -->\n\nLoginComponent->ComponentsModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nComponentsModule -->\n\nMenuComponent->ComponentsModule\n\n\n\n\n\nNewRetoComponent\n\nNewRetoComponent\n\nComponentsModule -->\n\nNewRetoComponent->ComponentsModule\n\n\n\n\n\nNoticiaComponent\n\nNoticiaComponent\n\nComponentsModule -->\n\nNoticiaComponent->ComponentsModule\n\n\n\n\n\nNoticiasComponent\n\nNoticiasComponent\n\nComponentsModule -->\n\nNoticiasComponent->ComponentsModule\n\n\n\n\n\nRegistroComponent\n\nRegistroComponent\n\nComponentsModule -->\n\nRegistroComponent->ComponentsModule\n\n\n\n\n\nRetoComponent\n\nRetoComponent\n\nComponentsModule -->\n\nRetoComponent->ComponentsModule\n\n\n\n\n\nRetosComponent\n\nRetosComponent\n\nComponentsModule -->\n\nRetosComponent->ComponentsModule\n\n\n\n\n\nFabLoginComponent \n\nFabLoginComponent \n\nFabLoginComponent  -->\n\nComponentsModule->FabLoginComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nComponentsModule->HeaderComponent \n\n\n\n\n\nInfoRetoComponent \n\nInfoRetoComponent \n\nInfoRetoComponent  -->\n\nComponentsModule->InfoRetoComponent \n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nComponentsModule->LoginComponent \n\n\n\n\n\nMenuComponent \n\nMenuComponent \n\nMenuComponent  -->\n\nComponentsModule->MenuComponent \n\n\n\n\n\nNewRetoComponent \n\nNewRetoComponent \n\nNewRetoComponent  -->\n\nComponentsModule->NewRetoComponent \n\n\n\n\n\nNoticiasComponent \n\nNoticiasComponent \n\nNoticiasComponent  -->\n\nComponentsModule->NoticiasComponent \n\n\n\n\n\nRegistroComponent \n\nRegistroComponent \n\nRegistroComponent  -->\n\nComponentsModule->RegistroComponent \n\n\n\n\n\nRetoComponent \n\nRetoComponent \n\nRetoComponent  -->\n\nComponentsModule->RetoComponent \n\n\n\n\n\nRetosComponent \n\nRetosComponent \n\nRetosComponent  -->\n\nComponentsModule->RetosComponent \n\n\n\n\n\nFavoritosPage\n\nFavoritosPage\n\n\n\nFavoritosPageModule\n\nFavoritosPageModule\n\nFavoritosPageModule -->\n\nFavoritosPage->FavoritosPageModule\n\n\n\n\n\nFavoritosPageRoutingModule\n\nFavoritosPageRoutingModule\n\nFavoritosPageModule -->\n\nFavoritosPageRoutingModule->FavoritosPageModule\n\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nMisRetosPage\n\nMisRetosPage\n\n\n\nMisRetosPageModule\n\nMisRetosPageModule\n\nMisRetosPageModule -->\n\nMisRetosPage->MisRetosPageModule\n\n\n\n\n\nMisRetosPageRoutingModule\n\nMisRetosPageRoutingModule\n\nMisRetosPageModule -->\n\nMisRetosPageRoutingModule->MisRetosPageModule\n\n\n\n\n\nNewsPagePage\n\nNewsPagePage\n\n\n\nNewsPagePageModule\n\nNewsPagePageModule\n\nNewsPagePageModule -->\n\nNewsPagePage->NewsPagePageModule\n\n\n\n\n\nNewsPagePageRoutingModule\n\nNewsPagePageRoutingModule\n\nNewsPagePageModule -->\n\nNewsPagePageRoutingModule->NewsPagePageModule\n\n\n\n\n\nPerfilPage\n\nPerfilPage\n\n\n\nPerfilPageModule\n\nPerfilPageModule\n\nPerfilPageModule -->\n\nPerfilPage->PerfilPageModule\n\n\n\n\n\nPerfilPageRoutingModule\n\nPerfilPageRoutingModule\n\nPerfilPageModule -->\n\nPerfilPageRoutingModule->PerfilPageModule\n\n\n\n\n\nRankingPage\n\nRankingPage\n\n\n\nRankingPageModule\n\nRankingPageModule\n\nRankingPageModule -->\n\nRankingPage->RankingPageModule\n\n\n\n\n\nRankingPageRoutingModule\n\nRankingPageRoutingModule\n\nRankingPageModule -->\n\nRankingPageRoutingModule->RankingPageModule\n\n\n\n\n\n\n    \n    \n    \n        Ampliar\n        Restablecer\n        Alejar\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        19 Módulos\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    20 Componentes\n                \n            \n        \n        \n            \n                \n                    \n                    7 Inyectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        26 Rutas\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Módulos\n\n\n    \n            \n                \n                    \n                        AboutPageModule\n                    \n                    \n                                \n                                    \n                                        Tu navegador no soporta SVG\n                                    \n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n            \n                \n                    \n                        AboutPageRoutingModule\n                    \n                    \n                                \n                                    No hay gráfica disponible.\n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n            \n                \n                    \n                        AdminPageModule\n                    \n                    \n                                \n                                    \n                                        Tu navegador no soporta SVG\n                                    \n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n            \n                \n                    \n                        AdminPageRoutingModule\n                    \n                    \n                                \n                                    No hay gráfica disponible.\n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Tu navegador no soporta SVG\n                                    \n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No hay gráfica disponible.\n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n            \n                \n                    \n                        ComponentsModule\n                    \n                    \n                                \n                                    \n                                        Tu navegador no soporta SVG\n                                    \n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n            \n                \n                    \n                        FavoritosPageModule\n                    \n                    \n                                \n                                    \n                                        Tu navegador no soporta SVG\n                                    \n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n            \n                \n                    \n                        FavoritosPageRoutingModule\n                    \n                    \n                                \n                                    No hay gráfica disponible.\n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Tu navegador no soporta SVG\n                                    \n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageRoutingModule\n                    \n                    \n                                \n                                    No hay gráfica disponible.\n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n            \n                \n                    \n                        MisRetosPageModule\n                    \n                    \n                                \n                                    \n                                        Tu navegador no soporta SVG\n                                    \n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n            \n                \n                    \n                        MisRetosPageRoutingModule\n                    \n                    \n                                \n                                    No hay gráfica disponible.\n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsPagePageModule\n                    \n                    \n                                \n                                    \n                                        Tu navegador no soporta SVG\n                                    \n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsPagePageRoutingModule\n                    \n                    \n                                \n                                    No hay gráfica disponible.\n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n            \n                \n                    \n                        PerfilPageModule\n                    \n                    \n                                \n                                    \n                                        Tu navegador no soporta SVG\n                                    \n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n            \n                \n                    \n                        PerfilPageRoutingModule\n                    \n                    \n                                \n                                    No hay gráfica disponible.\n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n            \n                \n                    \n                        RankingPageModule\n                    \n                    \n                                \n                                    \n                                        Tu navegador no soporta SVG\n                                    \n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n            \n                \n                    \n                        RankingPageRoutingModule\n                    \n                    \n                                \n                                    No hay gráfica disponible.\n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Propiedades\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : Proyecto fin de Módulo DAMN\n        \n            Homepage : https://github.com/valverdenyo/AstroRetos/\n        \n            Author : Juanma Pérez\n    \n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Rutas\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscelánea\n  Variables\n\n\n\n    Índice\n    \n        \n            \n                \n                    \n                        \n                            apiKey   (src/.../news.service.ts)\n                        \n                        \n                            apiUrl   (src/.../news.service.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/news.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apiKey\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : environment.news.apiKey\n                    \n                \n\n            \n                \n                    API del servicio de noticias apinews\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Valor por defecto : environment.news.apiUrl\n                    \n                \n\n            \n                \n                    URL del servicio\n\n                \n            \n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         object\n\n                    \n                \n                \n                    \n                        Valor por defecto : {\n  production: true,\n  firebase: {\n    apiKey: \"AIzaSyATL9Wb8BZ5htLOS4Vy_eEIEvXJ5DlrCI4\",\n    authDomain: \"astroretos-db.firebaseapp.com\",\n    projectId: \"astroretos-db\",\n    storageBucket: \"astroretos-db.appspot.com\",\n    messagingSenderId: \"49988289409\",\n    appId: \"1:49988289409:web:134b5a76a7893164751e80\",\n    measurementId: \"G-QCJVPE1F4N\"\n  },\n  news: {\n    apiKey: '392c4ef2447040d1aab42bffac29c335',\n    apiUrl: 'https://newsapi.org/v2'\n  }\n}\n                    \n                \n\n            \n                \n                    Pone en producción la aplicación.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Tipo :         object\n\n                    \n                \n                \n                    \n                        Valor por defecto : {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyATL9Wb8BZ5htLOS4Vy_eEIEvXJ5DlrCI4\",\n    authDomain: \"astroretos-db.firebaseapp.com\",\n    projectId: \"astroretos-db\",\n    storageBucket: \"astroretos-db.appspot.com\",\n    messagingSenderId: \"49988289409\",\n    appId: \"1:49988289409:web:134b5a76a7893164751e80\",\n    measurementId: \"G-QCJVPE1F4N\"\n  },\n  news: {\n    apiKey: '392c4ef2447040d1aab42bffac29c335',\n    apiUrl: 'https://newsapi.org/v2'\n  }\n}\n                    \n                \n\n            \n                \n                    This file can be replaced during build by using the fileReplacements array.\nng build --prod replaces environment.ts with environment.prod.ts.\nThe list of file replacements can be found in angular.json.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         comparación de resultados \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"}}
}
